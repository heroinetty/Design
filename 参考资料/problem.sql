

-- ----------------------------
-- Records of problem
-- ----------------------------
INSERT INTO `problem` VALUES ('1', ' A+B Problem', '<p>输入两个自然数，输出他们的和<br /></p>', '[{\"input\": \"123 500\\n\", \"output\": \"623\\n\"}]', '1000', '<p>[b]Free Pascal Code:[/b]<br />-------------------<br />program Plus;<br />var a,b:longint;<br />begin<br />  readln(a,b);<br />  writeln(a+b);<br />end.<br />[b]C++ Code:[/b]<br />-------------------<br />#include <iostream><br />using namespace std;<br />int main(){<br />  int a,b;<br />  cin>>a>>b;<br />  cout<<a+b<<endl;<br />  return 0;<br />}<br /></p>', '2016-08-18 14:11:56.000000', '', '10000', '128', '1', '0', '0', '3', '1', '两个自然数x和y(0<=x,y<=32767)\\n', '一个数，即x和y的和\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('2', ' 谁拿了最多奖学金', '<p>    某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：<br />    1)  院士奖学金，每人8000元，期末平均成绩高于80分（>80），并且在本学期内发表1篇或1篇以上论文的学生均可获得；<br />    2)  五四奖学金，每人4000元，期末平均成绩高于85分（>85），并且班级评议成绩高于80分（>80）的学生均可获得；<br />    3)  成绩优秀奖，每人2000元，期末平均成绩高于90分（>90）的学生均可获得；<br />    4)  西部奖学金，每人1000元，期末平均成绩高于85分（>85）的西部省份学生均可获得；<br />    5)  班级贡献奖，每人850元，班级评议成绩高于80分（>80）的学生干部均可获得；<br />    只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是87分，班级评议成绩82分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是4850元。<br />    现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。<br /></p>', '[{\"input\": \"4\\nYaoLin 87 82 Y N 0\\nChenRuiyi 88 78 N Y 1\\nLiXin 92 88 N N 0\\nZhangQin 83 87 Y N 1\\n\", \"output\": \"ChenRuiyi\\n9000\\n28700\\n\"}]', '1001', '<p></p>', '2016-08-18 14:11:56.000000', 'NOIp2005 第一题\\n', '1000', '128', '1', '1', '1', '1', '1', '    输入的第一行是一个整数N（1 <= N <= 100），表示学生的总数。接下来的N行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过20的字符串（不含空格）；期末平均成绩和班级评议成绩都是0到100之间的整数（包括0和100）；是否是学生干部和是否是西部省份学生分别用一个字符表示，Y表示是，N表示不是；发表的论文数是0到10的整数（包括0和10）。每两个相邻数据项之间用一个空格分隔。\\n', '    输出包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。第三行是这N个学生获得的奖学金的总数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('3', ' 过河', '<p>    在河上有一座独木桥，一只青蛙想沿着独木桥从河的一侧跳到另一侧。在桥上有一些石子，青蛙很讨厌踩在这些石子上。由于桥的长度和青蛙一次跳过的距离都是正整数，我们可以把独木桥上青蛙可能到达的点看成数轴上的一串整点：0，1，……，L（其中L是桥的长度）。坐标为0的点表示桥的起点，坐标为L的点表示桥的终点。青蛙从桥的起点开始，不停的向终点方向跳跃。一次跳跃的距离是S到T之间的任意正整数（包括S,T）。当青蛙跳到或跳过坐标为L的点时，就算青蛙已经跳出了独木桥。<br />    题目给出独木桥的长度L，青蛙跳跃的距离范围S,T，桥上石子的位置。你的任务是确定青蛙要想过河，最少需要踩到的石子数。<br />    对于30%的数据，L <= 10000；<br />    对于全部的数据，L <= 10^9。<br /></p>', '[{\"input\": \"10\\n2 3 5\\n2 3 5 6 7\\n\", \"output\": \"2\\n\"}]', '1002', '<p></p>', '2016-08-18 14:11:56.000000', 'NOIp2005 第二题\\n', '1000', '128', '1', '0', '0', '2', '1', '    输入的第一行有一个正整数L（1 <= L <= 10^9），表示独木桥的长度。第二行有三个正整数S，T，M，分别表示青蛙一次跳跃的最小距离，最大距离，及桥上石子的个数，其中1 <= S <= T <= 10，1 <= M <= 100。第三行有M个不同的正整数分别表示这M个石子在数轴上的位置（数据保证桥的起点和终点处没有石子）。所有相邻的整数之间用一个空格隔开。\\n', '    输出只包括一个整数，表示青蛙过河最少需要踩到的石子数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('4', ' 等价表达式', '<p>    明明进了中学之后，学到了代数表达式。有一天，他碰到一个很麻烦的选择题。这个题目的题干中首先给出了一个代数表达式，然后列出了若干选项，每个选项也是一个代数表达式，题目的要求是判断选项中哪些代数表达式是和题干中的表达式等价的。<br />    这个题目手算很麻烦，因为明明对计算机编程很感兴趣，所以他想是不是可以用计算机来解决这个问题。假设你是明明，能完成这个任务吗？<br /> <br />    这个选择题中的每个表达式都满足下面的性质：<br />    1．  表达式只可能包含一个变量‘a’。<br />    2．  表达式中出现的数都是正整数，而且都小于10000。<br />    3．  表达式中可以包括四种运算‘+’（加），‘-’（减），‘*’（乘），‘^’（乘幂），以及小括号‘(’，‘)’。小括号的优先级最高，其次是‘^’，然后是‘*’，最后是‘+’和‘-’。‘+’和‘-’的优先级是相同的。相同优先级的运算从左到右进行。（注意：运算符‘+’，‘-’，‘*’，‘^’以及小括号‘(’，‘)’都是英文字符）<br />    4．  幂指数只可能是1到10之间的正整数（包括1和10）。<br />    5．  表达式内部，头部或者尾部都可能有一些多余的空格。<br />    下面是一些合理的表达式的例子：<br />((a^1) ^ 2)^3，a*a+a-a，((a+a))，9999+(a-a)*a，1 + (a -1)^3，1^10^9……<br /><br />对于30%的数据，表达式中只可能出现两种运算符‘+’和‘-’；<br />对于其它的数据，四种运算符‘+’，‘-’，‘*’，‘^’在表达式中都可能出现。<br />对于全部的数据，表达式中都可能出现小括号‘(’和‘)’。<br /></p>', '[{\"input\": \"( a + 1) ^2\\n3\\n(a-1)^2+4*a\\na  + 1+ a\\na^2 + 2 * a * 1 + 1^2 + 10 -10 +a -a\\n\", \"output\": \"AC\\n\"}]', '1003', '<p></p>', '2016-08-18 14:11:56.000000', 'NOIp2005 第四题\\n', '1000', '128', '1', '0', '0', '2', '1', '    输入的第一行给出的是题干中的表达式。第二行是一个整数n（2 <= n <= 26），表示选项的个数。后面n行，每行包括一个选项中的表达式。这n个选项的标号分别是A，B，C，D……\\n\\n    输入中的表达式的长度都不超过50个字符，而且保证选项中总有表达式和题干中的表达式是等价的。\\n', '    输出包括一行，这一行包括一系列选项的标号，表示哪些选项是和题干中的表达式等价的。选项的标号按照字母顺序排列，而且之间没有空格。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('5', ' 伊甸园日历游戏', '<p>   Adam和Eve玩一个游戏，他们先从1900.1.1到2001.11.4这个日期之间随意抽取一个日期出来。然后他们轮流对这个日期进行操作：<br />   1 ： 把日期的天数加1，例如1900.1.1变到1900.1.2<br />   2 ： 把月份加1，例如：1900.1.1变到1900.2.1<br />   其中如果天数超过应有天数则日期变更到下个月的第1天。月份超过12则变到下一年的1月。而且进行操作二的时候，如果有这样的日期：1900.1.31，则变成了1900.2.31，这样的操作是非法的，我们不允许这样做。而且所有的操作均要考虑历法和闰年的规定。<br />   谁先将日期变到2001.11.4谁就赢了。<br />   每次游戏都是Adam先操作，问他有没有必胜策略？<br /></p>', '[{\"input\": \"3\\n2001 11 3\\n2001 11 2\\n2001 10 3\\n\", \"output\": \"YES\\nNO\\nNO\\n\"}]', '1004', '<p>  建议先把所有情况都算出来^_^<br /></p>', '2016-08-18 14:11:56.000000', 'From ZJU\\n', '10000', '128', '1', '0', '0', '1', '1', '  一个测试点。多组数据。\\n  第一行为数据组数。\\n  接下来一行X Y Z表示X年Y月Z日\\n', '  输出“YES”or“NO”表示亚当是否有必胜策略。 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('6', ' 超长数字串', '<p>他最喜欢的是数字的无穷序列，结果是把所有的自然数按升序排列。这个序列开始是： 1234567891011121314... 我们叫序列 S。然后 S[1] = 1, S[2] = 2, ... , S[10] = 1, S[11] = 0, ... , 以此类推。 <br />George 现有一个数字系列 A ，他想知道在S中最早出现的位置。帮助他解决这个难题。<br /></p>', '[{\"input\": \"101\\n\", \"output\": \"10\\n\"}]', '1005', '<p></p>', '2016-08-18 14:11:56.000000', 'Ural State University Problem Archive\\n', '10000', '128', '1', '1', '0', '3', '1', '输入文件包含 A - 给出的数字系列。位数不超过 200。没有空格。\\n', '输出一个整数。- 最小的 k ，使 A[1] = S[k], A[2] = S[k+1], ... A[len(A)] = S[k + len(A) －1], len(A) 表示 A 的长度。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('7', ' 晴天小猪历险记之Hill', '<p>    这一天，他来到了一座深山的山脚下，因为只有这座深山中的一位隐者才知道这种药草的所在。但是上山的路错综复杂，由于小小猪的病情，晴天小猪想找一条需时最少的路到达山顶，但现在它一头雾水，所以向你求助。<br />    山用一个三角形表示，从山顶依次向下有1段、2段、3段等山路，每一段用一个数字T（1<=T<=100）表示，代表晴天小猪在这一段山路上需要爬的时间，每一次它都可以朝左、右、左上、右上四个方向走（**注意**：在任意一层的第一段也可以走到本层的最后一段或上一层的最后一段）。<br />    晴天小猪从山的左下角出发，目的地为山顶，即隐者的小屋。<br /></p>', '[{\"input\": \"5\\n1\\n2 3\\n4 5 6\\n10 1 7 8\\n1 1 4 5 6\\n\", \"output\": \"10\\n\"}]', '1006', '<p>在山的两侧的走法略有特殊，请自己模拟一下，开始我自己都弄错了……<br /></p>', '2016-08-18 14:11:56.000000', 'Sunnypig\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行有一个数n（2<=n<=1000），表示山的高度。\\n    从第二行至第n+1行，第i+1行有i个数，每个数表示晴天小猪在这一段山路上需要爬的时间。\\n', '    一个数，即晴天小猪所需要的最短时间。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('8', ' 绕钉子的长绳子', '<p>求出绳子的长度<br /></p>', '[{\"input\": \"4 1\\n0.0 0.0\\n2.0 0.0\\n2.0 2.0\\n0.0 2.0\\n\", \"output\": \"14.28\\n\"}]', '1007', '<p>如果你用比较复杂的方法AC了，请想一想有没有更加简便的方法。<br /></p>', '2016-08-18 14:11:56.000000', 'Ural\\n', '10000', '128', '1', '0', '0', '1', '1', '第1行两个数：整数N(1<=N<=100)和实数R。\\n接下来N行按逆时针顺序给出N个钉子中心的坐标\\n坐标的绝对值不超过100。\\n', '一个数，绳子的长度，精确到小数点后2位。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('9', ' 篝火晚会', '<p>    佳佳刚进高中，在军训的时候，由于佳佳吃苦耐劳，很快得到了教官的赏识，成为了“小教官”。在军训结束的那天晚上，佳佳被命令组织同学们进行篝火晚会。一共有n个同学，编号从1到n。一开始，同学们按照1，2，……，n的顺序坐成一圈，而实际上每个人都有两个最希望相邻的同学。如何下命令调整同学的次序，形成新的一个圈，使之符合同学们的意愿，成为摆在佳佳面前的一大难题。<br />    佳佳可向同学们下达命令，每一个命令的形式如下：<br />    (b1, b2,... bm -1, bm)<br />    这里m的值是由佳佳决定的，每次命令m的值都可以不同。这个命令的作用是移动编号是b1，b2，…… bm –1，bm的这m个同学的位置。要求b1换到b2的位置上，b2换到b3的位置上，……，要求bm换到b1的位置上。<br />    执行每个命令都需要一些代价。我们假定如果一个命令要移动m个人的位置，那么这个命令的代价就是m。我们需要佳佳用最少的总代价实现同学们的意愿，你能帮助佳佳吗?<br />    对于30%的数据，n <= 1000；<br />    对于全部的数据，n <= 50000。<br /></p>', '[{\"input\": \"4\\n3 4\\n4 3\\n1 2\\n1 2\\n\", \"output\": \"2\\n\"}]', '1008', '<p></p>', '2016-08-18 14:11:56.000000', 'NOIp2005 第三题\\n', '1000', '128', '1', '0', '0', '1', '1', '    输入的第一行是一个整数n（3 <= n <= 50000），表示一共有n个同学。其后n行每行包括两个不同的正整数，以一个空格隔开，分别表示编号是1的同学最希望相邻的两个同学的编号，编号是2的同学最希望相邻的两个同学的编号，……，编号是n的同学最希望相邻的两个同学的编号。\\n', '    输出包括一行，这一行只包含一个整数，为最小的总代价。如果无论怎么调整都不能符合每个同学的愿望，则输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('10', ' 清帝之惑之康熙', '<p>    话说西汉时期，汉武帝刘彻派遣张骞出使西域，欲同月氏国结交而共驱匈奴。同时，月氏国也欲同大汉结交，也派出使者康破伦出使大汉，可是因为月氏国对于大汉的认知甚少，康破伦同样向西出使大汉。一开始，张骞从大汉出发，康破伦从月氏国出发，两人都在同一纬度线上，张骞所处的经度为x，康破伦所处的经度为y；接下来，两人同时向西走，而且只能向西走，张骞每天走m公里，康破伦每天走n公里，且每天走路的速度不变，也不停下来休息；这样两人就在这一条长为L的纬度线上一直向西走。问：过了多少天之后张骞和康破伦会碰面，并磋商两国结交之事（所谓碰面，是指两人处在同一经度上）。<br />    这下，康熙犯难了，他还是个不大的青年，怎么可能做得出这么难的题目；但是，他又是统领全国的帝皇，怎么能在老师面前丢这么大一个面子。康熙想：不行！一定得把这个题做出来！（然后就有了下面这段记录）<br />    第一天，……<br />    第二天，…………<br />    第三天，………………<br />    第四天，……………………<br />    第五天，…………………………<br />    第六天，………………………………<br />    第七天，……………………………………！！！！！！！<br />    啊！第七天，康熙终于打了7个感叹号，得出了一个重要的结论！！！！！那就是——做不出来。（汗），没办法，他只有请教你，他的挚友，帮他解决这一难题。康熙答应你，如果你把这一题做出来了，你将得到御赐赏银一万万两！$$$$$$$$-$$$$$$$$。为了改变你生活的现状——衣衫褴褛、闻鼠起舞、蟑螂为伴，你下定了决心——我一定得把这题解决！<br /></p>', '[{\"input\": \"1 2 3 4 5\\n\", \"output\": \"4\\n\"}]', '1009', '<p></p>', '2016-08-18 14:12:15.000000', 'From PKU 1061\\n', '10000', '128', '1', '0', '0', '3', '1', '    输入只包括一行5个整数x，y，m，n，L\\n    其中0<x≠y < =2000000000，0 < m、n < =2000000000，0 < L < =2100000000。\\n', '    输出碰面所需要的天数，如果永远不可能碰面则输出一行\"Impossible\"。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('11', ' 清帝之惑之乾隆', '<p>    话说乾隆带着他的宰相刘罗锅和你出巡江南，被杭州城府邀请去听戏，至于什么戏，那就不知了。乾隆很高兴，撒酒与君臣共享。三更欲回住处，可是乾隆这人挺怪，他首先要到西湖边散散步，而且命令不准有人跟着他。<br />    小醉，步于西湖岸，停于断桥前，突闻琴声悠悠，歌儿婉婉。这乐曲不哀伤不愁怅，少了一分怨女的羁绊，多了一分少女的期盼。乾隆走上前去，视其背影，为一女子手抚古琴，悠悠而唱。可是这么晚了，小女怎么还不回家呢，莫非是她起早床？乾隆走上前去，小声问道：“伊为何未宿？”，小女沉默片刻，转身而来。顿时，顿时，顿时！！！！！乾隆惊呆了！！！！哇！！！！噻！！！！！！这人，这伊！！！！原来！！！！！！！不是一个美女（狂汗ing）。小女并未回答她的话，只是与乾隆侃了侃诗。乾隆兴哉，问其曰：“不知偶能助伊否？”，小女曰：“偶无所以助，且有一事相求，愿君能解之。”<br />    乾隆一看，立刻晕到在地，片刻而起，曰：“明日必解之”，且去。<br />    回到家中，乾隆夜召你“入寝”，曰：“如此姑娘，如此情调，如此罗曼蒂克，竟然丢一个如此煞风景之问”，一边发气，一边把这个问题交给你。你一看，顿然发现，原来是用蝌蚪文写的：<br />    Problems involving the computation of exact values of very large magnitude and precision are common. For example, the computation of the national debt is a taxing experience for many computer systems. <br />    This problem requires that you write a program to compute the exact value of Rn where R is a real number ( 0.0 < R <= 9999.9) and n is an integer such that 0 < n <= 200. <br />    此时的你，已经是皇帝身边的小太监，自然有必要为皇上解决此题。<br /></p>', '[{\"input\": \"95.123  2\\n0.4321  5\\n5.1234  7\\n6.7592  3\\n98.999  5\\n1.0100 10\\n\", \"output\": \"9048.385129\\n.01506334182914325601\\n92663.3181348508776705891407804544\\n308.806114738688\\n9509420210.697891990494999\\n1.10462212541120451001\\n\"}]', '1010', '<p></p>', '2016-08-18 14:12:15.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '1', '1', '    The input will consist of a set (less than 11) of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9.\\n', '    The output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don\'t print the decimal point if the result is an integer.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('12', ' 清帝之惑之顺治', '<p>    顺治喜欢滑雪，这并不奇怪， 因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待太监们来载你。顺治想知道载一个区域中最长的滑坡。<br />    区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子：<br /><br />     1  2  3  4 5<br />    16 17 18 19 6<br />    15 24 25 20 7<br />    14 23 22 21 8<br />    13 12 11 10 9<br />    顺治可以从某个点滑向上下左右相邻四个点之一，当且仅当高度减小。在上面的例子中，一条可滑行的滑坡为24-17-16-1。当然25-24-23-...-3-2-1更长。事实上，这是最长的一条。<br /></p>', '[{\"input\": \"5 5\\n1 2 3 4 5\\n16 17 18 19 6\\n15 24 25 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"output\": \"25\\n\"}]', '1011', '<p></p>', '2016-08-18 14:12:15.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '1', '1', '    输入的第一行表示区域的行数R和列数C(1 <= R,C <= 500)。下面是R行，每行有C个整数，代表高度h，0<=h<=10000。\\n', '    输出最长区域的长度。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('13', ' 清帝之惑之雍正', '<p>    话说雍正为了实施促进城市间沟通的政策，他计划在所有的大城市里挑选两个城市，在两个城市之间修建一条运河，这条运河要求是笔直的，以加强这两个城市的经济往来。但雍正希望这条运河长度越短越好，他请来了宰相和大学士帮他解决这个问题——到底挑哪两个大城市，在其间建造运河，使得其长度最小，最小为多少？可是经过长时间的计算和判断，仍然没有得出结果。此时，雍正想到了当初为康熙解决难题的你，是如此的智慧，如此的聪明绝顶。他亲自来到茅厕，找到了你（你当时已然是一个扫厕所的了），希望你能帮他解决这个问题，必定“厚”谢。你欣然答应了。<br />    雍正将大致的情况告诉了你，并且说：大清一共有n个大城市，所有的大城市都不在同一个地点，同时我们对这n个城市从1到n进行编号；对于一个城市k，他有两个属性，一个是Xk，一个是Yk，分别表示这个城市所处的经度和纬度。请你告诉他问题的结果：L，即运河长度。（你可以假定地球是平面的）<br /></p>', '[{\"input\": \"2\\n1 1\\n2 2\\n\", \"output\": \"1.414\\n\"}]', '1012', '<p></p>', '2016-08-18 14:17:32.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '2', '1', '    第1行，一个整数n。\\n    从第2行到n+1行，按照i从小到大顺序，每行两个整数Xi，Yi，代表编号为i的城市的经度和纬度。\\n    其中2<=n <=100000，1<=Xi,Yi<2^31。\\n', '    一个实数L（保留三位小数）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('14', ' 强墙', '<p>    在一个长宽均为10，入口出口分别为（0，5）、（10，5）的房间里，有几堵墙，每堵墙上有两个缺口，求入口到出口的最短路经。<br />    [IMG]http://www.Vijos.cn/ProblemImg/P1013.gif[/IMG]<br /></p>', '[{\"input\": \"2\\n4 2 7 8 9\\n7 3 4.5 6 7\\n\", \"output\": \"10.06\\n\"}]', '1013', '<p></p>', '2016-08-18 14:17:44.000000', '  Tsuzuki Matsumoto \\n  From ZJU\\n', '10000', '128', '1', '0', '0', '1', '1', '  第一排为n(n<=20)，墙的数目。\\n  接下来n排，每排5个实数x，a1，b1，a2，b2。\\n  x表示墙的横坐标（所有墙都是竖直的），a1-b1和a2-b2之间为空缺。\\n  a1、b1、a2、b2保持递增，x1-xn也是递增的。\\n', '  输出最短距离，保留2位小数。 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('15', ' 旅行商简化版', '<p>著名的NPC难题的简化版本<br />现在笛卡尔平面上有n(n<=1000)个点，每个点的坐标为(x,y)(-2^31<x,y<2^31，且为整数)，任意两点之间相互到达的代价为这两点的欧几里德距离，现要你编程求出最短bitonic tour。<br /></p>', '[{\"input\": \"7\\n0 6\\n1 0\\n2 3\\n5 4\\n6 1\\n7 5\\n8 2\\n\", \"output\": \"25.58\\n\"}]', '1014', '<p></p>', '2016-08-18 14:17:44.000000', '《算法导论（第二版）》 15-1\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行一个整数n\\n\\n接下来n行，每行两个整数x,y，表示某个点的坐标。\\n\\n输入中保证没有重复的两点，\\n保证最西端和最东端都只有一个点。\\n', '一行，即最短回路的长度，保留2位小数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('16', ' 十字绣', '<p>布是一个n*m的网格，线只能在网格的顶点处才能从布的一面穿到另一面。每一段线都覆盖一个单位网格的两条对角线之一，而在绣的过程中，一针中连续的两段线必须分处布的两面。给出布两面的图案，问最少需要几针才能绣出来？一针是指针不离开布的一次绣花过程。<br />[IMG]http://www.Vijos.cn/ProblemImg/P1015.gif[/IMG]<br /></p>', '[{\"input\": \"4 5\\n.....\\n.\\\\...\\n..\\\\..\\n.....\\n.....\\n....\\\\ \\n.\\\\X..\\n.....\\n\", \"output\": \"4\\n\"}]', '1015', '<p></p>', '2016-08-18 14:17:44.000000', 'Ural State University Problem Archive\\n', '10000', '128', '1', '0', '0', '2', '1', '第1行两个数N和M(1<=N,M<=200)。\\n接下来N行每行M个数描述正面。 \\n再接下来N行每行M个数描述反面。\\n每个格子用.（表示空）,/（表示从右上角连到左下角）,\\（表示从左上角连到右下角）和X（表示连两条对角线）表示。\\n', '一个数，最少要用的针数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('17', ' 北京2008的挂钟', '<p>    [IMG]http://www.Vijos.cn/ProblemImg/P1016.gif[/IMG]<br />    在2008北京奥运会雄伟的主会场的墙上，挂着如上图所示的3*3的九个挂钟（一开始指针即时针指向的位置请根据输入数据调整）。然而此次奥运会给与了大家一个机会，去用最少的移动操作改变上面的挂钟的时间全部为12点正（我们只考虑时针）。然而每一次操作并不是任意的，我们必须按照下面给出的列表对于挂钟进行改变。每一次操作我们给而且必须给指定的操作挂钟进行，每一个挂钟顺时针转动90度。列表如下：<br />    操作   指定的操作挂钟<br />     1         ABDE<br />     2         ABC<br />     3         BCEF<br />     4         ADG<br />     5         BDEFH<br />     6         CFI<br />     7         DEGH<br />     8         GHI<br />     9         EFHI<br /></p>', '[{\"input\": \"3 3 0\\n2 2 2\\n2 1 2\\n\", \"output\": \"4 5 8 9\\n\"}]', '1016', '<p>[b]Description[/b] <br />    [IMG]http://www.Vijos.cn/ProblemImg/P1016.gif[/IMG]<br />(Figure 1)<br />There are nine clocks in a 3*3 array (figure 1). The goal is to return all the dials to 12 o\'clock with as few moves as possible. There are nine different allowed ways to turn the dials on the clocks. Each such way is called a move. Select for each move a number 1 to 9. That number will turn the dials 90\' (degrees) clockwise on those clocks which are affected according to figure 2 below. <br />Move   Affected clocks<br /> <br /> 1         ABDE<br /> 2         ABC<br /> 3         BCEF<br /> 4         ADG<br /> 5         BDEFH<br /> 6         CFI<br /> 7         DEGH<br /> 8         GHI<br /> 9         EFHI    <br />   (Figure 2)<br />[b]Input[/b] <br />Your program is to read from standard input. Nine numbers give the start positions of the dials. 0=12 o\'clock, 1=3 o\'clock, 2=6 o\'clock, 3=9 o\'clock.<br />[b]Output[/b] <br />Your program is to write to standard output. Output a shortest sorted sequence of moves (numbers), which returns all the dials to 12 o\'clock. You are convinced that the answer is unique.<br /></p>', '2016-08-18 14:17:44.000000', 'Vivian Snow\\nIOI 1994 The Clocks, From PKU 1166\\n', '10000', '128', '1', '0', '0', '1', '1', '    你的程序按照标准的3*3格式读入，一共9个0-3的数。0代表12点，1代表3点，2代表6点，3代表9点。\\n    Your program is to read from standard input. Nine numbers give the start positions of the dials. 0=12 o\'clock, 1=3 o\'clock, 2=6 o\'clock, 3=9 o\'clock.\\n', '    你的程序需要写出标准的输出。输出一个最短的能够使所有挂钟指向12点的移动操作序列，中间以空格隔开，最后有空格，加回车。这一条最短操作需要是所有最短操作中最小的，也就是说选择最小的第一个操作数，如果第一个操作数相等，那么选择最小的第二个操作数……以此类推。值得肯定的是，这一条操作序列是唯一的。\\n    Your program is to write to standard output. Output a shortest sorted sequence of moves (numbers), which returns all the dials to 12 o\'clock. You are convinced that the answer is unique.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('18', ' 划分', '<p>    Maple博士发明了一个对表达式进行操作的函数op(i,e)。其描述如下：<br />    e是要操作的表达式。函数要将表达式分成若干个优先级最低的子表达式。例如：a*b+b*c+c*d经操作后变成了三个式子a*b,b*c,c*d，因为‘+’的优先级是最低的。函数先要把表达式做如上分离，再按次序取其中的第i个式子。例 如：op(2,a*b+b*c+c*d)=b*c.<br />    很显然，这个函数有时是层层调用的，如：<br />    p:=a^b*c+(d*c)^f*z+b<br />    op(1,op(1,op(2,p)))=(d*c)  <br />    op(1,op(1,op(1,op(2,p))))=d*c<br />    op(2,op(2,p))=z<br />    op(3,p)=b<br />    op(1,op(3,p))=b<br />    Maple博士很懒，他把这任务交给了你，让你编出一个程序。<br />    注：在本题中认为(a+b)(b+c)为合法表达式，若p:=(a+b)(b+c)则op(1,p)=a+b;而p:=(a+b)+(b+c)则op(1,p)=(a+b)<br /></p>', '[{\"input\": \"p:=a^b*c+(d*c)^f*z+b\\n4\\n2 1 1\\n2 2\\n3\\n3 1\\n\", \"output\": \"Expression p:\\nop(1,op(1,op(2,p)))=(d*c)\\nop(2,op(2,p))=z\\nop(3,p)=b\\nop(1,op(3,p))=b\\n\"}]', '1017', '<p>英文原题<br />http://acm.zju.edu.cn/show_problem.php?pid=1014<br /></p>', '2016-08-18 14:17:44.000000', 'Tsuzuki Matsumoto \\nFrom ZJU\\n', '10000', '128', '1', '0', '0', '2', '1', '    数据分为两部分，第一部分是表达式（不需判错）。先是一个变量的名称，再是一个\":=\"符号，再是表达式。\\n    表达式由小写字母和\"+\", \"(\", \")\", \"*\", \"^\"组成。括号优先级最高，接下来就是\"^\",再下来是\"*\"，再是\"+\"。\\n    下面就是要你算的几个op函数。先是函数个数n。\\n    下面n行是op的形式描述，由整数组成。\\n    例如：2 1 1表示op(1,op(1,op(2,e)))。怎样计算呢？先算op(2,e)，再将结果带入下一步，算op(1,op(1,op(2,e))，再用同一方法算op(1,op(1,op(2,e)))。\\n', '    看样例。。。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('19', ' 智破连环阵', '<p>　　B国在耗资百亿元之后终于研究出了新式武器——连环阵（Zenith Protected Linked Hybrid Zone）。传说中，连环阵是一种永不停滞的自发性智能武器。但经过A国间谍的侦察发现，连环阵其实是由M个编号为1，2，…，M的独立武器组成的。最初，1号武器发挥着攻击作用，其他武器都处在无敌自卫状态。以后，一旦第i（1<=i< M）号武器被消灭，1秒种以后第i+1号武器就自动从无敌自卫状态变成攻击状态。当第M号武器被消灭以后，这个造价昂贵的连环阵就被摧毁了。<br />　　为了彻底打击B国科学家，A国军事部长打算用最廉价的武器——炸弹来消灭连环阵。经过长时间的精密探测，A国科学家们掌握了连环阵中M个武器的平面坐标，然后确定了n个炸弹的平面坐标并且安放了炸弹。每个炸弹持续爆炸时间为5分钟。在引爆时间内，每枚炸弹都可以在瞬间消灭离它平面距离不超过k的、处在攻击状态的B国武器。和连环阵类似，最初a1号炸弹持续引爆5分钟时间，然后a2号炸弹持续引爆5分钟时间，接着a3号炸弹引爆……以此类推，直到连环阵被摧毁。<br />　　显然，不同的序列a1、a2、a3...消灭连环阵的效果也不同。好的序列可以在仅使用较少炸弹的情况下就将连环阵摧毁；坏的序列可能在使用完所有炸弹后仍无法将连环阵摧毁。现在，请你决定一个最优序列a1、a2、a3…使得在第ax号炸弹引爆的时间内连环阵被摧毁。这里的x应当尽量小。<br /></p>', '[{\"input\": \"4 3 6\\n0 6\\n6 6\\n6 0\\n0 0\\n1 5\\n0 3\\n1 1\\n0 0\\n\", \"output\": \"2\\n\"}]', '1018', '<p></p>', '2016-08-18 14:17:44.000000', 'NOI2003 Day2 Problem3\\n', '10000', '128', '1', '0', '0', '3', '1', '    第一行包含三个整数：M、n和k（1<=M, n<=100，1<=k<=1000），分别表示B国连环阵由M个武器组成，A国有n个炸弹可以使用，炸弹攻击范围为k。以下M行，每行由一对整数xi，yi（0<=xi，yi<=10000）组成，表示第i（1<=i<=M）号武器的平面坐标。再接下来n行，每行由一对整数ui，vi(0<=ui，vi<=10000)组成，表示第i（1<=i<=n）号炸弹的平面坐标。输入数据保证随机、无误、并且必然有解。\\n', '一行包含一个整数x，表示实际使用的炸弹数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('20', ' 补丁VS错误', '<p>    错误就是人们所说的Bug。用户在使用软件时总是希望其错误越少越好，最好是没有错误的。但是推出一个没有错误的软件几乎不可能，所以很多软件公司都在疯狂地发放补丁（有时这种补丁甚至是收费的）。T公司就是其中之一。<br />    上个月，T公司推出了一个新的字处理软件，随后发放了一批补丁。最近T公司发现其发放的补丁有致命的问题，那就是一个补丁在排除某些错误的同时，往往会加入另一些错误. <br />    此字处理软件中只可能出现n个特定的错误，这n个错误是由软件本身决定的。T公司目前共发放了m个补丁，对于每一个补丁,  都有特定的适用环境，某个补丁只有在当前软件中包含某些错误而同时又不包含另一些错误时才可以使用，如果它被使用，它将修复某些错误而同时加入某些错误。另外，使用每个补丁都要耗一定的时间（即补丁程序的运行时间）。<br />    更准确地说明：<br />    设此字处理软件中可能出现的n个错误为集合B={b1,b2,…,bn}中的元素，T公司目前共发放了m个补丁：p1，p2,…,pm。对于每一个补丁pi,  都有特定的适用环境，某个补丁只有在软件中包含某些错误而同时又不包含另一些错误时才可以用，为了说明清楚，设错误集合：Bi+、 Bi-， 当软件包含了Bi+中的所有错误, 而没有包含Bi-中的任何错误时，补丁Pi才可以被使用，否则不能使用，显然 Bi+、Bi-交集为空。补丁pi将修复某些错误而同时加入某些错误，设错误集合Fi-、Fi+，使用过补丁pi之后，Fi-中的任何错误都不会在软件中出现，而软件将包含Fi+中的所有错误， 同样Fi-、Fi+交集为空。另外，使用每个补丁都要耗一定的时间（即补丁程序的运行时间）。<br />    现在T公司的问题很简单，其字处理软件的初始版本不幸地包含了集合B中的全部n个错误,  有没有可能通过使用这些补丁（任意顺序地使用，一个补丁可使用多次）， 使此字处理软件成为一个没有错误的软件。如果可能，希望找到总耗时最少的方案。<br /></p>', '[{\"input\": \"3 3\\n1 000 00-\\n1 00- 0-+\\n2 0-- -++\\n\", \"output\": \"8\\n\"}]', '1019', '<p>注意，请按照n最大为15的条件编程；<br />如果空间占用过多，将提示 答案错误，而不是 运行时错误 或者其他提示。<br /></p>', '2016-08-18 14:17:44.000000', 'Vivian Snow\\nCTSC99 Day1 ProblemB\\n', '10000', '128', '1', '0', '0', '1', '1', '    第一行有两个正整数n和m,  n表示错误总数，m表示补丁总数，1<=n<=15, 1<=m<=100。接下来m行给出了m个补丁的信息。每行包括一个正整数（表示此补丁程序pi的运行耗时）和两个长度为n的字符串，中间用一个空格符隔开。\\n    第一个字符串，如果第k个字符为’+’，则表示bk属于Bi+,  若为‘-’，则表示bk属于Bi-, 若为‘0’，则bk 既不属于Bi+也不属于Bi-，即软件中是否包含bk不影响补丁pi是否可用。\\n    第二个字符串，如果第k个字符为’+’，则表示bk属于Fi+,  若为‘-’，则表示bk属于Fi-, 若为‘0’，则bk 既不属于Fi+也不属于Fi-，即软件中是否包含bk不会因使用补丁pi而改变。\\n', '    输出一个整数，如果问题有解，输出总耗时，否则输出0。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('21', ' 切蛋糕', '<p>　　Facer今天买了n块蛋糕，不料被信息组中球球等好吃懒做的家伙发现了，没办法，只好浪费一点来填他们的嘴巴。他答应给每个人留一口，然后量了量每个人口的大小。Facer有把刀，可以切蛋糕，但他不能把两块蛋糕拼起来，但是他又不会给任何人两块蛋糕。现在问你，facer怎样切蛋糕，才能满足最多的人。（facer的刀很强，切的时候不会浪费蛋糕）。<br /></p>', '[{\"input\": \"4\\n30\\n40\\n50\\n25\\n10\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n25\\n24\\n30\\n\", \"output\": \"7\\n\"}]', '1020', '<p></p>', '2016-08-18 14:17:44.000000', 'Vivian Snow\\nFrom facer, Section 4.1 Fence Rails\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行n，facer有n个蛋糕。接下来n行，每行表示一个蛋糕的大小。再一行一个数m，为信息组的人数，然后m行，每行一个数，为一个人嘴的大小。(1<=n<=50, 1<=m<=1024)\\n', '一行，facer最多可以填多少张嘴巴。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('22', ' Victoria的舞会1', '<p>　　Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。<br />　　Victoria准备邀请n个已经确定的人，可是问题来了：<br />　　这n个人每一个人都有一个小花名册，名册里面写着他所愿意交流的人的名字。比如说在A的人名单里写了B，那么表示A愿意与B交流；而且如果A名单里面有B，那么B名单里面肯定有A，也就是说两个人如果一方愿意和另一方交流，那么另一方也肯定愿意和这一方交流。<br />　　Victoria觉得需要在这n个人里面确定m个人，保证这m个人每一个人都能在舞会中找到至少k个人交流，并求出一种方案以确定m的最大值是多少。<br />　　注意：自己的名单里面不会有自己的名字。<br /></p>', '[{\"input\": \"22 1\\n4 5 10 11 20 21 0\\n2 3 6 8 11 16 0\\n2 3 5 8 12 15 16 18 0\\n1 5 6 10 11 12 16 18 0\\n1 3 4 16 20 0\\n2 4 19 21 22 0\\n8 9 13 19 20 0\\n2 3 7 10 19 0\\n7 10 14 16 19 0\\n1 4 8 9 10 20 0\\n1 2 4 18 19 20 21 0\\n3 4 13 0\\n7 12 15 16 18 19 21 22 0\\n9 16 0\\n3 13 21 0\\n2 3 4 5 9 13 14 20 0\\n18 22 0\\n3 4 11 13 17 21 0\\n6 7 8 9 11 13 19 21 22 0\\n1 5 7 10 11 16 21 22 0\\n1 6 11 13 15 18 19 20 0\\n6 13 17 19 20 0\\n\\n\", \"output\": \"22\\n\\n\"}]', '1021', '<p></p>', '2016-08-18 14:17:44.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行两个数n和k。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。1<=n,k<=200。\\n', '一个数，m。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('23', ' Victoria的舞会2', '<p>　Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。<br />　　Victoria准备邀请n个已经确定的人，可是问题来了：<br />　　这n个人每一个人都有一个小花名册，名册里面写着他所愿意交流的人的名字。比如说在A的人名单里写了B，那么表示A愿意与B交流；但是B的名单里不见的有A，也就是说B不见的想与A交流。但是如果A愿意与B交流，B愿意与C交流，那么A一定愿意与C交流。也就是说交流有传递性。<br />　　Victoria觉得需要将这n个人分为m组，要求每一组的任何一人都愿意与组内其他人交流。并求出一种方案以确定m的最小值是多少。<br />　　注意：自己的名单里面不会有自己的名字。<br /></p>', '[{\"input\": \"18\\n0\\n18 0\\n0\\n0\\n11 0\\n0\\n0\\n0\\n0\\n0\\n5 0\\n0\\n0\\n0\\n0\\n0\\n0\\n2 0\\n\", \"output\": \"16\\n\"}]', '1022', '<p></p>', '2016-08-18 14:17:44.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。1<=n<=200。\\n', '一个数，m。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('24', ' Victoria的舞会3', '<p>　　Victoria是一位颇有成就的艺术家，他因油画作品《我爱北京天安门》闻名于世界。现在，他为了报答帮助他的同行们，准备开一个舞会。<br />　　Victoria准备邀请n个已经确定的人，可是问题来了：<br />　　这n个人每一个人都有一个小花名册，名册里面写着他能够通知到的人的名字。比如说在A的人名单里写了B，那么表示A能够通知到B；但是B的名单里不见的有A，也就是说B不见得通知到A。<br />　　Victoria觉得需要确定自己需要通知多少个人m，能够实际将所有人n都通知到。并求出一种方案以确定m的最小值是多少。<br />　　注意：自己的名单里面不会有自己的名字。Victoria可以自身通知到所有n个人。<br /></p>', '[{\"input\": \"18\\n0\\n11 0\\n0\\n0\\n0\\n16 0\\n14 0\\n0\\n0\\n0\\n2 13 0\\n0\\n11 0\\n7 0\\n0\\n6 0\\n0\\n0\\n\\n\", \"output\": \"14\\n\\n\"}]', '1023', '<p></p>', '2016-08-18 14:17:45.000000', 'Vivian Snow\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行一个数n。接下来n行，每i+1行表示编号为i的人的小花名册名单，名单以0结束。1<=n<=200。\\n', '一个数，m。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('25', ' 卡布列克圆舞曲', '<p>    卡布列克是一位数学家，他在研究数字时发现：任意一个不是用完全相同数字组成的四位数，如果对它们的每位数字重新排序，组成一个较大的数和一个较小的数，然后用较大数减去较小数，差不够四位数时补零，类推下去，最后将变成一个固定的数：6174，这就是卡布列克常数。<br />    例如：4321-1234=3087<br />         8730-378=8352<br />         8532-2358=6174<br />         7641-1467=6147<br />    如果K位数也照此办理，它们不是变成一个数，而是在几个数字之间形成循环，称作卡布列克圆舞曲。例如对于五位数54321：<br />    54321-12345=41976<br />    97641-14679=82962<br />    98622-22689=75933<br />    97533-33579=63954<br />    96543-34569=61974<br />    97641-14679=82962<br />    我们把82962 75933 63954 61974称作循环节，即卡布列克圆舞曲。<br /></p>', '[{\"input\": \"4321\\n54321\\n\", \"output\": \"6174\\n82962 75933 63954 61974\\n\"}]', '1024', '<p></p>', '2016-08-18 14:17:45.000000', 'Xiaomengxian\\n高一的第二次考试题\\n', '10000', '128', '1', '0', '0', '2', '1', '文件包含若干行，每行为一个待求“卡布列克圆舞曲”的起始整数（小于maxlongint）\\n', '每行为对应整数的循环节，数据之间用空格隔开。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('26', ' 小飞侠的游园方案', '<p>    经过抽签选择，小智将军第一个进入考场。<br />    菜虫：（身上散射出华贵（?）的光芒）欢迎你，第一位挑战者！！<br />    小智：……（走到菜虫身后，关灯）女王陛下，虽然我们国家现在很富裕，但也请您不要浪费电来用这么大功率的灯泡。<br />    菜虫（汗）：啊啊~~爱卿所言甚是~~那么，你的题目是……我们的情报组织探听到敌人的重要将领——小飞侠星期天会邀他的灵儿妹妹到公园去玩。公园里有很多娱乐项目，可并不是每一项他们都喜欢，所以他们对每一项都进行了“喜欢度”的评分。因为小飞侠也是一个了不起的角色，所以他一定会选择在有限时间内的最好的方案。现在要你做的就是找出在规定时间内他们选择哪几项不同的活动可以使其“喜欢度”之和达到最大，据此我们就可以知道他会在哪些地方出现，从而在那里派人看守了。<br />    小智：（灯泡一亮）每个地方都派人看守不就行了？！<br />    “当~~~” <br />    菜虫：（手执八公分直径炒锅，筋）……你是白痴吗？-_-##（都派人去看守的话我们会有多少桌三缺一？！）听好了，输入格式是第一行一个正整数N（1<=N<=100）表示总共的娱乐项目数；第二行一个正整数表示规定的时间t（0<t<1000）；下面有N行，其中第i+2行有两个正整数fi（0<=fi<=100）和ti（0<ti<=100），分别表示对项目i的“喜欢度”和它所耗费的时间。输出的时候在第一行输出最大的“喜欢度”之和，下面给你一个样例：<br /></p>', '[{\"input\": \"3\\n5\\n1 2\\n5 5\\n4 3\\n\", \"output\": \"5\\n\"}]', '1025', '<p></p>', '2016-08-18 14:17:45.000000', 'Vivian Snow\\nFrom 正·蠢盟演义——战略版 Fools-League Tactics\\n', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('27', ' 毒药？解药？', '<p>    羽毛笔和im是抽签到同一个考场的，她们突然闻到一阵刺鼻的化学试剂的气味。<br />    机灵鼠：（头都不抬）你们是考生么？还在门口磨蹭什么？快进来帮我忙！！……怎么还不进来？你们拖赛，拖赛，把你们的青春都拖掉赛……<br />    im：开…开策了>_<<br />    羽毛笔：哎呀~~机灵鼠大人要我们帮什么忙？^^<br />    机灵鼠：你们看这里的这些药，都是我研制的对付各种症状的解药。可是我一个不小心，每种药都小小地配错了一点原料，所以这些药都有可能在治愈某些病症的同时又使人患上某些别的病症……（im：那…那是解药还是毒药啊？！）……经过我天才的努力（背景：我是天才！！），终于弄清了每种药的具体性能（路人甲：那是你自己配的吗？-_-），我会把每种药能治的病症和能使人患上的病症列一张清单给你们，然后你们要根据这张清单找出能治愈所有病症的最少药剂组合……顺便说一声，病症的数目不超过10种（小呆：偶是好人吧^^），我的药是用不完的，就是说每种药剂都可以被重复使用。给你们的单子里第一行是病症的总数n，第二行是药剂的种类m（0<m<=100），以下有m行，每行有n个数字用空格隔开，文件的第i+2行的n个数字中，如果第j个数为1，就表示第i种药可以治愈病症j（如果患有这种病的话则治愈，没有这种病则无影响），如果为0表示无影响，如果为-1表示反而能使人得上这种病（无病患上，有病无影响）。我制的药任何两种性能都不同。你们只要给我用的最少的药剂数就可以了。给你们个样例：<br /></p>', '[{\"input\": \"3\\n2\\n1 0 1\\n-1 1 0\\n\", \"output\": \"2\\n\"}]', '1026', '<p>    其实还有可能用尽了所有的药也不能将所有病治愈（真是不好意思嗬^^bb），那样的话你们只要写上“The patient will be dead.”就可以了。<br />    im：做不出来啊~~哇啊啊啊~~（暴走中）<br />    羽毛笔：哎呀~~im……来来吃药了。^^<br /></p>', '2016-08-18 14:17:45.000000', 'Vivian Snow\\nFrom 正·蠢盟演义——战略版 Fools-League Tactics\\n', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('28', ' 休息中的小呆', '<p>    当大家在考场中接受考验（折磨？）的时候，小呆正在悠闲（欠扁）地玩一个叫“最初梦想”的游戏。游戏描述的是一个叫pass的有志少年在不同的时空穿越对抗传说中的大魔王chinesesonic的故事。小呆发现这个游戏的故事流程设计得很复杂，它有着很多的分支剧情，但不同的分支剧情是可以同时进行的，因此游戏可以由剧情和剧情的结束点组成，某些剧情必须要在一些特定的剧情结束后才能继续发展。为了体验游戏的完整性，小呆决定要看到所有的分支剧情——完成所有的任务。但这样做会不会耽误小呆宝贵的睡觉时间呢？所以就请你来解决这个问题了。小呆会给你一个剧情流程和完成条件的列表，其中第一行有一个数n（0<n<100），表示总共有n个剧情结束点，第二行一个数m(0<m<=120)，表示由m个不同的剧情，下面的m行中每行有三个数i(0<i<=100),j(0<j<=100),k(0<k<=1000)，表示从剧情结束点i必须完成一个耗费时间为k的剧情才能到达剧情结束点j。注意，这m行中出现的1不是剧情结束点而是游戏的开始，而n+1表示游戏结束。你要告诉小呆完成整个游戏至少需要多少时间以及要经过的所有可能的剧情结束点（按升序输出）。样例如下：<br /></p>', '[{\"input\": \"4\\n5\\n1 2 2\\n2 3 2\\n3 5 3\\n1 4 3\\n4 5 3\\n\", \"output\": \"7\\n1 2 3 5\\n\"}]', '1027', '<p></p>', '2016-08-18 14:17:45.000000', 'Vivian Snow\\nFrom 正·蠢盟演义——战略版 Fools-League Tactics\\n', '10000', '128', '1', '0', '0', '2', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('29', ' 魔族密码', '<p>    风之子刚走进他的考场，就……<br />    花花：当当当当~~偶是魅力女皇——花花！！^^（华丽出场，礼炮，鲜花）<br />    风之子：我呕……（杀死人的眼神）快说题目！否则……-_-###<br />    花花：……咦~~好冷~~我们现在要解决的是魔族的密码问题（自我陶醉：搞不好魔族里面还会有人用密码给我和菜虫写情书咧，哦活活，当然是给我的比较多拉*^_^*）。魔族现在使用一种新型的密码系统。每一个密码都是一个给定的仅包含小写字母的英文单词表，每个单词至少包含1个字母，至多75个字母。如果在一个由一个词或多个词组成的表中，除了最后一个以外，每个单词都被其后的一个单词所包含，即前一个单词是后一个单词的前缀，则称词表为一个词链。例如下面单词组成了一个词链：<br />    i<br />    int<br />    integer<br />    但下面的单词不组成词链：<br />    integer<br />    intern<br />    现在你要做的就是在一个给定的单词表中取出一些词，组成最长的词链，就是包含单词数最多的词链。将它的单词数统计出来，就得到密码了。<br />    风之子：密码就是最长词链所包括的单词数阿……<br />    花花：活活活，还有，这些文件的格式是，第一行为单词表中的单词数N（1<=N<=2000），下面每一行有一个单词，按字典顺序排列，中间也没有重复的单词咧！！你要提交的文件中只要在第一行输出密码就行啦^^看你长得还不错，给你一个样例吧：<br /></p>', '[{\"input\": \"5\\ni\\nint\\ninteger\\nintern\\ninternet\\n\", \"output\": \"4\\n\"}]', '1028', '<p></p>', '2016-08-18 14:17:45.000000', 'Vivian Snow\\nFrom 正·蠢盟演义——战略版 Fools-League Tactics\\n', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('30', ' 晴天小猪历险记之Number', '<p>    现在假设九位勇士已编好了号（感觉好像有人盯着我……）并站好了位置，例如：<br />7 8 9<br />1 2 3<br />4 5 6<br />    每一次交换都可以将相邻的两位勇士（也就是编号……）交换位置，例如：<br />7 9 8<br />1 2 3  （8与9交换）<br />4 5 6<br />或<br />7 8 9<br />4 2 3  （4与1交换）<br />1 5 6<br />但不能<br />7 8 9<br />5 2 3  （1与5交换）<br />4 1 6<br />    求最少的交换次数，使得九位勇士能在最短的时间内（当然是他们争完后……）以最安全的阵型去屠龙。<br />    P.S:由于不能预测未来，各位**设想了许多的阵型（-_-||），所以给了你10组阵型（测试点），每组50个……<br /></p>', '[{\"input\": \"7 8 9\\n1 2 3\\n4 5 6\\n6 1 8\\n7 5 3\\n2 9 4\\n1 2 8\\n3 5 4\\n6 7 9\\n\", \"output\": \"8\\n0\\n5\\n\"}]', '1029', '<p>    欲知后事如何，请做出此题^_^。<br /></p>', '2016-08-18 14:17:45.000000', 'Sunnypig\\n', '10000', '128', '1', '0', '0', '1', '1', '    输入数据一共3*50行，每个数据中用3*3的9个不同的1~9的数字表示初始状态。\\n    （样例就只给几个阵型了^_^）\\n', '    每行一个数，即对应的初始阵型到所需阵型所需最少的交换次数，如果无解，输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('31', ' 重叠的方框', '<p>   下图为5个放置在9x8 的点阵中的方框图:<br />   [IMG]ProblemImg/P1030_1.gif[/IMG]<br />   若将他们按顺序叠放起来.则会有某些框的一部分盖住了另外一个框,遮住一些部分. <br />   下图是这5个框叠放起来的图形:<br />   [IMG]ProblemImg/P1030_2.gif[/IMG]<br />   那么这些方框从下至上叠放的顺序是什么呢?<br />   答案是: EDABC.<br />   你的任务是对于一个给定的方框叠放以后的图形, 找出他们从下至上的叠放顺序.<br />   下面是一些规则:<br />   (1). 方框的边宽度为一个字符,边长不少于3个字符;<br />   (2). 每个方框的4条边都有一部分可见, 一个角代表两条边;<br />   (3). 方框用大写字母了表示, 没有两个方框用相同的字符来表示.<br /></p>', '[{\"input\": \"9\\n8\\n.CCC....\\nECBCBB..\\nDCBCDB..\\nDCCC.B..\\nD.B.ABAA\\nD.BBBB.A\\nDDDDAD.A\\nE...AAAA\\nEEEEEE..\\n\", \"output\": \"EDABC\\n\"}]', '1030', '<p>数据是ZJU上的，弱了点，所以难度较低。。。。<br />英文原题<br />http://acm.zju.edu.cn/show_problem.php?pid=1083<br /></p>', '2016-08-18 14:17:45.000000', '  Tsuzuki Matsumoto \\n  From ZJU\\n', '10000', '128', '1', '0', '0', '1', '1', '  前两行每行一个数字，分别表示长、宽。\\n  接下来为框叠起来的图。没有框的地方用\'.\'表示。\\n  \\n', '  输出全部可能情况。\\n  按字典顺序排序。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('32', ' 奶牛加密术', '<p>    奶牛的加密方法如下，在一段文字中，插入三个字母C,O,W，C在O前，O在W前，然后把CO间,OW间夹住的部分换一下。但是，这样太容易被发现了，奶牛们进行了很多次这样的操作（小于10次）。你现在截获了十条密码，请问，它们是否可能由下面这句话加密而成。‘Begin the Escape execution at the Break of Dawn’。<br />    输入十行，每行一个字符串，表示一个密码。对于每条密码，输出一行，YES表示能够，NO表示不能够。如：输入第一行为：CBegin the EscCution at the BreOape execWak of OWDawn那么输出的第一行为：YES。<br /></p>', '[{\"input\": \"\", \"output\": \"\"}]', '1031', '<p></p>', '2016-08-18 14:17:45.000000', 'From facer\\n', '10000', '128', '1', '0', '0', '2', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('33', ' 循环', '<p>    乐乐是一个聪明而又勤奋好学的孩子。他总喜欢探求事物的规律。一天，他突然对数的正整数次幂产生了兴趣。<br />    众所周知，2的正整数次幂最后一位数总是不断的在重复2，4，8，6，2，4，8，6……我们说2的正整数次幂最后一位的循环长度是4（实际上4的倍数都可以说是循环长度，但我们只考虑最小的循环长度）。类似的，其余的数字的正整数次幂最后一位数也有类似的循环现象。<br />    这时乐乐的问题就出来了：是不是只有最后一位才有这样的循环呢？对于一个整数n的正整数次幂来说，它的后k位是否会发生循环？如果循环的话，循环长度是多少呢？<br />注意：<br />    1.如果n的某个正整数次幂的位数不足k，那么不足的高位看做是0。<br />    2.如果循环长度是L，那么说明对于任意的正整数a，n的a次幂和a + L次幂的最后k位都相同。<br /></p>', '[{\"input\": \"32 2\\n\", \"output\": \"4\\n\"}]', '1032', '<p>对于30%的数据，k <= 4；<br />对于全部的数据，k <= 100。<br /></p>', '2016-08-18 14:17:45.000000', 'NOIp2005\\n', '10000', '128', '1', '0', '0', '2', '1', '输入只有一行，包含两个整数n（1 <= n < 10^100）和k（1 <= k <= 100），n和k之间用一个空格隔开，表示要求n的正整数次幂的最后k位的循环长度。\\n', '输出包括一行，这一行只包含一个整数，表示循环长度。如果循环不存在，输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('34', ' 整数分解(版本2)', '<p>整数分解(版本2)<br />一个正整数可以分解成若干个自然数之和。请你编一个程序，对于给出的一个正整数n(1<=n<=1500)，求出满足要求的分解方案，并使这些自然数的乘积m达到最大。<br />例如n=10，则可以分解为2+2+3+3，乘积m=2*2*3*3=36<br /></p>', '[{\"input\": \"10\\n\", \"output\": \"36\\n\"}]', '1033', '<p>简单题，所有数据随机生成<br /></p>', '2016-08-18 14:17:45.000000', '改编自福建OI2006\\n', '10000', '128', '1', '0', '0', '1', '1', '一个正整数n\\n', '输出分解的自然数的最大乘积m\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('35', ' 家族', '<p>若某个家族人员过于庞大，要判断两个是否是亲戚，确实还很不容易，现在给出某个亲戚关系图，求任意给出的两个人是否具有亲戚关系。<br />规定：x和y是亲戚，y和z是亲戚，那么x和z也是亲戚。如果x,y是亲戚，那么x的亲戚都是y的亲戚，y的亲戚也都是x的亲戚。<br /></p>', '[{\"input\": \"6 5 3\\n1 2\\n1 5\\n3 4\\n5 2\\n1 3\\n1 4\\n2 3\\n5 6\\n\", \"output\": \"Yes\\nYes\\nNo\\n\"}]', '1034', '<p></p>', '2016-08-18 14:17:45.000000', 'cdwind整理提交\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行：三个整数n,m,p，（n<=5000,m<=5000,p<=5000），分别表示有n个人，m个亲戚关系，询问p对亲戚关系。\\n以下m行：每行两个数Mi，Mj，1<=Mi，Mj<=N，表示Ai和Bi具有亲戚关系。\\n接下来p行：每行两个数Pi，Pj，询问Pi和Pj是否具有亲戚关系。\\n', 'P行，每行一个’Yes’或’No’。表示第i个询问的答案为“具有”或“不具有”亲戚关系。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('36', ' 贪婪的送礼者', '<p>对于一群要互送礼物的朋友，你要确定每个人送出的礼物比收到的多多少。<br />在这一个问题中，每个人都准备了一些钱来送礼物，而这些钱将会被平均分给那些将收到他的礼物的人。<br />然而，在任何一群朋友中，有些人将送出较多的礼物(可能是因为有较多的朋友)，有些人有准备了较多的钱。<br />给出一群朋友， 没有人的名字会长于 14 字符，给出每个人将花在送礼上的钱，和将收到他的礼物的人的列表，<br />请确定每个人收到的比送出的钱多的数目。<br /></p>', '[{\"input\": \"5\\ndave\\nlaura\\nowen\\nvick\\namr\\ndave\\n200 3\\nlaura\\nowen\\nvick\\nowen\\n500 1\\ndave\\namr\\n150 2\\nvick\\nowen\\nlaura\\n0 2\\namr\\nvick\\nvick\\n0 0\\n\", \"output\": \"dave 302\\nlaura 66\\nowen -359\\nvick 141\\namr -150\\n\"}]', '1035', '<p></p>', '2016-08-18 14:17:45.000000', 'from USACO\\ncdwind 整理\\n', '10000', '128', '1', '0', '0', '1', '1', '第 1 行: 人数NP,2<= NP<=10  \\n \\n第 2到 NP+1 行: \\n 这NP个在组里人的名字　一个名字一行\\n \\n第NP＋2到最后：\\n 这里的NP段内容是这样组织的：\\n第一行是将会送出礼物人的名字。\\n第二行包含二个数字:　第一个是原有的钱的数目（在0到2000的范围里），第二个NGi是将收到这个送礼者礼物的人的个数 如果 NGi 是非零的, 在下面 NGi 行列出礼物的接受者的名字，一个名字一行。\\n \\n', '输出 NP 行\\n每行是一个的名字加上空格再加上收到的比送出的钱多的数目。\\n对于每一个人，他名字的打印顺序应和他在输入的2到NP＋1行中输入的顺序相同。所有的送礼的钱都是整数。\\n每个人把相同数目的钱给每位要送礼的朋友，而且尽可能多给，不能给出的钱被送礼者自己保留。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('37', ' 安装服务器', '<p>政府计划建立一个大型的服务器中心，为各个城市提供网络服务。每个城市对网络的需求量是不一样的，而需求量越大，对线路的要求也就越高，线路的成本也就越高。因此需要选择合适的地点修建。每个城市用一个二维整数坐标表示，两个点之间的距离定义为水平距离＋垂直距离，即a,b两点间距离为D(a,b)=|Xa-Xb|+|Ya-Yb|。对于每个城市，线路的费用为：费用＝距离×人口×城市的网络需求程度。总的费用为各个城市的费用的总和。请你找出最适合安装服务器（既总费用最小）的整数坐标（不一定要在城市上）。<br /></p>', '[{\"input\": \"5\\n2 3 5 3\\n2 1 100 30\\n2 2 1 1\\n3 2 7 6\\n1 1 4 30\\n\", \"output\": \"2 1\\n\"}]', '1036', '<p></p>', '2016-08-18 14:17:45.000000', '某校NOIP模拟题\\n', '10000', '128', '1', '0', '0', '1', '1', '输入第一行有一个正整数N（N ≤ 100000），表示城市的数量。后面的n行每行描述一个城市，每行有四个整数x，y，p，k分别表示城市的坐标，人口数，以及网络需求程度。（0 < x, y < 2^31；p≤600, k ≤30）\\n', '输出包含一行。在这一行中，应当包含两个整数x，y表示最优解的坐标，如果有多个最优解，那么输出x最小的，如果有x相同，那么输出y最小的。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('38', ' 搭建双塔', '<p>    2001年9月11日，一场突发的灾难将纽约世界贸易中心大厦夷为平地，Mr. F曾亲眼目睹了这次灾难。为了纪念“9?11”事件，Mr. F决定自己用水晶来搭建一座双塔。<br />    Mr. F有N块水晶，每块水晶有一个高度，他想用这N块水晶搭建两座有同样高度的塔，使他们成为一座双塔，Mr. F可以从这N块水晶中任取M（1≤M≤N）块来搭建。但是他不知道能否使两座塔有同样的高度，也不知道如果能搭建成一座双塔，这座双塔的最大高度是多少。所以他来请你帮忙。<br />    给定水晶的数量N（1≤N≤100）和每块水晶的高度Hi（N块水晶高度的总和不超过2000），你的任务是判断Mr. F能否用这些水晶搭建成一座双塔（两座塔有同样的高度），如果能，则输出所能搭建的双塔的最大高度，否则输出“Impossible”。<br /></p>', '[{\"input\": \"5\\n1 3 4 5 2\\n\", \"output\": \"7\\n\"}]', '1037', '<p></p>', '2016-08-18 14:17:57.000000', '某校NOIP模拟题\\n', '10000', '128', '1', '0', '0', '1', '1', '    输入的第一行为一个数N，表示水晶的数量。第二行为N个数，第i个数表示第i个水晶的高度。\\n', '    输出仅包含一行，如果能搭成一座双塔，则输出双塔的最大高度，否则输出一个字符串“Impossible”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('39', ' 添加括号', '<p>现在要添上n-1对括号，加法运算依括号顺序进行，得到n-1个中间和，求出使中间和之和最小的添括号方法。<br /></p>', '[{\"input\": \"4\\n4 1 2 3\\n\", \"output\": \"(4+((1+2)+3))\\n19\\n3 6 10\\n\"}]', '1038', '<p></p>', '2016-08-18 14:17:57.000000', 'MaoLaoda\\n', '10000', '128', '1', '0', '0', '1', '1', '共两行。\\n第一行，为整数n。(1<=n<=20)\\n第二行，为a(1),a(2),...,a(n)这n个正整数，每个数字不超过100。\\n', '输出3行。\\n第一行，为添加括号的方法。\\n第二行，为最终的中间和之和。\\n第三行，为n-1个中间和，按照从里到外，从左到右的顺序输出。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('40', ' 最小差距', '<p>    给定一些不同的一位数字，你可以从这些数字中选择若干个，并将它们按一定顺序排列，组成一个整数，把剩下的数字按一定顺序排列，组成另一个整数。组成的整数不能以0开头（除非这个整数只有1位）。<br />    例如，给定6个数字，0,1,2,4,6,7，你可以用它们组成一对数10和2467，当然，还可以组成其他的很多对数，比如210和764，204和176。这些对数中两个数差的绝对值最小的是204和176，为28。<br />    给定N个不同的0~9之间的数字，请你求出用这些数字组成的每对数中，差的绝对值最小的一对（或多对）数的绝对值是多少？<br /></p>', '[{\"input\": \"2\\n6\\n0 1 2 4 6 7\\n4\\n1 6 3 4\\n\", \"output\": \"28\\n5\\n\"}]', '1039', '<p></p>', '2016-08-18 14:17:57.000000', '某校NOIP模拟题\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行包括一个数T（T≤1000），为测试数据的组数。\\n    每组数据包括两行，第一行为一个数N（2≤N≤10），表示数字的个数。下面一行为N个不同的一位数字。\\n', '    T行，每行一个数，表示第i个数据的答案。即最小的差的绝对值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('41', ' 高精度乘法', '<p>高精度乘法<br />输入：两行，每行表示一个非负整数（不超过10000位）<br />输出：两数的乘积。<br /></p>', '[{\"input\": \"99\\n101\\n\", \"output\": \"9999\\n\"}]', '1040', '<p></p>', '2016-08-18 14:17:57.000000', '', '10000', '128', '1', '0', '0', '2', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('42', ' 神风堂人数', '<p>    天下会评选一级弟子，（做出10题以上的有机会参加评选）。最后评选结果神风堂有超过P%但不足Q%的人被评上了（弟子一：听起来像是URAL上的1011。风：闭嘴！！！）。现在给你P和Q，你要算出神风堂最少有多少人。（数据弱了一点，所以好通过）。<br /></p>', '[{\"input\": \"13 14.1\\n\", \"output\": \"15\\n\"}]', '1041', '<p></p>', '2016-08-18 14:17:57.000000', '来自天下会神风堂主\\n', '10000', '128', '1', '0', '0', '1', '1', '两个实数P，Q。用空格隔开。每个数最多有两位小数。0.00<=p<q<=99.99\\n', '神风堂最少的人数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('43', ' 捕风捉影', '<p>    有一天，雄霸传授本人风神腿法第一式：捕风捉影..............的步法（弟子一：堂主，你大喘气呀。风：你给我闭嘴。）捕风捉影的关键是换气（换不好就会大喘气...）。<br />    使用捕风捉影这一招时并不是每一步都喘气，而是在特定的步数喘气。一般来说功力越高，喘气越稀疏。喘气的步数符合特定规律：第一要是SUSHU（弟子二：哇塞！堂主，你还会鸟语，我好好崇拜你呦！可是SUSHU是什么意思呢？风：笨蛋，那是汉语拼音！）第二要是一个回文数，回文数就是正反念一样的数，如：123321，121，5211314（弟子三：堂主，最后一个好象不是...风：废话，当然不是了，我是考察一下你们的纠错能力！）现在给出两个数M，N(5<=M<N<=100,000,000)，你要算出M，N之间需要换气的都有哪几步。（包括M，N）。算出来的可以提升为本堂一级弟子，月薪（1000000000000000000000000000000000000000000 MOD 10 ）元。<br /></p>', '[{\"input\": \"100 500\\n\", \"output\": \"101\\n131\\n151\\n181\\n191\\n313\\n353\\n373\\n383\\n\"}]', '1042', '<p></p>', '2016-08-18 14:17:57.000000', '来自天下会神风堂主\\n', '10000', '128', '1', '0', '0', '2', '1', '两个整数M，N。用空格隔开。\\n', '在M，N之间的换气点，每个一行。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('44', ' Wappo', '<p>Einstein最近迷上了一款手机益智游戏Wappo，但是由于IQ和RP等诸多原因，他一直无法通关，他希望你编一个程序来玩这个游戏。<br />Wappo的游戏规则是这样的：在一张m*n的地图上，你可以控制勇士每秒向上下左右任意方向移动一格，之后怪兽会朝着你的方向移动至多两格。<br />注意，怪兽会优先横向走，勇士和怪兽都不会穿墙。<br />勇士的目的地就是桥头，但是千万不能被怪兽吃掉。<br />陷阱是很有用的东西（一格），勇士是不能进入陷阱的，但是如果你的IQ足够高，就可以把怪兽引入陷阱，在接下来你的三次移动中，怪兽将无法移动，三秒后恢复正常。<br />现在给你地图的信息，请你用最少的步数走到桥上。<br /></p>', '[{\"input\": \"6 6\\n0  8  8  8  8  0\\n4  3  1  1  5  2\\n4  2  0  4  6  2\\n4  2  0  4  6  2\\n4 10  8  8 12  2\\n0  1  1  1  1  0\\n......\\n.S..W.\\n....M.\\n......\\n...E..\\n......\\n\", \"output\": \"right\\nright\\ndown\\ndown\\ndown\\ntotal steps: 5\\n\"}]', '1043', '<p></p>', '2016-08-18 14:17:57.000000', 'Mr.Roach原创\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行是两个正整数m,n(m,n<=20),表示地图的大小为m*n.\\n接下来是n行，每行m个整数,表示一个格子周围墙的信息。其中\\n	1-上方有墙\\n	2-左方有墙\\n	4-右方有墙\\n	8-下方有墙\\n例如，一个格子的左、上、右都有墙，那么代表这个格子的整数是2+1+4=7。\\n接下来是n行，每行m个字符，表示一个格子里的其他信息，其中\\n	.-nothing\\n	S-勇士的初始位置\\n	W-陷阱\\n	M-怪兽的初始位置\\n	E-目的地，即桥头\\n其中S,M,E均保证只出现一次。\\n', '输出包含若干行，前r行为最少步数走到桥头的走法，每行为up,down,left,right中的一个，表示勇士的走法。最后一行输出最少步数r，格式见样例。\\n若存在多解，按照上左右下的优先顺序行走。\\n若无法走到桥头，只输出一行impossible。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('45', ' Kerry 的电缆网络', '<p>    Kerry 是德国的一位电缆商人。因联合国脱贫计划的邀请，他准备负责在土鲁齐亚埃萨亚克斯乌托斯邦建立电缆网络，以满足这个国家的用电需求。当然，现在土鲁齐亚埃萨亚克斯乌托斯邦没有任何电缆。已知土鲁齐亚埃萨亚克斯乌托斯邦一共有n个城镇，已经编号为1到n。其中任意两个城镇可能有一条路，也可能没有。如果两个城镇之间有一条路pi，那么这条路有一个长度si，则Kerry可以在这两个城市之间建立一条电缆线，电缆线的长度也就是这条路的长度si。<br />    现在Kerry准备了s长的电缆线，电缆线可以任意拆断，拆断不损失任何电缆线。他需要将土鲁齐亚埃萨亚克斯乌托斯邦所有城镇都能够连入这个电缆网络。那么，Kenny能不能使用这s长度的电缆线完成这项工作；如果能够完成，那么Kerry最少耗用多少长度的电缆线呢？<br /></p>', '[{\"input\": \"100.0\\n4\\n1 2 2.0\\n1 3 4.2\\n1 4 6.7\\n3 4 4.0\\n2 4 10.0\\n\", \"output\": \"Need 10.20 miles of cable\\n\"}]', '1044', '<p>1<=n,m<=100000<br /></p>', '2016-08-18 14:17:57.000000', '', '10000', '128', '1', '0', '0', '2', '1', '    第一行一个正实数S；\\n    第二行一个正整数n；\\n    接下来一共有m行，第i行有两个整数xi,yi和一个实数si，表示编号为xi个村庄和编号为yi个村庄之间有一条路，路的长度为si。\\n    输入保证xi不等于yi，两个城镇之间不会有两条路。\\n', '若能够完成（建立这样的电缆网络），则输出（其中<X>代表最少的电缆线长度，保留两位小数）：\\nNeed <X> miles of cable\\n否则输出：\\nImpossible\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('46', ' 观光旅游', '<p>　　学校里面有Ｎ个景点。两个景点之间可能直接有道路相连，用Dist[I，J]表示它的长度；否则它们之间没有直接的道路相连。这里所说的道路是没有规定方向的，也就是说，如果从I到J有直接的道路，那么从J到I也有，并且长度与之相等。学校规定：每个游客的旅游线路只能是一个回路（好霸道的规定）。也就是说，游客可以任取一个景点出发，依次经过若干个景点，最终回到起点。一天，Xiaomengxian决定到湖南师大附中旅游。由于他实在已经很累了，于是他决定尽量少走一些路。于是他想请你——一个优秀的程序员——帮他求出最优的路线。怎么样，不是很难吧？（摘自《郁闷的出纳员》）<br /></p>', '[{\"input\": \"5 7\\n1 4 1\\n1 3 300\\n3 1 10\\n1 2 16\\n2 3 100\\n2 5 15\\n5 3 20\\n4 3\\n1 2 10\\n1 3 20\\n1 4 30\\n\", \"output\": \"61\\nNo solution.\\n\"}]', '1045', '<p></p>', '2016-08-18 14:18:13.000000', 'Ural\\nXiaomengxian\\n', '10000', '128', '1', '0', '0', '2', '1', '输入中有多组数据。请用SeekEof判断是否到达文件结束。\\n对于每组数据：\\n第一行有两个正整数N，M，分别表示学校的景点个数和有多少对景点之间直接有边相连。（N<=100,M<=10000）\\n以下M行，每行三个正整数，分别表示一条道路的两端的编号，以及这条道路的长度。\\n', '对于每组数据，输出一行：\\n如果该回路存在，则输出一个正整数，表示该回路的总长度；否则输出“No solution.”（不要输出引号）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('47', ' 最小公倍数', '<p>给出两个正整数a,b(1<=a,b<=10^100)，求这两个数的最小公倍数。<br /></p>', '[{\"input\": \"123 321\\n\", \"output\": \"13161\\n\"}]', '1046', '<p></p>', '2016-08-18 14:18:13.000000', 'hw_031045\\n', '10000', '128', '1', '0', '0', '1', '1', '仅一行，包含两个正整数a和b, 中间以一个空格隔开\\n', '仅包含一行，为a和b的最小公倍数lcm(a,b)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('48', ' 送给圣诞夜的贺卡', '<p>    每年的12月24日，是圣诞老人忙碌的日子，也只有这一天，他才会忙碌起来。面对着将要来临的宁静的夜晚，是一种怎样的幸福和安宁感。作为圣诞老人的第一件事，就是需要为世界各地的孩子们写上贺卡，带上自己的祝福和礼品送给他们。毕竟，世界上那么多可爱的孩子，要给他们每一个人写一封贺卡，单凭自己的力量是不足以完成的。<br />    众所周知，一直陪伴在圣诞老人身边的是快乐的小精灵们。他们为圣诞老人而工作，其实是一个很乐意的事情。冰天雪地的北极，是他们的家，是圣诞老人的家。圣诞老人一直以来对于贺卡的书写非常重视，他也一直请一些优秀的小精灵们去帮助他完成这件事……<br />    12月24日早上7点钟。北极圣诞区开了一个会，会议由圣诞老人主持，在会的其他都是小精灵们，他们似乎都非常高兴，原因是等待圣诞老人的一份名单。这份名单里面的人都是这些小精灵们，一共n有个小精灵。这n个小精灵是圣诞老人根据这一年大家的表现状况（比如说谁吃饭吃得最多、谁调制的巧克力最好吃、谁的笑声最大、谁最不喜欢哭等等因素）而制定的预选的书写贺卡者名单。<br />    圣诞老人一个一个字，饱含激情地念出了每一个预选的小精灵。鼓掌……<br />    可是，接下来。并不是这个预选名单里面的所有小精灵都可以参加贺卡书写这个合作性任务。因为在以前的贺卡书写合作任务中，有一些小精灵们因为某些原因而对书写的格式和书写的字体喋喋不休。所以尽量避免这种情况发生，圣诞老人必须从预选名单中选出m(1<=m<=n)个小精灵来完成这项任务。可是……每一个小精灵的贺卡书写质量又有所不同……<br />    圣诞老人想了想，他觉得应该在其中选择m个小精灵，使得这m个小精灵中任意两个在曾经的贺卡书写合作任务中没有发生过矛盾冲突，并且需要这m个小精灵的书写质量的总合S最高。<br /></p>', '[{\"input\": \"3\\n4 2 5\\n1 2\\n\", \"output\": \"9\\n\"}]', '1047', '<p>1<=n<=50，1<=x,y<=n<br /></p>', '2016-08-18 14:18:13.000000', '', '10000', '128', '1', '0', '0', '3', '1', '    第一行一个数n。\\n    第二行n个数，第i个数代表预选名单中第i号小精灵的书写质量（均为非负整数）。\\n    接下来有若干行，每行两个不同的非负整数x和y，表示预选名单中第x号和第y号的小精灵曾经在贺卡书写合作任务中发生过冲突。\\n', '第一行一个数S。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('49', ' 送给圣诞夜的极光', '<p>    圣诞老人回到了北极圣诞区，已经快到12点了。也就是说极光表演要开始了。这里的极光不是极地特有的自然极光景象。而是圣诞老人主持的人造极光。<br />    轰隆隆……烟花响起（来自中国的浏阳花炮之乡）。接下来就是极光表演了。<br />    人造极光其实就是空中的一幅幅n*m的点阵图像。只是因为特别明亮而吸引了很多很多小精灵的目光，也成为了圣诞夜最美丽的一刻。<br />    然而在每幅n*m的点阵图像中，每一个点只有发光和不发光两种状态。对于所有的发光的点，在空中就形成了美丽的图画。而这个图画是以若干个（s个）图案组成的。对于图案，圣诞老人有着严格的定义：对于两个发光的点，如果他们的曼哈顿距离（对于A(x1,y1)和B(x2,y2)，A和B之间的曼哈顿距离为|x1-x2|+|y1-y2|）小于等于2。那么这两个点就属于一个图案……<br />    小精灵们一边欣赏着极光，一边数着每一幅极光图像中的图案数。伴着歌声和舞蹈，度过了美丽的圣诞之夜。^_^<br /></p>', '[{\"input\": \"19 48\\n------------------------------------------------\\n---####-----#-----#----------------------####---\\n--######----#-----#---------------------######--\\n-########--#-#---#-#####--#-##-##---#--########-\\n-###--###--#-#---#-#----#-##-##--#--#--###--###-\\n-###--###--#--#-#--######-#--#---#-#---###--###-\\n-########--#--#-#--#------#--#----##---########-\\n--######---#---#---######-#--#-----#----######--\\n---####----------------------------#-----####---\\n----------------------------------#-------------\\n------------------------------------------------\\n---###--#--------#------#-----------------------\\n--#---#-#---------------#-----------------------\\n-#------#-##--#-##--##-###-#-##-###--###-#--##--\\n-#------##--#-##-#-#----#--##--#---##---##-#----\\n-#------#---#-#--#--#---#--#---#---##----#--#---\\n--#---#-#---#-#--#---#--#--#---#---##---##---#--\\n---###--#---#-#--#-##---#--#---#---#-###-#-##---\\n------------------------------------------------\\n\", \"output\": \"4\\n\"}]', '1048', '<p>1<=n,m<=100<br /></p>', '2016-08-18 14:18:13.000000', '', '10000', '128', '1', '0', '0', '2', '1', '    第一行，两个数n和m。\\n    接下来一共n行，每行m个字符。对于第i行第j个字符，如果其为“-”，那么表示该点不发光，如果其为“#”，那么表示该点发光。不可能出现其他的字符。\\n', '    第一行，一个数s。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('50', ' 贾老二算算术', '<p>    贾老二是个品学兼优的好学生，但由于智商问题，算术学得不是很好，尤其是在解方程这个方面。虽然他解决 2x=2 这样的方程游刃有余，但是对于 {x+y=3  x-y=1} 这样的方程组就束手无策了。于是他要你来帮忙。前提是一次方程组且保证在integer的范围内可以处理所有问题。<br /></p>', '[{\"input\": \"2\\n1 1 3\\n1 –1 1\\n\", \"output\": \"2 1\\n\"}]', '1049', '<p></p>', '2016-08-18 14:18:13.000000', 'ASYZOI贾老二专题\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行一个数字N（1≤N≤100）表示要求的未知数的个数，同时也是所给的方程个数。\\n    第2到N+1行，每行N+1个数。前N个表示第1到N个未知数的系数。第N+1个数表示N个未知数乘以各自系数后的加和。（保证有唯一整数解）\\n', '    一行N个数，表示第1到N个未知数的值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('51', ' Easy sssp', '<p>输入数据给出一个有N(2 <= N <= 1,000)个节点，M(M <= 100,000)条边的带权有向图. <br />要求你写一个程序, 判断这个有向图中是否存在负权回路. 如果从一个点沿着某条路径出发, 又回到了自己, 而且所经过的边上的权和小于0, 就说这条路是一个负权回路.<br />如果存在负权回路, 只输出一行-1;<br />如果不存在负权回路, 再求出一个点S(1 <= S <= N)到每个点的最短路的长度. 约定:  S到S的距离为0, 如果S与这个点不连通, 则输出NoPath.<br /></p>', '[{\"input\": \"6 8 1\\n1 3 4\\n1 2 6\\n3 4 -7\\n6 4 2\\n2 4 5\\n3 6 3\\n4 5 1\\n3 5 4\\n\", \"output\": \"0\\n6\\n4\\n-3\\n-2\\n7\\n\"}]', '1050', '<p>做这道题时, 你不必为超时担心, 不必为不会算法担心, 但是如此“简单”的题目, 你究竟能ac么?<br /></p>', '2016-08-18 14:18:13.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第一行: 点数N(2 <= N <= 1,000), 边数M(M <= 100,000), 源点S(1 <= S <= N);\\n以下M行, 每行三个整数a, b, c表示点a, b(1 <= a, b <= N)之间连有一条边, 权值为c(-1,000,000 <= c <= 1,000,000)\\n', '如果存在负权环, 只输出一行-1, 否则按以下格式输出\\n共N行, 第i行描述S点到点i的最短路: \\n如果S与i不连通, 输出NoPath;\\n如果i = S, 输出0;\\n其他情况输出S到i的最短路的长度.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('52', ' 新年趣事之打牌', '<p>    过年的时候，大人们最喜欢的活动，就是打牌了。xiaomengxian不会打牌，只好坐在一边看着。<br />    这天，正当一群人打牌打得起劲的时候，突然有人喊道：“这副牌少了几张！”众人一数，果然是少了。于是这副牌的主人得意地说：“这是一幅特制的牌，我知道整副牌每一张的重量。只要我们称一下剩下的牌的总重量，就能知道少了哪些牌了。”大家都觉得这个办法不错，于是称出剩下的牌的总重量，开始计算少了哪些牌。由于数据量比较大，过了不久，大家都算得头晕了。<br />    这时，xiaomengxian大声说：“你们看我的吧！”于是他拿出笔记本电脑，编出了一个程序，很快就把缺少的牌找了出来。<br />    如果是你遇到了这样的情况呢？你能办到同样的事情吗？<br /></p>', '[{\"input\": \"270\\n4\\n100\\n110\\n170\\n200\\n\", \"output\": \"2 4\\n\"}]', '1051', '<p>Sample input #2<br />270<br />4<br />100<br />110<br />160<br />170<br />Sample output #2<br />-1<br />Sample input #3<br />270<br />4<br />100<br />120<br />160<br />180<br />Sample output #3<br />0<br /></p>', '2016-08-18 14:19:17.000000', 'Xiaomengxian\\n', '10000', '128', '1', '0', '0', '1', '1', '    第一行一个整数TotalW，表示剩下的牌的总重量。\\n    第二行一个整数N（1<N<=100），表示这副牌有多少张。\\n    接下来N行，每行一个整数Wi（1<=Wi<=1000），表示每一张牌的重量。\\n', '    如果无解，则输出“0”；如果有多解，则输出“-1”；否则，按照升序输出丢失的牌的编号，相邻两个数之间用一个空格隔开。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('53', ' 新年趣事之债务', '<p>    一天，三个人遇到了一起。由于他们都不够理智，一心想要回自己借出去的钱，于是互相之间追逐起来。最初，三个人分别站在一个边长为L正三角形的三个顶点上。某一个时刻，三个人同时开始以速度V匀速运动。他们运动的方向是这样的：每一个时刻，Vivian Snow运动的方向指向Sunnypig，Sunnypig运动的方向指向Charles，Charles运动的方向指向Vivian Snow，总之，每一个时刻，三个人都在尽快的接近各自欠自己债的人。最终，三个人都到达了同一个点上，并且通过和谈的方式解决了这一冲突。<br />    Xiaomengxian知道此事后，想写一篇报道，宣传这件事情。他想知道每个人走的路程的长度S，以及他们到达同一个点所需要的时间T。<br /></p>', '[{\"input\": \"13.05\\n0.56\\n\", \"output\": \"8.7\\n15.5\\n\"}]', '1052', '<p>所有单位均为国际标准单位。<br />Just For Fun :)<br /></p>', '2016-08-18 14:19:17.000000', 'Xiaomengxian\\n', '10000', '128', '1', '0', '0', '2', '1', '输入文件有两行。\\n第一行为一个实数L（0<=L<=1E100）。\\n第二行为一个实数V（0<=V<=1E100）。\\n', '输出文件有两行。\\n第一行为一个实数S，保留一位小数。\\n第二行为一个实数T，保留一位小数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('54', ' 4-Hanoi-Tower', '<p>“汉诺塔”，是一个众所周知的古老游戏。现在我们把问题稍微改变一下：如果一共有4根柱子， 而不是3根，那么至少需要移动盘子多少次，才能把所有的盘子从第1根柱子移动到第4根柱子上呢？<br />为了编程方便，您只需要输出这个结果mod 10000的值。<br /></p>', '[{\"input\": \"2\\n\", \"output\": \"4\\n\"}]', '1053', '<p></p>', '2016-08-18 14:19:17.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '3', '1', '一个正整数n。（0<n<=50000）\\n', '一个正整数，表示把n个盘子从第1根柱子移动到第4根柱子需要的最少移动次数mod 10000的值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('55', ' 海战', '<p>在这个著名的游戏中，在一个方形的盘上放置了固定数量和形状的船只，每只船却不能碰到其它的船。在这个题中，我们仅考虑船是方形的，所有的船只都是由图形组成的方形。编写程序求出该棋盘上放置的船只的总数。<br /></p>', '[{\"input\": \"6 8\\n.....#.#\\n##.....#\\n##.....#\\n.......#\\n#......#\\n#..#...#\\n\\n\", \"output\": \"There are 5 ships.\\n\"}]', '1054', '<p></p>', '2016-08-18 14:19:17.000000', 'Cqwshll\\n', '10000', '128', '1', '0', '0', '2', '1', '输入文件头一行由用空格隔开的两个整数R和C组成，1<=R,C<=1000，这两个数分别表示游戏棋盘的行数和列数。接下来的R行每行包含C个字符，每个字符可以为“#”，也可为“.”，“#”表示船只的一部分，“.”表示水。\\n', '为每一个段落输出一行解。如果船的位置放得正确（即棋盘上只存在相互之间不能接触的方形，如果两个“#”号上下相邻或左右相邻却分属两艘不同的船只，则称这两艘船相互接触了）。就输出一段话“There are S ships.”,S表示船只的数量。否则输出“Bad placement.”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('56', ' 松鼠吃果子', '<p>     有N个一种松鼠喜欢吃的果子由下向上串排成一列，并标号1,2,...N。一只松鼠从最下果子开始向上跳，并且第i次跳可以一次跳过i*i*i除以5的余数+1个果子(=i*i*i%5+1)，并把脚下的果子吃了，如果上面有果子，在重力作用下，都将向下掉下一格。如第1次跳从第一个果子上跳过1*1*1%5+1=2个果子，可跳到第3个果子上，并把第3个果子吃了；第2次从第4个果子上(落在原来第三个果子位置)跳过2*2*2%5+1=4个到第8个果子上，并把第8个吃了；如此...。<br />     当然，总有一次松鼠会跳出这串果子的最前面，设为每K次，它吃不到任何果子了。这时它回到最下面的果子上，重做它的第K次跳，以求吃到果子。如此，问它吃的第m只果子(即第M跳吃到的果子)的标号是什么？<br /></p>', '[{\"input\": \"10\\n4\\n\", \"output\": \"9\\n\"}]', '1055', '<p>注：吃掉的果子依次为3，8，4(回到下面重做第3跳)，9(回到下面重做第4跳)<br /></p>', '2016-08-18 14:19:17.000000', '', '10000', '128', '1', '0', '0', '2', '1', '一共两行，分别为N和m。（1<=m<=n<=200，并且满足能够跳到第m次）\\n', '一个数，即它吃的第m只果子的标号。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('57', ' Function(Function(F...', '<p>对于一个递归函数w(a,b,c)<br />如果a<=0 or b<=0 or c<=0就返回值1.<br />如果a>20 or b>20 or c>20就返回w(20,20,20)<br />如果a<b并且b<c 就返回w(a,b,c-1)+w(a,b-1,c-1)-w(a,b-1,c)<br />其它别的情况就返回w(a-1,b,c)+w(a-1,b-1,c)+w(a-1,b,c-1)-w(a-1,b-1,c-1)<br />这是个简单的递归函数，但实现起来可能会有些问题。当a,b,c均为15时，调用的次数将非常的多。你要想个办法才行.<br /></p>', '[{\"input\": \"1 1 1\\n2 2 2\\n-1 -1 -1\\n\", \"output\": \"w(1, 1, 1) = 2\\nw(2, 2, 2) = 4\\n\"}]', '1056', '<p></p>', '2016-08-18 14:19:17.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '2', '1', '会有若干行.\\n并以-1，-1，-1结束.\\n', '输出若干行\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('58', ' 野生动物园', '<p>    cjBBteam拥有一个很大的野生动物园。这个动物园坐落在一个狭长的山谷内，这个区域从南到北被划分成N个区域，每个区域都饲养着一头狮子。这些狮子从北到南编号为1,2,3,…,N。每头狮子都有一个觅食能力值Ai，Ai越小觅食能力越强。饲养员cmdButtons决定对狮子进行M次投喂，每次投喂都选择一个区间[I,J]，从中选取觅食能力值第K强的狮子进行投喂。值得注意的是，cmdButtons不愿意对某些区域进行过多的投喂，他认为这样有悖公平。因此cmdButtons的投喂区间是互不包含的。你的任务就是算出每次投喂后，食物被哪头狮子吃掉了。<br /></p>', '[{\"input\": \"7 2\\n1 5 2 6 3 7 4\\n1 5 3\\n2 7 1\\n\", \"output\": \"3\\n2\\n\"}]', '1057', '<p>对于100%的数据，有1<=N<=100000，1<=M<=50000。<br /></p>', '2016-08-18 14:19:17.000000', '周戈林\\n', '10000', '128', '1', '0', '0', '1', '1', '输入第一行有两个数N和M。此后一行有N个数，从南到北描述狮子的觅食能力值。此后M行，每行描述一次投喂。第t+2的三个数I,J,K表示在第t次投喂中，cmdButtons选择了区间[I,J]内觅食能力值第K强的狮子进行投喂。\\n', '输出有M行，每行一个整数。第i行的整数表示在第i次投喂中吃到食物的狮子的觅食能力值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('59', ' 环城旅行', '<p>    Matrix67要带他的女友进行一次环城旅行。他选择了一条总长度为L的封闭路线。他所选择的路线上有n个景点。他将从某个景点出发，顺时针开车绕城市一周，再回到出发点。出发前，油箱为空。每个景点内都有一个加油站，第i个景点的加油站提供的油可供车行驶Si的路程。所有加油站可提供的油的总和恰好够汽车行驶一周（即S1+S2+…+Sn=L）。汽车的油箱总能够容下所得到的汽油。临行前的那一天，Matrix67突然意识到，虽然所有加油站的油的总和等于汽车环城一周要消耗的油，但汽车不一定能环城一周，因为有可能还没有到下一个景点，汽油就用光了。显然，是否会发生半路上没油的情况取决于Matrix67选择的出发点。他可不希望和MM的这次浪漫的旅行就这样泡汤了。他知道每个景点离它前一个景点有多远，也知道每个景点的加油站提供的油量。他希望你能帮助他找出，从哪些景点出发可以顺利绕城一周。<br /></p>', '[{\"input\": \"5 10\\n0 1\\n2 2\\n3 2\\n2 2\\n2 3\\n\", \"output\": \"3 4 5\\n\"}]', '1058', '<p></p>', '2016-08-18 14:19:41.000000', 'Matrix67  根据经典问题改编\\n', '10000', '128', '1', '0', '0', '1', '1', '    第一行为两个正整数，分别代表n和L。输入数据保证n<=500 000，L<=100 000 000，并且n<=L。\\n    第二行到第n+1行这n行数据将按环行道路上顺时针的顺序依次描述各个景点。每行有两个正整数。第i+1行为Di和Si，分别表示第i个景点离其前一个景点（即第i-1个景点）的距离和这个景点的加油站所提供的油可供汽车行驶的距离。其中，D1=0。最后一个（第n个）景点与第一个景点之间的距离没有直接给出，但可以根据输入数据计算出来。\\n    输入数据保证，所有的Si之和等于L，所有的Di之和小于L。\\n', '    一行正整数。输出时，每两个正整数之间都有一个空格，行末无空格。它们表示所有能够作为出发点顺利完成环城旅行的景点。\\n    当存在多个这样的景点时，请按照升序排列输出他们的序号。\\n    当不存在这样的景点时，输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('60', ' 猩猩散步', '<p>　　猩猩，骆驼，还有泡泡经常喜欢在饭后到操场上散步，由于猩猩的走路姿势最突出最显眼，理所应当的成为他们中的主角，所以我的题目就说猩猩散步了。（骆驼和泡泡别有意见哈，和猩猩争啥……）<br />　　当然，话说回来，猩猩在OI上的能力也是不容低估的，你看，散步时还会想一道与此相关的问题，这是道经典的不能再经典的问题了。<br />　　在一个m×n的矩阵上，猩猩在左下角的顶点出现了，他只能沿着路径向上或者向右走，他的目标是“蠕动”到右上角的顶点，问他有多少路径可以选择。嗯，这个、这个、这个似乎地球人都知道怎么做，但是请注意，我有个条件没给呢！m和n现在的最大范围是50000，这可怎么办？仔细想想吧。<br /></p>', '[{\"input\": \"7 4\\n\", \"output\": \"0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000000\\n0000000330\\n\"}]', '1059', '<p></p>', '2016-08-18 14:21:33.000000', '', '10000', '128', '1', '0', '0', '1', '1', '只有一行，包含两个整数m和n，其上限均为50000\\n', '由于最后的答案数目过大，所以只检查后100位，输出时每行十个数字，没空格间隔，共十行，如果答案位数没超过100位，则需要在空位上补0。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('61', ' 分梨子', '<p>　　Finley家的院子里有棵梨树，最近收获了许多梨子。于是，Finley决定挑出一些梨子，分给幼稚园的宝宝们。可是梨子大小味道都不太一样，一定要尽量挑选那些差不多的梨子分给孩子们，那些分到小梨子的宝宝才不会哭闹。<br />　　每个梨子都具有两个属性值，Ai和Bi，本别表示梨子的大小和甜度情况。假设在选出的梨子中，两个属性的最小值分别是A0和B0。只要对于所有被选出的梨子i，都满足C1*(Ai-A0)+C2*(Bi-B0)≤C3（其中，C1、C2和C3都是已知的常数），就可以认为这些梨子是相差不多的，可以用来分给小朋友们。<br />　　那么，作为幼稚园园长的你，能算出最多可以挑选出多少个梨子吗？<br /></p>', '[{\"input\": \"3\\n2 3 6\\n3 2\\n1 1\\n2 1\\n\", \"output\": \"2\\n\"}]', '1060', '<p>样例说明：可以选择1、3两个梨子或者2、3两个梨子。<br /></p>', '2016-08-18 14:21:33.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行一个整数N（1≤N≤2000），表示梨子的总个数。\\n第二行三个正整数，依次为C1,C2和C3（C1,C2≤2000，C3≤10^9）。\\n接下来的N行，每行两个整数。第i行的两个整数依次为Ai和Bi。\\n', '只有一个整数，表示最多可以选出的梨子个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('62', ' 岳麓山上打水', '<p>　　今天天气好晴朗，处处好风光，好风光！蝴蝶儿忙啊，蜜蜂也忙，信息组的同学们更加忙。最近，由于XX原因，大家不得不到岳麓山去提水。55555555~，好累啊。<br />　　信息组有一个容量为q升的大缸，由于大家都很自觉，不愿意浪费水，所以每次都会刚好把缸盛满。但是，信息组并没有桶子（或者瓢）来舀水，作为组内的生活委员，你必须肩负重任，到新一佳去买桶子。<br />　　新一佳有p种桶子，每种桶子都有无穷多个^_^，且价钱一样。由于大家都很节约，所以你必须尽量少买桶子。如果有多种方案，你必须选择“更小”的那种方案，即：把这两个方案的集合（不同大小的桶子组成）按升序排序，比较第一个桶，选择第一个桶容积较小的一个。如果第一个桶相同，比较第二个桶，也按上面的方法选择。否则继续这样的比较，直到相比较的两个桶不一致为止。例如，集合{3，5，7，三} 比集合 {3，6，7，8} 要好。<br />　　为了把缸装满水，大家可以先从岳麓山的井里把桶装满水提回来，然后倒进缸里。为了不十分麻烦或者浪费宝贵的水资源，大家决不把缸里的水倒出来或者把桶里的水倒掉，也不会把桶里的水再倒回井中，（这样会污染井水）。当然，一个桶可以使用多次。例如，用一个容积为 1 升的桶可以将任意容量的大缸装满水。而其它的组合就要麻烦些。<br /></p>', '[{\"input\": \"16\\n3\\n3\\n5\\n7\\n\", \"output\": \"2 3 5\\n\"}]', '1061', '<p></p>', '2016-08-18 14:21:33.000000', 'From facer\\n', '10000', '128', '1', '0', '0', '1', '1', '第1行1个数q(q<=20000)。\\n第2行1个数p(p<=100)。\\n接下来p行，每行一个数，依次为每个桶的容积。\\n', '共1行，每两个数间用空格分隔，第1个数k为最少的桶的数量，接下来k个数从小到大输出每个桶的容量。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('63', ' 波浪数', '<p>    波浪数是在一对数字之间交替转换的数，如1212121，双重波浪数则是指在两种进制下都是波浪数的数，如十进制数191919是一个十进制下的波浪数，它对应的十一进制数121212也是一个波浪数，所以十进制数191919是一个双重波浪数。<br />    类似的可以定义三重波浪数，三重波浪数在三种不同的进制中都是波浪数，甚至还有四重波浪数，如十进制300=606（七进制）=363（九进制）=454（八进制）=1A1（十三进制）…，你的任务就是在指定范围内找出双重、三重、四重波浪数。<br /></p>', '[{\"input\": \"10 11 190000 960000 2\\n\", \"output\": \"191919\\n383838\\n575757\\n767676\\n959595\\n\"}]', '1062', '<p></p>', '2016-08-18 14:21:33.000000', '冰火熔寒&amp; XTXWZOI\\n', '10000', '128', '1', '0', '0', '1', '1', '    单独一行包含五个用空格隔开的十进制整数，前两个数表示进制的范围（2..32），第三与第四个数表示指定的范围（1..10000000），第五个数为2,3,4中的一个，表示要找的波浪数的重数。\\n', '从小到大以十进制形式输出指定范围内的指定重数的波浪数。一行输出一个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('64', ' 曹冲养猪', '<p>自从曹冲搞定了大象以后，曹操就开始捉摸让儿子干些事业，于是派他到中原养猪场养猪，可是曹冲满不高兴，于是在工作中马马虎虎，有一次曹操想知道母猪的数量，于是曹冲想狠狠耍曹操一把。举个例子，假如有16头母猪，如果建了3个猪圈，剩下1头猪就没有地方安家了。如果建造了5个猪圈，但是仍然有1头猪没有地方去，然后如果建造了7个猪圈，还有2头没有地方去。你作为曹总的私人秘书理所当然要将准确的猪数报给曹总，你该怎么办？<br /></p>', '[{\"input\": \"3\\n3 1\\n5 1\\n7 2\\n\", \"output\": \"16\\n\"}]', '1063', '<p></p>', '2016-08-18 14:21:33.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行包含一个整数n (n <= 10) – 建立猪圈的次数，解下来n行，每行两个整数ai, bi( bi <= ai <= 1000), 表示建立了ai个猪圈，有bi头猪没有去处。你可以假定ai,aj互质.\\n', '输出包含一个正整数，即为曹冲至少养母猪的数目。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('65', ' 火烧赤壁', '<p>曹操平定北方以后，公元208年，率领大军南下，进攻刘表。他的人马还没有到荆州，刘表已经病死。他的儿子刘琮听到曹军声势浩大，吓破了胆，先派人求降了。<br />孙权任命周瑜为都督，拨给他三万水军，叫他同刘备协力抵抗曹操。<br />隆冬的十一月，天气突然回暖，刮起了东南风。<br />没想到东吴船队离开北岸大约二里距离，前面十条大船突然同时起火。火借风势，风助火威。十条火船，好比十条火龙一样，闯进曹军水寨。那里的船舰，都挤在一起，又躲不开，很快地都烧起来。一眨眼工夫，已经烧成一片火海。<br />曹操气急败坏的把你找来，要你钻入火海把连环线上着火的船只的长度统计出来！<br /></p>', '[{\"input\": \"3\\n-1 1\\n5 11\\n2 9\\n\", \"output\": \"11\\n\"}]', '1064', '<p>n<=20000<br />如果Ai=Bi是一个点则看作没有长度<br /></p>', '2016-08-18 14:21:33.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行：N\\n以后N行，每行两个数：Ai  Bi(表示连环线上着火船只的起始位置和终点,-10^9<=Ai,Bi<=10^9)\\n', '输出着火船只的总长度\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('66', ' 木牛流马', '<p>    孔明造出了木牛流马<br />    木牛者，方腹曲头，一脚四足，头入领中，舌著于腹。载多而行少，宜可大用，不可小使；特行者数十里，群行者二十里也。曲者为牛头，双者为牛脚，横者为牛领，转者为牛足，覆者为牛背，方者为牛腹，垂者为牛舌，曲者为牛肋，刻者为牛齿，立者为牛角，细者为牛鞅，摄者为牛秋轴。牛仰双辕，人行六尺，牛行四步。载一岁粮，日行二十里，而人不大劳。流马尺寸之数，肋长三尺五寸，广三寸，厚二寸二分，左右同。前轴孔分墨去头四寸，径中二寸。前脚孔分墨二寸，去前轴孔四寸五分，广一寸。前杠孔去前脚孔分墨二寸七分，孔长二寸，广一寸。后轴孔去前杠分墨一尺五分，大小与前同。后脚孔分墨去后轴孔三寸五分，大小与前同。后杠孔去后脚孔分墨二寸七分，后载克去后杠孔分墨四寸五分。前杠长一尺八寸，广二寸，厚一寸五分。后杠与等版方囊二枚，厚八分，长二尺七寸，高一尺六寸五分，广一尺六寸，每枚受米二斛三斗。从上杠孔去肋下七寸，前后同。上杠孔去下杠孔分墨一尺三寸，孔长一寸五分，广七分，八孔同。前后四脚，广二寸，厚一寸五分。形制如象，靬长四寸，径面四寸三分。孔径中三脚杠，长二尺一寸，广一寸五分，厚一寸四分，同杠耳。（《三国志·亮集载作木牛流马法》） <br />    可是在现实中它有个缺陷，就是两个不能在同一行或同一列！<br />    孔明兴高采烈的叫庞统来参观，孔明存心想难一难庞统，他把k个木牛流马放在一个大的n*n的格子地板上，并且给他们都染上色，想让庞统帮着算算有多少种不同的合理布局情况？<br /></p>', '[{\"input\": \"4 4 1\\n4\\n\", \"output\": \"24\\n\"}]', '1065', '<p>不需要高精度,并且孔明规定在格子地板上不能翻转，也就是说如果两种布局在翻转后是一样的仍算两种。<br /></p>', '2016-08-18 14:21:33.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行:n,k,h(h为有多少种颜色) n<=20\\n接下来h行为每种颜色多少个\\n', '合理布局情况总数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('67', ' 南蛮图腾', '<p>自从到了南蛮之地，孔明不仅把孟获收拾的服服帖帖，而且还发现了不少少数民族的智慧，他发现少数民族的图腾往往有着一种分形的效果(看Hint)，在得到了酋长的传授后，孔明掌握了不少绘图技术，但唯独不会画他们的图腾，于是他找上了你的爷爷的爷爷的爷爷的爷爷……帮忙，作为一个好孙子的孙子的孙子的孙子……你能做到吗？<br /></p>', '[{\"input\": \"2\\n\", \"output\": \"   /\\\\\\n  /__\\\\\\n /\\\\  /\\\\\\n/__\\\\/__\\\\\\n\"}]', '1066', '<p>[IMG]ProblemImg/P1167.gif[/IMG]<br /></p>', '2016-08-18 14:21:33.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '1', '1', '每个数据一个数字，表示图腾的大小（此大小非彼大小） n<=10\\n', '这个大小的图腾\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('68', ' 公路巡逻', '<p>    在一条没有分岔的高速公路上有n个关口，相邻两个关口之间的距离都是10km。所有车辆在这条高速公路上的最低速度为60km/h，最高速度为120km/h，并且只能在关口处改变速度。巡逻的方式是在某个时刻Ti从第ni个关口派出一辆巡逻车匀速驶抵第(ni+1)个关口，路上耗费的时间为ti秒。<br />    两辆车相遇是指它们之间发生超车或者两车同时到达某关口（同时出发不算相遇）。<br />    巡逻部门想知道一辆于6点整从第1个关口出发去第n个关口的车（称为目标车）最少会与多少辆巡逻车相遇，请编程计算之。假设所有车辆到达关口的时刻都是整秒。<br /></p>', '[{\"input\": \"3 2\\n1 060000 301\\n2 060300 600\\n\", \"output\": \"0\\n061301\\n\"}]', '1067', '<p></p>', '2016-08-18 14:21:33.000000', 'ctsc2000t第一试\\n', '10000', '128', '1', '0', '0', '2', '1', '输入第一行为两个用空格隔开的整数，分别为关口数n和巡逻车数m。（1<n<50,1<m<300），接下来的m行每一行为一辆巡逻车的信息（按出发位置递增排序），格式为ni　Ti　ti，三项用空格隔开，分别表示第i辆巡逻车的出发位置、出发时刻和路上耗费的时间，其中ni和ti为整数，Ti形如hhmmss，表示时、分、秒，采用24小时制，不足两位的数用前置0补齐。（1<=ni<n,05:00:00<=Ti<=23:00:00,300<=ti<=600）\\n', '输出第一行为目标车与巡逻车相遇次数。第二行为目标车与巡逻车相遇次数最少时最早到达第n个关口的时刻（格式同输入中的Ti）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('69', ' 丘比特的烦恼', '<p>随着社会的不断发展，人与人之间的感情越来越功利化。最近，爱神丘比特发现，爱情也已不再是完全纯洁的了。这使得丘比特很是苦恼，他越来越难找到合适的男女，并向他们射去丘比特之箭。于是丘比特千里迢迢远赴中国，找到了掌管东方人爱情的神——月下老人，向他求教。<br />　　月下老人告诉丘比特，纯洁的爱情并不是不存在，而是他没有找到。在东方，人们讲究的是缘分。月下老人只要做一男一女两个泥人，在他们之间连上一条红线，那么它们所代表的人就会相爱——无论他们身处何地。而丘比特的爱情之箭只能射中两个距离相当近的人，选择的范围自然就小了很多，不能找到真正的有缘人。<br />　　丘比特听了月下老人的解释，茅塞顿开，回去之后用了人间的最新科技改造了自己的弓箭，使得丘比特之箭的射程大大增加。这样，射中有缘人的机会也增加了不少。<br />　　情人节(Valentine\'s day)的午夜零时，丘比特开始了自己的工作。他选择了一组数目相等的男女，感应到他们互相之间的缘分大小，并依此射出了神箭，使他们产生爱意。他希望能选择最好的方法，使被他选择的每一个人被射中一次，且每一对被射中的人之间的缘分的和最大。<br />　　当然，无论丘比特怎么改造自己的弓箭，总还是存在缺陷的。首先，弓箭的射程尽管增大了，但毕竟还是有限的，不能像月下老人那样，做到“千里姻缘一线牵”。其次，无论怎么改造，箭的轨迹终归只能是一条直线，也就是说，如果两个人之间的连线段上有别人，那么莫不可向他们射出丘比特之箭，否则，按月下老人的话，就是“乱点鸳鸯谱”了。<br />　　作为一个凡人，你的任务是运用先进的计算机为丘比特找到最佳的方案。<br /></p>', '[{\"input\": \"2\\n3\\n0 0 Adam\\n1 1 Jack\\n0 2 George\\n1 0 Victoria\\n0 1 Susan\\n1 2 Cathy\\nAdam Cathy 100\\nSusan George 20\\nGeorge Cathy 40\\nJack Susan 5\\nCathy Jack 30\\nVictoria Jack 20\\nAdam Victoria 15\\nEnd\\n\", \"output\": \"65\\n\"}]', '1068', '<p></p>', '2016-08-18 14:21:33.000000', 'ctsc2000第二试\\n', '10000', '128', '1', '0', '0', '1', '1', '　　输入第一行为正整数k，表示丘比特之箭的射程，第二行为正整数n(n<30)，随后有2n行，表示丘比特选中的人的信息，其中前n行为男子，后n行为女子。每个人的信息由两部分组成：他的姓名和他的位置。姓名是长度小于20且仅包含字母的字符串，忽略大小写的区别，位置是由一对整数表示的坐标，它们之间用空格分隔。格式为x y Name。输入文件剩下的部分描述了这些人的缘分。每一行的格式为Name1 Name2 p。Name1和Name2为有缘人的姓名，p是他们之间的缘分值(p为小于等于255的正整数)。以一个End作为文件结束标志。每两个人之间的缘分至多只被描述一次。如果没有被描述，则说明他们缘分值为1。\\n', '　　输出仅一个正整数，表示每一对被射中的人之间的缘分的总和。这个和应当是最大的。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('70', ' 采矿', '<p>    一架人类的航天飞机将人类基地建在了一个荒芜的星球上。面对紧缺的能源，他们只能在最短的时间内用SCV（一种智能机器人）采集必须的矿藏。对于这个艰巨的任务，他们希望得到编程高手们的帮助。<br />    在这个星球上，有着两种不同的矿。一种被称为“冰矿”，是一种类似H2O的凝固物的蓝色高能矿藏。另一种被称为“气矿”，是四氯化碳的一种异态形式。人类通过这两种矿的提炼，获得可供生存的能源。<br />    SCV是一种唯一可以采集这两种矿的智能机器人。他们每采集一次冰矿需要花费t1的时间，每采集一次气矿需要花费t2的时间。采集结束后，将得到8个冰矿或者８个气矿单位。每一次SCV只能采集冰矿或者是气矿中的一种。<br />    SCV可以通过主基地制造。每制造一个SCV，主基地将花费50单位的冰矿。而主基地由于制造能力有限，在同一时间只能制造一个SCV。制造一个SCV需要t3的时间。<br />    在开始时，人类拥有50个单位的冰矿和4个SCV。在最短的时间之内，他们需要至少采集到p1单位的冰矿和p2单位的气矿。请计算出他们需要的最短时间。<br /></p>', '[{\"input\": \"10 9 18 150 0\\n\", \"output\": \"40\\n\"}]', '1069', '<p></p>', '2016-08-18 14:21:33.000000', 'ctsc2000第二试\\n', '10000', '128', '1', '0', '0', '1', '1', '    输入只有一行，依次为t1,t2,t3,p1,p2，每两个数字之间有一个空格。其中1<=t1,t2,t3<=100,0<=p1,p2<=10000\\n', '输出只包含一个数字，表示可以达到目标的最少时间。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('71', ' 反质数', '<p>    对于任何正整数x，其约数的个数记作g(x)。例如g(1)=1、g(6)=4。<br />    如果某个正整数x满足：g(x)>g(i) 0<i<x，则称x为反质数。例如，整数1，2，4，6等都是反质数。<br />现在给定一个数N，你能求出不超过N的最大的反质数么？<br /></p>', '[{\"input\": \"1000\\n\", \"output\": \"840\\n\"}]', '1070', '<p></p>', '2016-08-18 14:21:33.000000', 'ZJ06day1\\n', '10000', '128', '1', '0', '0', '2', '1', '输入只有一行，一个数N（1<=N<=2,000,000,000）。\\n', '输出也只有一行，为不超过N的最大的反质数。 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('72', ' 奇怪的数列', '<p>这个数列是这样的：<br />0,1,3,2,6,7,5,4,12,13,15,14,10,11,9,8,24,25,27,26,30,31……<br />先仔细研究一下这个数列的规律。<br />现在他们请你编写一个程序，要求找出数n在此数列中的位置序号k。<br /></p>', '[{\"input\": \"5\\n\", \"output\": \"7\\n\"}]', '1071', '<p></p>', '2016-08-18 14:21:33.000000', 'From chnlkw,wlfish\\n', '10000', '128', '1', '0', '0', '2', '1', '输入数据只有一行，为数 n (n<=2^31-1)\\n', '输出数据只有一行，为数k。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('73', ' 圆环套圆环', '<p>一个有趣的圆环套圆环函数被定义如下：<br />G(n)=n-G(G(n-1)) (n是正整数)<br />G(0)=0<br />请你计算出圆环函数的值。<br /></p>', '[{\"input\": \"3\\n\", \"output\": \"2\\n\"}]', '1072', '<p>典型数学竞赛题......<br /></p>', '2016-08-18 14:21:33.000000', '', '10000', '128', '1', '0', '0', '1', '1', '一个非负整数n，n<=2^31-1。\\n', '一个正整数，即G(n)。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('74', ' 邮票面值设计', '<p>    给定一个信封，最多只允许粘贴N张邮票，计算在给定M（N+M<=10）种邮票的情况下（假定所有的邮票数量都足够）,如何设计邮票的面值，能得到最大max ，使得1～max之间的每一个邮资值都能得到。<br />   例如，N=3，M＝2，如果面值分别为1分、4分，则在l分～6分之间的每一个邮资值都能得到（当然还有8分、9分和12分）：如果面值分别为1分、3分，则在1分～7分之间的每一个邮资值都能得到。可以验证当N=3，M＝2时，7分就是可以得到连续的邮资最大值，所以MAX=7，面值分别为l分、3分。<br />样例输入：共一行，两个整数，分表为N与M的值。<br /></p>', '[{\"input\": \"3 2\\n\", \"output\": \"1 3\\nmax=7\\n\\n\"}]', '1073', '<p></p>', '2016-08-18 14:21:33.000000', 'NOIP1999\\n', '10000', '128', '1', '0', '0', '1', '1', '一行，分别为N,M。\\n', '两行。\\n第一行为m种邮票的面值，按升序排列，各数之间用一个空格隔开。\\n第二行为最大值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('75', ' 选课', '<p>学校实行学分制。每门的必修课都有固定的学分，同时还必须获得相应的选修课程学分。学校开设了N（N<300）门的选修课程，每个学生可选课程的数量M是给定的。学生选修了这M门课并考核通过就能获得相应的学分。<br />　　在选修课程中，有些课程可以直接选修，有些课程需要一定的基础知识，必须在选了其它的一些课程的基础上才能选修。例如《Frontpage》必须在选修了《Windows操作基础》之后才能选修。我们称《Windows操作基础》是《Frontpage》的先修课。每门课的直接先修课最多只有一门。两门课也可能存在相同的先修课。每门课都有一个课号，依次为1，2，3，…。 例如:<br /><br />表中1是2的先修课，2是3、4的先修课。如果要选3，那么1和2都一定已被选修过。 　　你的任务是为自己确定一个选课方案，使得你能得到的学分最多，并且必须满足先修课优先的原则。假定课程之间不存在时间上的冲突。<br /></p>', '[{\"input\": \"7 4\\n2 2\\n0 1\\n0 4\\n2 1\\n7 1\\n7 6\\n2 2\\n\", \"output\": \"13\\n2\\n6\\n7\\n3\\n\"}]', '1074', '<p></p>', '2016-08-18 14:21:33.000000', 'huyichen\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件的第一行包括两个整数N、M（中间用一个空格隔开）其中1≤N≤300,1≤M≤N。\\n以下N行每行代表一门课。课号依次为1，2，…，N。每行有两个数（用一个空格隔开），第一个数为这门课先修课的课号（若不存在先修课则该项为0），第二个数为这门课的学分。学分是不超过10的正整数。\\n', '输出文件每行只有一个数。第一行是实际所选课程的学分总数。以下各行的数，表示所选课程的课号。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('76', ' CoVH之密码破解', '<p>话说一天，Dragon.Dai大菜和整个OIBH QQ群的超级大牛同心协力，终于进入了Vijos的系统，并设置了重重机关……<br />等到V某带着柯南来到服务器准备检查Log（即是日志文件）时，才发现Log文件被加了密，密码是一个数列中的指定一位……（数列见下）经过V某及柯南的思考，总算破解了密码，看到了Log。<br /></p>', '[{\"input\": \"33\\n\", \"output\": \"1\\n\"}]', '1075', '<p>请注意好算法的优化，最优算法时间复杂度在n^5，但是数据只给出n^6级的算法能过的点。<br /></p>', '2016-08-18 14:21:33.000000', 'Copyright by Dragon.Dai@E.O.T\\nOIBH QQ群大牛们\\n\\n柯南之Vijos被黑事件 外传\\n', '10000', '128', '1', '0', '0', '1', '1', '数列：12345678910111213...........\\n输入是一个数n，表示求数列的第n位\\n1<=n<=10^8\\n', '输出第n位上的数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('77', ' 星际青蛙(弱弱版)', '<p> 在两族之间有一个空地，青蛙每次可以向前跳一步，也可以借助前面青蛙的背，跳到前面青蛙的前面一格（这格必须无青蛙）,因为两族青蛙都互不相让，所以无法掉头向后跳。请你在1S内，算出所有青蛙到对方飞行器至少要跳几步？<br />  <br /></p>', '[{\"input\": \"1\\n\", \"output\": \"3\\n\"}]', '1076', '<p>样例的跳法(*表示种族X，o表示种族Y)<br />原始：*_o<br />第1步:_*o<br />第2步:o*_<br />第3步:o_*<br /></p>', '2016-08-18 14:21:33.000000', 'boygao1992与suning\\n<<星际青蛙>>系列\\n', '1000', '128', '1', '0', '0', '1', '1', ' 输入X，X为每族青蛙的“蛙”数。(X<=2500)\\n', ' 输出M，M为最少步数。(m<=无穷大)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('78', ' CoVH之华丽的IP伪装', '<p>2006年4月4日 8:00 P.M<br />[img]ProblemImg/P1184_conan.jpg[/img][img]ProblemImg/P1184_ai.jpg[/img]<br />在这春暖花开, 阳光明媚的日子里, 柯南在”高效信息学在线评测系统”Vijos上切题目, 他兴高采烈的将刚刚拍完的程序提交上去, 突然发现前面排起了长长的队伍, 好多人在waiting, 又过一会, Vijos崩溃.<br />[img]ProblemImg/P1184_waiting.jpg[/img]<br />柯南很快意识到这不是一个普通平常的, Vijos时常发生的系统不稳定现象, 而是一场有预谋的案件. 他找到Vivian Snow (16周岁).<br />------->[img]ProblemImg/P1184_viviansnow.jpg[/img]（偶偷偷的说，这像不像喝了Aptx的Vvs？^_^）<br />[b]Vivian Snow抱怨说[/b]:” 已经是第二次了, 什么世道啊, 看我牛不顺眼啊!!” <br />[b]柯南(`_`)问[/b]:” 那么你当时记录下访问Vijos服务器的IP地址了么?” <br />[b]Vivian Snow[/b]:” 这是自然的, 我把当时的记录拿给你看.”<br />柯南扫了一眼, 发现当时访问Vijos的众多IP中, 有一部分IP, 重复大量的向服务器投了巨大的数据包. 他意识到, 很可能是这些包将服务器挤爆的. 这种不算高明的手法居然把Vijos弄瘫痪了, 而攻击者很显然留下了大量证据, 只要追寻这些IP就可以了.<br />[b]灰原哀忽然出现了[/b]:” 江户川柯南, 你想得还真简单呢.”<br />[b]柯南[/b]:” 难道…… 难道你也在切Vijos……”<br />[b]小哀[/b]:” 现在没必要讨论这个了, 关键是攻击者很可能没用真实IP .”<br />[b]柯南[/b]:” Er…… “<br />[b]柯南沉默良久, 之后缓缓站起身来[/b]:” 如果我的推理没有错的话, 我们把访问过Vijos的IP地址调查一下, 找出当时它和哪些IP联络过, 筛选出向Vijos投过包的IP.  底下只考虑向Vijos投过包的IP, 对于两个直接联络过的IP, 他们发送的所有包的大小相加, 作为联络代价. 假定两个IP如果没有直接联络, 可以通过中间IP进行联络, 联络路径代价为联络路径中各段联络代价总和. 两个IP的联络代价为各条联络路径代价中最小的那个. 找出某一个投放过包IP地址使他与其他投放过包的IP联络代价总和最大, 那么这个IP地址就是攻击者的IP了.”<br />[b]小哀[/b]:” 你这个小迷糊还真不赖嘛, 可是你是怎样推理出的, 还有你怎么找出其他IP是否联络过呢？”<br />[b]柯南[/b]:” 我也不知道, Thunder叫我这么说的, 他说不这么说这题没法出了. 至于IP之间的联络情况, Thunder说他已经放在证据里了.”<br />[b]小哀[/b]:” 那么, 我去调查当时访问过Vijos的IP, 筛选出有嫌疑的.”<br />[b]柯南[/b]:” 等等, 话是这么说, 可是数据这么大……..”<br />[b]小哀[/b]:” 原来你也有犯难的时候, 你难道没发现有位大牛看我们对话很久了么.”<br />[b]画外音[/b]:” 那么就请看题的这位大牛帮助解决柯南的难题.”<br /></p>', '[{\"input\": \"4\\n222.134.7.28 7\\n61.74.218.22 8\\n60.191.255.98 4\\n219.153.2.168 5\\n5\\n222.134.7.28 61.74.218.22\\n222.134.7.28 60.191.255.98\\n222.134.7.28 219.153.2.168\\n61.74.218.22 219.153.2.168\\n222.134.7.28 213.87.4.23\\n\", \"output\": \"The ONLY truth is: it is you, 60.191.255.98\\n\"}]', '1077', '<p>结局<br />最终, 攻击者被追查到了, 他居然是OIBH组织成员Gengar大牛.<br />Gengar被捕后的独白:” 曾经我沉迷于切Vijos, 但是每每我看到一个好题, 把它拍完, 提交的时候, 都看到了waiting长龙. 于是, 我下定决心, 既然Vijos不让我AC, 我就将Vijos毁灭. 后来, 我发现一个包可以引发一连串waiting, 十个包就是十连串, 一百万个包就足以使Vijos毁灭, 我的目的也就达成了. 小弟弟, 送你个包？”<br />可是无论如何逼供Gengar大牛对于组织内幕一概不招, 而Gengar大牛的机房也早已被组织处理. 柯南再一次和组织擦肩而过, 命运之轮继续旋转………<br /></p>', '2016-08-18 14:21:33.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行 一个正整数N (N≤100000)\\n第2~N+1行, 每行一个IP地址 和一个正的整型数表示某个IP地址投放的包的大小\\n注意同一IP地址可能投放多次包, 至多不超过2000个IP地址\\n第N+2行 一个正整数M(M≤100000)\\n第N+3~M+N+2行, 每行两个IP地址用空格隔开, 表示两个IP地址之间有过联络,\\n不会出现两个IP多次联络的情况, 但会有IP访问2~N+1行未出现过IP的情况.\\n', '一行 \\nThe_ONLY_truth_is:_it_is_you,_攻击者的IP地址   (注：_为空格)\\n如果存在两个或以上的IP地址到其他IP的代价总和最大, 或者不能访问到其他所有投放包的IP, 那么认为攻击者无法确定, 则将攻击者的IP地址作为222.240.168.135处理\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('79', ' 核电站问题', '<p>    一个核电站有N个放核物质的坑，坑排列在一条直线上。如果连续M个坑中放入核物质，则会发生爆炸，于是，在某些坑中可能不放核物质。<br />    现在，请你计算：对于给定的N和M，求不发生爆炸的放置核物质的方案总数。<br /></p>', '[{\"input\": \"4 3 \\n\", \"output\": \"13\\n\"}]', '1078', '<p>全部数据n<=50,m<=5<br /></p>', '2016-08-18 14:21:52.000000', 'OIBH\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '1000', '128', '1', '0', '0', '1', '1', '输入文件只有一行，两个正整数N,M。\\n', '输出文件只有一个正整数，表示方案总数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('80', ' 口袋的天空', '<p>给你云朵的个数N，再给你M个关系，表示哪些云朵可以连在一起。<br />现在小杉要把一些云朵连在一起，做成K个棉花糖，一个棉花糖最少要用掉一朵云，小杉想知道他怎么连，花费的代价最小。<br /></p>', '[{\"input\": \"3 1 2\\n1 2 1\\n\", \"output\": \"1\\n\"}]', '1079', '<p>样例2：<br />Input:<br />3 1 1<br />1 2 1<br />Output:<br />No Answer<br /></p>', '2016-08-18 14:21:52.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '2', '1', '每组测试数据的\\n第一行有三个数N,M,K(1<=N<=1000,1<=M<=10000,1<=K<=10)\\n接下来M个数每行三个数X,Y,L，表示X云和Y云可以通过L的代价连在一起。(1<=X,Y<=N,0<=L<10000)\\n30%的数据N<=100,M<=1000\\n', '对每组数据输出一行，仅有一个整数，表示最小的代价。\\n如果怎么连都连不出K个棉花糖，请输出\'No Answer\'。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('81', ' 天堂的馈赠', '<p>考虑到小杉刚死没多久，为了安抚他受创的心灵和思恋的感情，<br />天堂派出一个天使给小杉送礼，但IQ不够高的小杉可不能够拿到好礼物。<br />馈赠在天堂门口进行。天使站在云端，往下扔礼物。<br />天堂之门的宽度为W格（按1..W编号），高度为0格，云端的高度为H格，小杉只能站在格子里。<br />开始时（第0秒），小杉站在天堂之门的第P格。<br />馈赠开始后，天使会在某些时刻从云端的某格扔礼物下来，礼物下落的速度（格/秒）是不一样的。<br />小杉左右移动去接礼物（每秒可以移动1格或不移动）。<br />礼物之间的价值当然是不一样的，小杉事先知道了每个礼物的价值。<br />当礼物在某一秒末恰好到达小杉所在的格子中，小杉就接到了这个礼物。<br />小杉想知道，他最多可以拿到价值为多少的礼物。<br />而且，由于礼物下落的速度有些可以很……，小杉还想知道是不是有些礼物他怎么样也拿不到。<br /></p>', '[{\"input\": \"1 1 1 1\\n1 1 1 1\\n\", \"output\": \"1\\n0\\n\"}]', '1080', '<p>注意：当礼物在某一秒末 恰好 到达小杉所在的格子中，小杉才能接到这个礼物。<br /></p>', '2016-08-18 14:21:52.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '1', '1', '每组测试数据的\\n第一行有四个数W，P，H，N(1<=P<=W<=500)，(1<=H<=500)，(0<=N<=3000)\\n接下来N行，每行四个数t，r，v，s(0<=t<=1500)，(1<=r<=W)，(1<=v<=H)，(|s|<=1e5)\\n表示天使在t时刻，云端的第r格，以v格/秒的速度扔下价值s的礼物\\n输入均为正整数\\n10%的数据W<=100,H<=100,N<=200\\n', '对每组测试数据输出两行。\\n第一行仅有一个整数，表示小杉最多能拿到价值多少的礼物。\\n第二行也仅有一个整数，表示小杉不可能拿到的礼物总价值多少。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('82', ' 上帝的爱好', '<p>我们知道，词都是按照词牌来填的，上帝为了考验小杉，只给了他四种词牌，但只要压韵就算符合词牌。<br />小杉已经想好了N个意境优美的句子，每个句子都有一个韵脚。<br />符合要求的词的句式应当有如下四种\"XXYY\"，\"XYXY\"，\"XYYX\"，\"XXXX\"，其中X或Y表示韵脚。<br />现在小杉想知道，从他想的N个句子之中，最多能按顺序挑选出几首符合条件的词。<br />并且词的句子间不能交错，比如你选了1 4 6 8做为一首诗，那么7你就不能再选了。<br /></p>', '[{\"input\": \"12\\n1 2 4 2 3 1 2 2 1 1 2 2\\n\", \"output\": \"2\\n\"}]', '1081', '<p>样例最多可以挑出两首词，一种方案如下：<br />1 2 4 6/9 10 11 12<br /></p>', '2016-08-18 14:21:52.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '3', '1', '每组测试数据的\\n第一行有一个数N(N<=4000)。\\n第二行有N个不超过10000的正整数，第i个整数表示第i个句子的韵脚，整数相同表示韵脚相同。\\n30%的数据N<=100\\n', '对每组测试数据输出一行，仅有一个数字，表示小杉最多能挑出几首词来。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('83', ' 隐形的翅膀', '<p>天使告诉小杉，每只翅膀都有长度，两只翅膀的长度之比越接近黄金分割比例，就越完美。<br />现在天使给了小杉N只翅膀，小杉想挑出一对最完美的。<br /></p>', '[{\"input\": \"4\\n2 3 4 6\\n\", \"output\": \"2\\n3\\n\"}]', '1082', '<p>你可以认为黄金分割比就是0.6180339887498949<br /></p>', '2016-08-18 14:21:52.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '2', '1', '每组测试数据的\\n第一行有一个数N(2<=N<=30000)\\n第二行有N个不超过1e5的正整数，表示N只翅膀的长度。\\n20%的数据N<=100\\n', '对每组测试数据输出两个整数，表示小杉挑选出来的一对翅膀。\\n注意，比较短的在前，如果有多对翅膀的完美程度一样，请输出最小的一对。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('84', ' 容易的网络游戏', '<p>    现在网络游戏一款接一款地推出，佳佳和他的同学们也迷上了网络游戏。他们最近在玩N款不同的网络游戏。<br />    一些网络游戏允许玩家购买双倍经验卡。拥有双倍经验卡的玩家可以在有效期内获得更多的经验值。佳佳和他的同学们有着丰富的网游经验，对于任何一款网络游戏，只要是在双倍经验的条件下，无论谁玩都可以在单位时间内轻松获得一个单位的经验值。<br />    国庆节马上到了，网游公司不会错过这难得的机会大捞一把。中国网游常用的赚钱手段便是免费提供双倍经验（因为如果玩家再买一张双倍卡，便可获得4倍经验）。<br />    在9、10、11月份，佳佳和他的同学们玩的N个网络游戏中每一个都会有一段开放免费双倍经验的时间。佳佳事先作了调查，他已经把每一款网游的双倍经验开放时间都记了下来。佳佳是不会乱用自己的零花钱购买双倍经验卡的，他决定在免费双倍经验时叫同学到家里一起玩；同时，他们也不会浪费自己的时间，为了提高效率，他们只玩处于免费双倍经验开放时期的游戏。<br />    我们假定，每台电脑最多只能有一人操作，一个人最多只能操作一台电脑；并且每款游戏最多只能在一台电脑上玩，每台电脑最多运行一个游戏。我们忽略开始游戏和结束游戏时所消耗的时间。<br />    现在佳佳想知道，假如佳佳共有M台电脑，且佳佳一共叫来了P个同学，那么他和他的同学们最多能得到多少单位的经验呢？<br /></p>', '[{\"input\": \"1 1 1\\n0 100\\n\", \"output\": \"101\\n\"}]', '1083', '<p></p>', '2016-08-18 14:21:52.000000', 'OIBH命题组原创 By wxsxg\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行有三个用空格隔开的整数N,M和P，它们表示的意义如题目描述。\\n    以下N行，每行有两个用空格隔开的整数Xi,Yi(Xi<=Yi)，表示从Xi单位时间到Yi单位时间为第i款游戏开放双倍经验的时间。\\n\\n    对于70%数据，0<=Xi,Yi<=10000；\\n    对于100%数据，0<=Xi,Yi<=5000000，0<=P<=2147483647，1<=N<=1000，1<=M<=1000。\\n', '    一个整数，表示佳佳和他的同学们能获得的最大经验值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('85', ' 邮局问题', '<p>一些村庄建在一条笔直的高速公路边上，我们用一条坐标轴来描述这条公路，每个村庄的坐标都是整数，没有两个村庄的坐标相同。两个村庄的距离定义为坐标之差的绝对值。我们需要在某些村庄建立邮局。使每个村庄使用与它距离最近的邮局，建立邮局的原则是：所有村庄到各自使用的邮局的距离总和最小。<br />数据规模：1<=村庄数<=300,  1<=邮局数<=30,  1<=村庄坐标<=10000<br /></p>', '[{\"input\": \"10 5\\n1 2 3 6 7 9 11 22 44 50\\n\", \"output\": \"9\\n\"}]', '1084', '<p></p>', '2016-08-18 14:21:52.000000', 'IOI2000\' 第五题\\n', '10000', '128', '1', '0', '0', '1', '1', '2行\\n\\n第一行:n m {表示有n个村庄，建立m个邮局}\\n第二行:a1 a2 a3 .. an {表示n个村庄的坐标}\\n', '1行\\n\\n第一行:l {l表示最小距离总和}\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('86', ' Matrix67的情书', '<p>    有消息称：Matrix67找到了自己的Miss Right，正准备自己人生的第一次表白。Matrix67已经写好了情书，但为了避免其它人截获，他打算采用古来的恺撒移位密码进行加密。<br />    你通过某种渠道获知了Matrix67的加密方式。为了打探Matrix67的私密，你冒着生命危险终于搞到了这封情书。原以为可以轻易将情书解密，结果竟然发现聪明的Matrix67并没有直接写出加密用的t值，而是在那粉红色的信纸背面写着“t=你的幸运数字”。<br />    就这么放弃了吗？不，作为一个高智商的OIer，你决不轻言放弃。你需要编写一个解密程序，在不知道t值的情况下将原文打印出来。<br /></p>', '[{\"input\": \"K YKNN UJQY AQW\\n\\nAgu, K co uvknn cocbgf vjcv K jcxg aqw. Kv\'u uvknn jctf vq wpfgtuvcpf jqy aqw ejqug og. Jqy chvgt lwuv qpg ujqtv eqpxgtucvkqp aqw mpgy K ycu ogcpv hqt aqw. Dwv pqy K mpqy vjg vtwvj qh aqwt eqpxkevkqp. K\'xg pgxgt dggp ykvj uqogqpg yjq uwkvgf og uq rgthgevna. Aqw ugfwegf og ykvj aqwt ugza dqfa cpf uvtqpi urktkv, cpf aqw\'xg mgrv og ykvj aqwt vgpfgt jgctv. K mpqy aqw vjcv K ecp\'v jcxg aqw eqorngvgna cpf ocadg pqv gxgp hqt owej nqpigt. Dwv K\'o uvknn jcrra. C rctv qh aqw jcu dgeqog rctv qh og cpf vjcv ku gpqwij.\\n\\nAqw\'nn ncwij yjgp K uca vjku, dwv K ftgco cdqwv aqw gxgta pkijv. Rtqdcdna dgecwug K ecp\'v ugg aqw qhvgp gpqwij. Dwv yjgp K\'o cycmg K mpqy vjcv aqw ctg vjg hwtvjguv vjkpi htqo c ftgco. Uqogvkogu K kocikpg vjcv aqw ctg dwknv htqo uqnkf tqem: c oqxkpi uvcvwg cpf cp kpfguvtwevkdng jwocp dgkpi. Aqw cduqnwvgna eqpvckp aqwtugnh cpf vjgp cickp owej oqtg vjcp aqwtugnh. Aqwt eqphkfgpeg ku eqpuwokpi cpf aqwt rgturgevkxg ku jwig. Aqw jcxg pq rnceg kp aqwt nkhg hqt lgcnqwua qt eqornckpvu. Oa htkgpfu uggo uq uocnn kp eqorctkuqp, ykvj vjgkt rtqdngou cnycau urknnkpi qxgt qpvq gxgtaqpg gnug.\\n\\nK ycpv aqw vq mpqy jqy owej aqw\'xg qrgpgf oa gagu cpf jgnrgf og vtwna ugg oaugnh. Wpvkn pqy, oa nkhg jcu dggp cp wpfgekfgf dcem-cpf-hqtvj, cpf pqy K mpqy vjcv K\'xg ycuvgf vqq owej vkog. Dwv pqy oa fktgevkqp uggou engct, cpf K jcxg eqphkfgpeg kp oa hwvwtg. Vjg rcuv fqgup\'v uggo vq ocvvgt cpaoqtg. Aqw\'xg ocfg og ugg rquukdknkvkgu K yqwnf pgxgt jcxg kocikpgf dghqtg.\\n\\nAgu, K ycpv vq rngcug aqw. Dwv kv\'u vjtqwij rngcukpi aqw vjcv K\'nn dgeqog c dgvvgt cpf uvtqpigt rgtuqp. Vjgtg ku pqvjkpi K ycpv oqtg vjcp vq vtcpuhqto oaugnh vjtqwij aqw. Aqw ejcnngpig og vq itqy dgaqpf oaugnh cpf ngcxg oa ygcmgt ugnh dgjkpf. K yknn ujqy aqw jqy dgcwvkhwn K ecp dg, cpf K yknn ujqy aqw jqy dtknnkcpv K ecp dgeqog. Vjku yca, K mpqy K\'nn cnycau jcxg aqwt nqxg.\\n\\nHqtgxgt aqwtu,\\n\\nOcvtkz67\\n\", \"output\": \"I WILL SHOW YOU\\n\\nYes, I am still amazed that I have you. It\'s still hard to understand how you chose me. How after just one short conversation you knew I was meant for you. But now I know the truth of your conviction. I\'ve never been with someone who suited me so perfectly. You seduced me with your sexy body and strong spirit, and you\'ve kept me with your tender heart. I know you that I can\'t have you completely and maybe not even for much longer. But I\'m still happy. A part of you has become part of me and that is enough.\\n\\nYou\'ll laugh when I say this, but I dream about you every night. Probably because I can\'t see you often enough. But when I\'m awake I know that you are the furthest thing from a dream. Sometimes I imagine that you are built from solid rock: a moving statue and an indestructible human being. You absolutely contain yourself and then again much more than yourself. Your confidence is consuming and your perspective is huge. You have no place in your life for jealousy or complaints. My friends seem so small in comparison, with their problems always spilling over onto everyone else.\\n\\nI want you to know how much you\'ve opened my eyes and helped me truly see myself. Until now, my life has been an undecided back-and-forth, and now I know that I\'ve wasted too much time. But now my direction seems clear, and I have confidence in my future. The past doesn\'t seem to matter anymore. You\'ve made me see possibilities I would never have imagined before.\\n\\nYes, I want to please you. But it\'s through pleasing you that I\'ll become a better and stronger person. There is nothing I want more than to transform myself through you. You challenge me to grow beyond myself and leave my weaker self behind. I will show you how beautiful I can be, and I will show you how brilliant I can become. This way, I know I\'ll always have your love.\\n\\nForever yours,\\n\\nMatrix67\\n\"}]', '1085', '<p>样例输入的文字长度远远小于实际的输入。实际输入文件将保证大于10KB且小于50KB。<br /></p>', '2016-08-18 14:21:52.000000', 'Matrix67原创\\n', '10000', '128', '1', '0', '0', '2', '1', '    输入一段文字。文字中可能包含字母、数字、标点符号、空格、回车、制表符等各种符号，其中只有字母被加密处理过。加密后的字母其大小写不变。\\n', '    你的程序需要在不知道t值的情况下解密输入文件并输出明文。\\n    我们的明文保证是成章的英文段落，没有语法和单词拼写错误。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('87', ' 座位的争执', '<p>    还记得Matrix67的“非常男女”计划吗？由Matrix67策划的学校大型男女配对活动将在大礼堂隆重举行，学校里许多人即将前来捧场。大礼堂一共有n个座位，为了方便管理，Matrix67对它们从1到n顺序编号。售票工作已经完成，经统计，共有k个人拿到了入场券。由于k<n，因此大礼堂的座位完全足够。每张入场券上都印有座位号，入场者凭入场券对号入座。在这k个人即将陆续入场时，Matrix67发现了一个严重的错误：由于在入场券的销售过程中搞错了大礼堂总的座位数，入场券上印的座位号只有1到t。虽然这t个座位号中的每一个都在入场券中至少出现了一次，但有一个事实不能改变：t<k。也就是说，这k个人中有一些人的入场券上印有相同的座位号。这样，入场时必将发生很多次座位的争执。我们假定，当一个人入场后发现了他该坐的位置上已经有了人，此时这两个人将发生一次争执，争执的结果总是这个人不能夺回座位；此时该人继续寻找下一个座位号并可能再次发生争执，直到找到一个空位置为止。Matrix67必须调整这k个人的入场顺序，使得总的座位争执发生的次数最少。<br /></p>', '[{\"input\": \"6 5 3\\n1 2 1 3 2\\n\", \"output\": \"6\\n\"}]', '1086', '<p>样例说明：<br />    假设我们将入场顺序调整为1、1、3、2、2，下面说明此时发生的座位争执次数应该如何计算。<br />    第一个人入场后成功找到1号座位。<br />    第二个人入场后发现自己的入场券上印有的1号座位已经被占，此时发生一次争执；而后该人继续寻找2号座位并就座。<br />    第三个人入场后成功找到3号座位。<br />    第四个人入场后发现2号座位被占，争执后转而寻找3号座位并再次发生争执，直至成功找到4号座位。这里的争执有两次。<br />    第五个人从2号座位开始寻找，接连三次寻找座位失败，最终在5号位置就座。这里一共发生了三次争执。<br />    这样的入场方案使得总的争执数为6次。可以证明，不存在更好的入场顺序使得发生争执的次数少于6次。<br /></p>', '2016-08-18 14:21:52.000000', 'Matrix67原创\\n', '10000', '128', '1', '0', '0', '3', '1', '    第一行有三个用空格隔开的正整数n、k、t，它们分别表示总的座位数、实际到场人数和入场券上的最大座位号，它们满足关系n>k>t。\\n    第二行有k个用空格隔开的正整数。这些正整数保证不超过t，且所有不超过t的正整数总会在这些数中出现至少一次。它们表示这k个人的入场券上印的座位号。\\n\\n    对于30%的数据，n<=10；\\n    对于50%的数据，n<=1000；\\n    对于100%的数据，n<=100 000。\\n', '    输出发生争执的最少次数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('88', ' 文科生的悲哀(二)', '<p>    这学期的政治、历史和地理课本各有n章。每一科的教学必须按章节从前往后依次进行。若干章政治、若干章历史和若干章的地理内容可以合成一个教学阶段。年级计划将整个学期的内容分成若干个阶段进行教学。为了保证各科教学进度相同，年级规定每一个阶段包含的各科的章节数必须相同。一个阶段包含的章节越多，这个阶段所需要的课时也就越多。经过研究，假如某个阶段包含政史地各k章，则政治学习需要花费3^k天的课时，历史学习需要花费5^k天的课时，地理学习需要花费2^k天的课时，最后还需要4天的综合训练。一个阶段所花费的总时间是以上四项时间的和。<br />    为了便于安排时间，学校希望每个阶段恰好需要若干周来完成。因此，划分出的每一个阶段所需要的天数都必须是7的整数倍（高三是没有星期六和星期天的）。<br />    那么，这学期的课程最多可以划分成多少个阶段呢？你会想到，要想划分的阶段数最多，一个阶段完成一章的任务就行了（因为3^1+5^1+2^1+4=14是7的整数倍）。但问题没有这么简单。每个课本都可能有一些独立性较强的连续章节，它们具有很强的连续性，必须在一个阶段中完成。如果你已知所有不能划分在两个或两个以上的阶段中的连续章节，你还能计算出最多能安排多少个阶段吗？<br /></p>', '[{\"input\": \"8 3\\nPolitics:1-2\\nHistory:5-6\\nPolitics:1-4\\n\", \"output\": \"3\\n\"}]', '1087', '<p>样例说明：<br />    最多可以安排三个阶段，具体方案如下：<br />    第一阶段完成各科第1-6章的课程<br />    第二阶段完成各科第7章的课程<br />    第三阶段完成各科第8章的课程<br /><br />Sample Input #2:<br />4 2<br />Geography:1-3<br />History:2-4<br /><br />Sample Output #2:<br />-1<br /></p>', '2016-08-18 14:22:02.000000', 'Matrix67原创\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行有两个用空格隔开的正整数n和m，分别表示各科课本的章节数和不可分割的连续章节的个数。\\n    第二行到第m+1行，每行告诉了一个信息，该信息说明了哪一个课本的第几章到第几章必须一次性完成。同一科目给定的章节有可能重复或有重叠。\\n    每一行信息分为两个部分。第一部分是“Politics:”、“History:”、“Geography:”三个字符串中的一个；第二部分是用“-”连接的两个数字x,y(1<=x<y<=n)，表示该行第一部分所示的课本从第x章到第y章具有连续性。第二部分紧接在第一部分后面，没有任何符号分隔。\\n\\n    对于30%的数据，n,m<=10；\\n    对于50%的数据，n,m<=1000；\\n    对于100%的数据，n,m<=100 000。\\n', '    一个正整数，表示按照学校和年级的种种要求（见下）最多可以安排的阶段个数。\\n    如果没有符合条件的安排方案，请输出-1。\\n\\n    注意：以下三个要求需要同时考虑。\\n        1.每一个阶段包含的各科章数相同；\\n        2.按时间函数计算出的各阶段所需天数必须是7的倍数；\\n        3.给出的任一个连续章节都不能被分割开来。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('89', ' 最厉害的机器人', '<p>机器人们都想知道谁是最厉害的，于是它们进行如下一种比赛。<br />每个机器人需要在最短的时间内找到自己面前的一个球，走到它面前并绕过它，将球推进身后的球门。<br />首先Wind给了每个机器人一些钱，让他们去补充自己的装备，Wind给的钱恰好够补充k个装备。<br />有如下几个装备可供补充：亮度传感器，超声波测距，触动传感器，马达。(每种装备最多有10个)<br />而机器人找到球的时间=(20-亮度传感器*2)*x1,球离机器人的距离为(100-超声波测距*7)*x2,绕过球的距离为(100-触动传感器*9)*x3,机器人的速度为(10+马达*1)*x4。<br />换句话说，总共的时间为，找球的时间+走到球的时间+绕过球的时间+走回原地的时间。<br />机器人们要如何配置自己的装备才能达到最短的时间呢？<br /></p>', '[{\"input\": \"5 1 1 1 1\\n\", \"output\": \"39.000\\n\"}]', '1088', '<p>因为有了超声波，所以距离更加精确。<br />因为有了触动传感器，可以更精确的感觉到球。<br />（有点牵强- -将就看吧。）<br /></p>', '2016-08-18 14:22:02.000000', 'Wind\\n', '10000', '128', '1', '0', '0', '1', '1', '每组测试数据只有1行\\n5个数k,x1,x2,x3,x4 (0<=k<=40,1<=x1,x2,x3,x4<=10,且均为整数)\\n', '对每组数据输出1行\\n为最短的时间，保留3位小数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('90', ' 最聪明的机器人', '<p>机器人们都想知道谁是最聪明的，于是它们进行如下一种游戏。<br />这个游戏由2次机器人进行，2个机器人分别报出一个数n1,n2,谁报得大，就以这个数作为基数，并由它先开始，轮流进行如下操作：<br />选取一个不大于基数的素数或者1，从基数中扣掉它。谁把基数扣到0，谁就赢了。<br />为了公平，他们会进行10次比赛，请你分别输出这10次谁获胜了。<br /></p>', '[{\"input\": \"10 9\\n8 10\\n10 7\\n6 10\\n8 9\\n9 7\\n6 9\\n9 5\\n3 2\\n1 2\\n\", \"output\": \"1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n2\\n\"}]', '1089', '<p>聪明的机器人当然会采取最优策略<br /></p>', '2016-08-18 14:22:02.000000', 'Wind\\n', '10000', '128', '1', '0', '0', '2', '1', '每组测试数据均有10行\\n每行2个数n1,n2 (n1,n2<=maxlongint n1<>n2)\\n', '对每组测试数据输出10行，每行一个整数1或2\\n表示哪个机器人能获胜\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('91', ' 最勇敢的机器人', '<p>机器人们都想知道谁是最勇敢的，于是它们比赛搬运一些物品。<br />它们到了一个仓库，里面有n个物品，每个物品都有一个价值Pi和重量Wi，但是有些物品放在一起会爆炸，并且爆炸具有传递性。（a和b会爆炸、b和c会爆炸则a和c会爆炸）<br />机器人们可不想因此损失自己好不容易从Wind那里敲诈来的装备，于是它们想知道在能力范围内，它们最多可以拿多少价值的物品。<br />你能帮助它们吗？<br /></p>', '[{\"input\": \"3 10 1\\n100 1\\n200 5\\n10 5\\n1 2\\n\", \"output\": \"210\\n\"}]', '1090', '<p></p>', '2016-08-18 14:22:02.000000', 'Wind\\n', '10000', '128', '1', '0', '0', '1', '1', '每组测试数据\\n第1行为n,Wmax,k(0<=n,Wmax,k<=1000)\\n接下来n行，为每个物品的Pi,Wi(0<=Pi<=1000,1<=Wi<=10,均为整数)\\n再接下来k行，每行2个数字a,b表示a和b会发生爆炸\\n', '对每组数据输出1行\\n为最大可能价值\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('92', ' 旅行家的预算', '<p>一个旅行家想驾驶汽车以最少的费用从一个城市到另一个城市(假设出发时油箱是空的)。给定两个城市之间的距离d1、汽车油箱的容量c（以升为单位）、每升汽油能行驶的距离d2、出发点每升汽油价格p和沿途油站数n，油站i离出发点的距离d[i]、每升汽油价格p[i]。<br />计算结果四舍五入至小数点后两位。<br />如果无法到达目的地，则输出-1。<br /></p>', '[{\"input\": \"275.6 11.9 27.4 2.8 2\\n102.0 2.9\\n220.0 2.2\\n\", \"output\": \"26.95\\n\"}]', '1091', '<p>0<=n<=100<br /></p>', '2016-08-18 14:22:02.000000', 'noip1999 提高组第3题\\n', '1000', '128', '1', '0', '0', '1', '1', '输入共n+1行，第一行为d1,c,d2,p,n，以下n行，每行两个数据，分别表示该油站距出发点的距离d[i]和该油站每升汽油的价格p[i]。两个数据之间用一个空格隔开。\\n', '1 <= n <= 100\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('93', ' 月饼盒', '<p>一个被分为 n*m　个格子的月饼盒，第 i 行第 j 列位置的格子里面有 a [ i , j ]个月饼。本来CCC老师打算送这盒月饼给某人的，但是就在要送出月饼盒的前一天晚上，一只极其可恶的老鼠夜袭月饼盒，有部分格子被洗劫并且穿了洞。CCC老师必须尽快从这个月饼盒里面切割出一个矩形月饼盒，新的月饼盒不能有洞，并且CCC老师希望保留在新月饼盒内的月饼的总数尽量多。任　务　：请帮CCC老师设计一个程序 计算一下新月饼盒最多能够保留多少月饼。<br /></p>', '[{\"input\": \"3 4\\n1 2 3 4\\n5 0 6 3\\n10 3 4 0\\n\", \"output\": \"17\\n\"}]', '1092', '<p>	10  3  4<br />这个矩形的糖果数最大<br /></p>', '2016-08-18 14:22:02.000000', 'From OIBH.\\ndfh改编！\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行有两个整数 n、m。第 i + 1 行的第 j 个数表示 a [ i , j ]，如果这个数为 0 ，则表示这个位置的格子被洗劫过。其中：1 ≤ n，m ≤ 300 , 0 ≤ a [ i , j ]≤ 255\\n', '输出最大月饼数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('94', ' 水王争霸', '<p>众所周知，IOIForum有很多水王，他们的发贴数是如此之多，以至于必须要用高精度数才能保存。<br />为了迎接国庆，IOIForum决定举行一次水王争霸赛，比赛的规则是将这些水王截止到2003年9月30日23时59分59秒这一刻所发的总贴数从大到小进行排序。每个水王当然都想取得尽量靠前的名次，所以他们竭尽全力，不择手段地进行灌水。<br />终于，激动人心的一刻到来了，2003年10月1日0时0分0秒，你作为裁判得到了每个水王的发贴数，现在，你的任务是公正地把这些水王按照发贴数从大到小进行排序。<br /></p>', '[{\"input\": \"6\\nlowai\\n1534534124561243453\\nzhouyuan\\n23453265344\\nMaolaoda\\n23442353452342\\nBuTaoCaiGuai\\n7568784573464\\nArthurKing\\n97534892734723947\\nhyyylr\\n623893451\\n\", \"output\": \"lowai\\nArthurKing\\nMaolaoda\\nBuTaoCaiGuai\\nzhouyuan\\nhyyylr\\n\"}]', '1093', '<p></p>', '2016-08-18 14:22:02.000000', '全国青少年信息学（计算机）奥林匹克分区联赛\\n提高组　复赛\\n2003年10月3日下午2:00 ~ 5:00\\n\\nsxpeter\\n', '10000', '128', '1', '0', '0', '1', '1', '输入的第一行是一个1到1000的整数N，表示总共有N位水王参加了争霸赛。\\n以下依次给出每位水王的描述，一位水王的描述占据两行，第一行为一个仅由字母和数字组成的长度不超过20的字符串，代表这个水王的ID，第二行一个高精度的整数(非负数)，代表这个水王的发贴数。注意，这个整数的首位没有不必要的0。\\n考虑到IOIForum的数据库是有限的，所有水王发贴数的总长度（注意，是总长度而不是总和）不会超过10000。\\n除了子母、数字和必要的换行，输入中不会出现空格等字符。\\n', '依次输出按照发贴数从大到小排好序的各位水王的ID，每个ID占据单独的一行。不能有任何多余的字符。若几个ID的发贴数相同，则按照ID的字典顺序先后排列。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('95', ' 多项式表示', '<p>给定一个多项式的各次项系数(从八次到零次)，让你组成一条多项式，此多项式没有多余的符号。例如，给定系数为0，0，0，1，22，-333，0，1和-1，你应该输出x^5 + 22x^4 - 333x^3 + x - 1<br />组成多项式有如下规则：<br />1.	各项应按降序排列，即八次项排在前，零次项排在后。<br />2.	指数前要加符号\"^\"。<br />3.	常数项只以常数形式出现。<br />4.	只有系数非零的项会出现在多项式中；除非所有项的系数都为零，则常数项不能省。<br />5.	多项式只在二元运算符\"＋\"和\"－\"的前后各有一个空格，其余地方没有空格。<br />6.	如果首项系数为正，则前面不用加符号；而如果首项系数为负，则前面应有负号，例如-7x^2 + 30x + 66。<br />7.	负数项应以\"减去非负数项\"的形式出现（除非此负数项是首项，则按上面的规则输出），也就是说，不能输出x^2 + -3x,而要输出x^2 - 3x。<br />8.	常数1和－1只能以常数项形式出现；也就是说，不能输出-1x^3 + 1x^2 + 3x^1 - 1,而要输出-x^3 + x^2 + 3x - 1。<br /></p>', '[{\"input\": \"0  0  0  1  22  -333  0  1  -1\\n\", \"output\": \"x^5 + 22x^4 - 333x^3 + x - 1\\n\"}]', '1094', '<p></p>', '2016-08-18 14:22:02.000000', 'GDOI2001\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '1000', '128', '1', '0', '0', '2', '1', '只有一行，有9个绝对值小于1000的整数，整数间有一个或多个空格。\\n\\n', '只有一行，表示你输出的多项式，行首行末无多余空格。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('96', ' 单挑女飞贼', '<p>在一个夜黑风高，伸手不见五指的深夜，睡梦中的林月如突然听到房外一阵躁动。她出去一看，发现一个女飞贼抢了一个古董商的包袱。<br />\"站住！\"<br />\"那你为什么不来追我？\"<br />\"因为程序设计，在李大哥来之前，我不能追你。\"<br />\"那李逍遥为什么不来呢？\"<br />\"大概程序出bug了吧\"<br />……………………………………………… <br />终于，在等了一个又一个时辰后，林月如终于忍不住了，开始向女飞贼发起进攻。<br />\"喂！你为什么可以动？？？\"<br />\"这大概也是一个bug吧！\"<br />\"不公平啊！\"<br />\"废话少说。\"<br />已知林月如和女飞贼站在一个矩阵中，矩阵中有某些障碍物不可穿越。月如使出的铜钱镖可攻击8个方向，但不可穿越障碍物（可视为不能穿墙的重狙）。每个单位时间，月如可向上下左右4个方向移动一格，攻击不浪费时间。当然，月如想尽快结束这场无聊的战斗，所以她想在最短的时间内消灭女飞贼。<br /></p>', '[{\"input\": \"3 4\\nOXXO\\nXXOO\\nXOOO\\n3 2 2 4\\n3 3 1 1\\n0 0 0 0\\n\", \"output\": \"1\\nImpossible!\\n\"}]', '1095', '<p>对于30%的数据,有N*M<=100<br />对于50%的数据,有N*M<=400<br />对于100%的数据,有N*M<=20000<br />对于100%的数据,测试数据组数不超过20组<br /></p>', '2016-08-18 14:22:02.000000', '经典问题\\n', '1000', '128', '1', '0', '0', '2', '1', '第一行为2个数N,M表示矩阵的规模(N为高,M为宽)。\\n接下来是N*M的矩阵,O表示空地,X表示障碍物。\\n下面是若干行数据，每行为一对数据，分别是女飞贼的位置和林月如的位置，显然她们都不可能在障碍物上。\\n以\"0 0 0 0\"为输入结束标志。\\n', '每一组数据输出一行，仅一个整数，表示能消灭掉女飞贼的最短时间。\\n显然若能直接打到女飞贼，则时间为0。\\n若无法消灭，则输出\"Impossible!\"。（不含引号）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('97', ' 神秘的咒语', '<p>身为拜月教的高级间谍，你的任务总是逼迫你出生入死。比如这一次，拜月教主就派你跟踪赵灵儿一行，潜入试炼窟底。<br />据说试炼窟底藏着五行法术的最高法术：风神，雷神，雪妖，火神，山神的咒语。为了习得这些法术，要付出艰辛的努力，但是回报同样十分丰厚。<br />拜月希望你告诉他咒语的长度为多少。（你：“请问您想知道咒语的具体内容吗？”拜月：“想，但是vijos不支持special judge。”-_-原来大人物也有大人物的悲哀。。。）<br />于是你偷偷躲在一边，想乘机看看咒语究竟是什么。突然，天空（？？试炼窟底看的到天空？？）出现了两条非常长的数字串，你抓狂了。究竟哪个才是真正的咒语呢？你突然想到，这两个都不是咒语（不妨称之为伪咒语），而真正的咒语却与他们有着密切的联系。于是你打开拜月亲手给你写的纸条：\"The Real Incantation is Their Common Increasing Subsequence of Maximal Possible Length\"<br />\"该死的拜月，居然还会E文!\"你咒骂着，但为了一家老小的生命，又不得不卖命地算着咒语的长度。<br /></p>', '[{\"input\": \"1\\n5 1 4 2 5 -12\\n4 -12 1 2 4\\n\", \"output\": \"2\\n\"}]', '1096', '<p>对于100%的数据,有1<=N<=5，1<=M<=500,Ai，Bi在长整型范围内。<br /></p>', '2016-08-18 14:22:02.000000', '经典问题\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行为1个数N,代表有N组测试数据。\\n对于每组测试数据，描述了两条数字串，首先一个数字为一条伪咒语的长度M，接下来M个数描述了伪咒语的内容。\\n', '共N行，每行一个数字，描叙了对应咒语的长度。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('98', ' 风筝-逃亡', '<p>    燕姿以出发地作为原点建立了一个坐标轴(原点为x,单位都为m)，歌迷们也可以理解为坐标轴上的一点。<br />    歌迷的的追赶规律是这样的：第一群歌迷聚在一个点，而任何一群歌迷如果在1s内找不到燕姿的话就会分头去追，此时每一群歌迷都会分离成2群，分别沿坐标轴的正负两个方向移动一段距离l（由于追星心切，移动的时间忽略不计）,然后又静止1s，再按同样的规则但移动的距离变为上一次的1/2再分开。直到某一群歌迷分头移动的距离<1m时，将由于筋疲力尽，人数过少而不能在分头行动。<br />    任意一群歌迷可以寻找到的的范围，都是以该群歌迷所处点为中心，半径始终为r的圆。另外，必须考虑的就是燕姿也时刻在跑（速度为v），把这理解为燕姿从原点上以一定速度沿x轴正方向移动。如果燕姿被一群歌迷发现了(也就是在一群歌迷的发现范围之内或者经过一群歌迷的发现范围之内)，那么她就必须签名1次。 <br />    现在,想知道燕姿必须签名多少次。（在歌迷发现范围以内以及距离歌迷发现范围0.1的范围内,燕姿也会被歌迷们发现）。 <br /></p>', '[{\"input\": \"3 1 3 2\\n\", \"output\": \"2\\n\"}]', '1097', '<p>燕姿第一秒从0移动到2 ，而第一秒内第一群歌迷发现范围为以3为中心，半径为1的圆，所以燕姿必须给第一群歌迷签名。 <br />燕姿第二秒从2移动到4这一过程中，没经过任意一群歌迷发现范围圆。 <br />燕姿第三秒从4移动到6这一过程中，经过4.5为中心的歌迷群的发现范围圆。所以燕姿必须给这一群歌迷签名。 <br />第四秒开始，歌迷分头行动后移动的距离为0.75m<1m，所以没有歌迷可以继续追赶。<br /></p>', '2016-08-18 14:22:02.000000', '孙燕姿\\n[IMG]http://images.blogcn.com/2006/10/19/8/glaze3d,20061019143429.gif[/IMG]\\n', '10000', '128', '1', '0', '0', '2', '1', ' 输入只有一行 x,r,l,v(abs(x)<=2^20  r,l,v<=2^20) 分别是燕姿的出发点坐标，歌迷发现范围的半径，第一群歌迷分头寻找后两群人各将移动的距离以及燕姿奔跑的速度。  \\n', '输出只有一个整数，表示燕姿必须签名多少次。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('99', ' Leave-绿光', '<p>    燕姿唱完这首歌，天上降落了一道绿光，在地上形成了一个矩形的映射，矩形的长为a，宽为b。燕姿向姿迷出了一个考题，谁能够把这个矩形绿光阵分成若干个正整数的正方形，谁的正方形边长之和最小，他就将得到燕姿的一个合影。姿迷们都很想得到合影，可是怎么分才最小呢？大家都束手无策，现在，这个问题交给你了。<br />歌迷X：呜呜呜，俺的语文不好，听不懂你在讲什么。<br />燕姿：别怕，其实这个问题可以简化为……  <br />    将边长为正整数a，b的长方形划分成若干边长均为正整数，每个正方形的边均平行于矩形的相应边，试求这些正方形边之和的最小值MIN。<br />(如果这个长方形可以分成N个正方形，其中每个边长为Ai,那么MIN=A1+A2+^^^+AN<br />注意，数组A中的元素可能相等）<br /></p>', '[{\"input\": \"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n\", \"output\": \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"}]', '1098', '<p>对于样例，可全分长边长为一的正方形，并且可以证明找不到比其更优的分割方法；<br />加油吧，为了得到燕姿的合影（#17）<br /></p>', '2016-08-18 14:22:02.000000', '孙燕姿\\n[IMG]http://images.blogcn.com/2006/10/19/8/glaze3d,20061019143429.gif[/IMG]\\n', '10000', '128', '1', '0', '0', '1', '1', '一共10行\\n每行两个正整数，Ai，Bi  \\n对于30%的数据，Ai，Bi<maxint\\n对于100%的数据，Ai，Bi<maxlongint;\\n', '一共10行\\n每行一个整数，输出MINi\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('100', ' The Moment-遇见', '<p>    燕姿在桥的这一端，而xx在桥的另一端。这座桥非常特殊，桥面是由2N-1个方格组成的，每个方格里写有一个数码Ai（-50<=Ai<=50）。如下是N=4时的情况。可以认为燕姿从最下面出发。每一次，她可以向上跳到与自己所在方格相临的其中一个方格内（例如在最下面的7中，可以跳到上一行的10和8中）。当燕姿跳到最顶端的方格后，她就不能再移动了。（在未到顶端前，不允许跳到表格外。）每在一格内，都要把格内的数字写下来。<br />    但是，仅仅到达顶端是不够的。桥会向对岸的xx询问一个数字k，燕姿到达顶端后，拿出写下来的数字，可以在任意两个数字间添加“+”或“-”号，使得计算的结果m最接近k。经过桥的判断，如果对于桥上的方格m是最接近k的数字，那么燕姿就可以通过桥和xx相遇，否则………<br />（为了让燕姿能更容易地通过，xx给出的数字总是0）你的任务，就是帮助燕姿找出这个最接近k的m.<br />[IMG]http://images.blogcn.com/2006/10/19/7/glaze3d,20061019134428.bmp[/IMG]         <br />最优解7+8+(-5)+(-2)-5-1-2=0  <br />			或7+10+(-7)-6+(-3)-3+2=0<br />			或7+10+(-5)-10-5+1+2=0<br />			或+10+(-5)+(-2)-5-3-2=0<br /></p>', '[{\"input\": \"4                                    \\n2\\n3 1\\n-3 5 7\\n6 10 -2 20\\n-7 -5 -8\\n10 8 \\n7\\n\\n\", \"output\": \"0\\n\"}]', '1099', '<p></p>', '2016-08-18 14:22:02.000000', '孙燕姿\\n[IMG]http://images.blogcn.com/2006/10/19/8/glaze3d,20061019143429.gif[/IMG]  \\n', '10000', '128', '1', '0', '0', '2', '1', '    输入的第一行是N（1<=N<=30），接下来2N-1行给出了表格中每行的每个方格中的数字，第i+1行的第j个数字对应于表格中第i行的第j个数字。文件中第二行的数字表示的是表格顶端的方格中的数字。所有的数字都是整数，同一行相邻的两个数字间用空格符隔开。                                 \\n', '输出只有一行，是你所求出的最接近零的计算结果的绝对值\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('101', ' Easy Selection', '<p>这个游戏是这样的，wind先写下一排数。既然是一排，当然有首尾咯。<br />wind和小杉(lolanv)每次只能从这排数的头或尾取一个数。<br />最后谁取的数的和多，谁就赢了。如果两人的和一样多，先取者胜。<br />有天swgr看到他们俩在玩这个游戏，很好奇。<br />他想知道，在两人总是做出最优决策的情况下（两个人的智商都是很高的……），<br />谁能取得最终的胜利呢？<br /></p>', '[{\"input\": \"2\\n2\\n1\\n1 3\\n2\\n0\\n1 3\\n\\n\", \"output\": \"lolanv\\nwind\\n\"}]', '1100', '<p>大数据随机生成<br />认真阅读题目的每一个字哦~ ^_^<br /></p>', '2016-08-18 14:22:02.000000', 'nlogn年前的某次NOI\\n\\nswgr改编\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行为一个数k(k<=10)，表示有k组测试数据。\\n以下k组测试数据。\\n每组测试数据中，第一行仅有一个偶数n(0<n<=100000)\\n第二行也仅有一个数，0表示wind先取数，1表示小杉(lolanv)先取数\\n第三行有n个数，是wind给出的一排数。这n个数的绝对值均不超过1e6\\n', '对每组测试数据输出一行\\n表示在两人总是做出最优决策的情况下，\\n最终的胜利者的名字，即\"wind\"或\"lolanv\"（引号不输出）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('102', ' 佳佳的魔法照片', '<p>一共有n个人（以1--n编号）向佳佳要照片，而佳佳只能把照片给其中的k个人。佳佳按照与他们的关系好坏的程度给每个人赋予了一个初始权值W[i]。然后将初始权值从大到小进行排序，每人就有了一个序号D[i]（取值同样是1--n）。按照这个序号对10取模的值将这些人分为10类。也就是说定义每个人的类别序号C[i]的值为(D[i]-1) mod 10 +1，显然类别序号的取值为1--10。第i类的人将会额外得到E[i]的权值。你需要做的就是求出加上额外权值以后，最终的权值最大的k个人，并输出他们的编号。在排序中，如果两人的W[i]相同，编号小的优先。<br /></p>', '[{\"input\": \"10 10\\n1 2 3 4 5 6 7 8 9 10\\n2 4 6 8 10 12 14 16 18 20\\n\", \"output\": \"10 9 8 7 6 5 4 3 2 1\\n\"}]', '1101', '<p>对于50%的数据，n<=200；<br />对于100%的数据，n<=50 000，k<=2000，给出的所有正整数都不超过32767。<br /></p>', '2016-08-18 14:22:14.000000', '', '1000', '128', '1', '0', '0', '2', '1', '第一行输出用空格隔开的两个整数，分别是n和k。\\n第二行给出了10个正整数，分别是E[1]到E[10]。\\n第三行给出了n个正整数，第i个数表示编号为i的人的权值W[i]。\\n', '只需输出一行用空格隔开的k个整数，分别表示最终的W[i]从高到低的人的编号。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('103', ' 佳佳的魔杖', '<p>佳佳得到的这些树枝在属性上完全相同。每一个树枝都有n段（用1~n编号），给定了每段的长度L[i]和每段的魔力值M[i]。单独的一段是不可以从中间切开的，你可以做的就是选择一段或连续的几段，把它们作为一个整体切下来，再用来制作魔杖。但是一根魔杖的长度不能太长——不能大于给定的值hi；也不能太短——不能小于给定的值lo。<br />魔杖有一个奇怪的要求：如果某一根魔杖的制作材料是另一根魔杖的一部分，则这两根魔杖之间将发生冲突。比如说树枝有三段，从左到右的长度分别为4、 1、3，佳佳需要长度为4到5之间的魔杖。佳佳可以用一根树枝的前两段做出一个长度为5的魔杖，用一根树枝的后两段做出长度为4的魔杖；但他决不能用一根树枝的前两段做了魔杖后再单独使用另一根树枝的第一段做成魔杖，因为前者包含了后者的所有成分，这会导致冲突。<br />我们假设佳佳可以得到任意多这样的树枝。佳佳需要制作出若干个互不冲突的魔杖，使所有魔杖的魔力值之和最大。（魔杖的长度就是组成它的那些段的长度的总和，魔力值亦然）。<br /></p>', '[{\"input\": \"6 4 5\\n1 3 3 2 2 1\\n2 3 1 4 5 2\\n\", \"output\": \"21\\n\"}]', '1102', '<p>取[1 3] [3 2] [2 2 1]做成魔杖。<br />得到最大权值2+3+1+4+4+5+2=21。<br />对于30%的数据，n<=10；<br />对于50%的数据，n<=100；<br />对于100%的数据，n<=1000，lo<=hi<=2^31-1，L[i],M[i]<=100 000<br /></p>', '2016-08-18 14:22:14.000000', '', '1000', '128', '1', '0', '0', '1', '1', '第一行有三个用空格隔开的正整数，分别表示n、lo、hi。\\n第二行的n个用空格隔开的正整数就是L[1]、L[2]……L[n]。\\n第三行的n个用空格隔开的正整数就是M[1]、M[2]……M[n]。\\n输入文件以一个回车/换行符结尾。\\n', '只用输出一个整数，表示能够获得的魔力值的最大值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('104', ' 佳佳的魔法阵', '<p>魔法阵是一个n*m的格子（高n，宽m），n*m为偶数。佳佳手中有n*m个宝石（以1~n*m编号）。佳佳从最右上角的格子开始走，从一个格子可以走到上、下、左、右4个相邻的格子，但不能走出边界。每个格子必须且仅能到过1次，这样佳佳一共走了n*m个格子停止（随便停哪里）。佳佳每进入一个格子，就在该格子里放入一颗宝石。他是按顺序放的，也就是说——第i个进入的格子放入i号宝石。<br />如果两颗宝石的编号对n*m/2取模的值相同，则认为这两颗宝石相互之间有微妙的影响。也就是说，我们按照宝石的编号对n*m/2取模的值，将宝石分成n*m/2对，其中每对都恰有两颗宝石。对于每一对宝石，设第一颗宝石在第a行第b列，另一颗宝石在第c行第d列，那么定义这2个宝石的魔力影响值为 k1*|a-c|+k2*|b-d|。<br />需要你求出的是，在所有合乎题意的宝石摆放方案中，所有成对的宝石间的最大魔力影响值的最小值为多少。换句话说，如果我们定义对n*m/2取模的值为i的一对宝石的魔力影响值为a[i]。你需要求出的就是max{a[i]|i=0,1,2...}的最小值。<br /></p>', '[{\"input\": \"2 2 2 2\\n\", \"output\": \"4\\n\"}]', '1103', '<p></p>', '2016-08-18 14:22:14.000000', '', '1000', '128', '1', '0', '0', '1', '1', '只有一行用空格隔开的4个整数，分别是n、m、k1、k2，n*m<=50，0<k1,k2<=32767。\\n', '只需输出一个整数，即题目所要求的“所有成对的宝石间的最大魔力影响值的最小值”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('105', ' 佳佳的魔法药水', '<p>得到一种药水有两种方法：可以按照魔法书上的指导自己配置，也可以到魔法商店里去买——那里对于每种药水都有供应，虽然有可能价格很贵。在魔法书上有很多这样的记载：1份A药水混合1份B药水就可以得到1份C药水。（至于为什么1+1=1，因为……这是魔法世界）好了，现在你知道了需要得到某种药水，还知道所有可能涉及到的药水的价格以及魔法书上所有的配置方法，现在要问的就是：1.最少花多少钱可以配制成功这种珍贵的药水；2.共有多少种不同的花费最少的方案（两种可行的配置方案如果有任何一个步骤不同则视为不同的）。假定初始时你手中并没有任何可以用的药水。<br /></p>', '[{\"input\": \"7\\n10 5 6 3 2 2 3\\n1 2 0\\n4 5 1\\n3 6 2\\n\", \"output\": \"10 3\\n\"}]', '1104', '<p>最优方案有3种，分别是：直接买0号药水；买4号药水、5号药水配制成1号药水，直接买2号药水，然后配制成0号药水；买4号药水、5号药水配制成1号药水，买3号药水、6号药水配制成2，然后配制成0。<br /></p>', '2016-08-18 14:22:14.000000', '', '1000', '128', '1', '0', '0', '1', '1', '第一行有一个整数N(N<=1000)，表示一共涉及到的药水总数。药水从0~N-1顺序编号，0号药水就是最终要配制的药水。\\n第二行有N个整数，分别表示从0~N-1顺序编号的所有药水在魔法商店的价格（都表示1份的价格）。\\n第三行开始，每行有3个整数A、B、C，表示1份A药水混合1份B药水就可以得到1份C药水。注意，某两种特定的药水搭配如果能配成新药水的话，那么结果是唯一的。也就是说不会出现某两行的A、B相同但C不同的情况。\\n', '输出两个用空格隔开的整数，分别表示得到0号药水的最小花费以及花费最少的方案的个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('106', ' 座位安排', '<p>考场里的座位恰好有n行m列，并且恰好有n*m位考生在这个考场里面考试，也就是说，所有的座位上都有考生。hzy根据学校记载，有k位考生可能作弊，因此hzy不能让他们之中的任何两个人做在相邻的座位上！所谓相邻的座位，即在同一行相邻列或者在同一列的相邻行的座位。hzy准备这样安排座位，首先随机选择一种方案，如果这种方案是合法的，就用这种方案，否则重新选择。你的任务是计算，他得到一个合法方案时，需要的期望选择次数。<br /></p>', '[{\"input\": \"input1\\n1 4 3\\ninput2\\n2 3 2\\n\", \"output\": \"input1\\nImpossible!\\ninput2\\n15/8\\n\"}]', '1105', '<p>1≤n≤80，1≤m≤80，1≤n*m≤80<br />0≤k≤20，并且k≤n*m<br /></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入文件为一行，仅包含三个整数n，m和k。\\n', '如果不存在合法的方案，则输出文件seating.out中应该包含Impossible!，否则输出一个分数p/q，表示期望选择次数(即平均次数)，这里p和q应该是互质的。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('107', ' 箱子游戏', '<p>地板上有一个正方形的大箱子和许多三角型的小箱子。所有的小箱子都在大箱子里面，同时，一些三角形的小箱子可能在另一些小箱子里面，但是所有的小箱子都不相交。你在大箱子里面随机选一个点，它恰好在inBox个小箱子里的概率是多少？我们知道，大箱子的边都平行于坐标轴，并且有两个顶点位于(0，0)和(100，100)。<br /></p>', '[{\"input\": \"input1\\n2 1\\n0 0 20 0 0 10\\n1 1 6 1 1 5\\ninput2\\n4 0\\n0 0 10 0 0 20\\n0 100 0 90 20 100\\n50 50 60 60 50 70\\n51 55 55 60 51 65\\n\", \"output\": \"output1\\n0.00900\\n\\noutput2\\n0.97000\\n\"}]', '1106', '<p></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入的第一行包含两个正整数n和inBox，表示小箱子的个数以及随机点在多少个小箱子里面。接下来n行每行包含6个整数x1，y1，x2，y2，x3，y3，表示一个小箱子的三个顶点的坐标。\\n', '输出仅包含一个数字，表示你计算的概率，精确到小数点后5位。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('108', ' sk抓螃蟹', '<p>现有n只螃蟹，每个在一个二维作标上，保证没有任何两个螃蟹重合。sk伸手抓螃蟹了，他怕螃蟹的攻击，当他捉一只螃蟹时，其他螃蟹都朝这只运动(左边的向右，右边的向左，x作标相同的不动）。当然，螃蟹只会在x方向上横行，每秒一单位长度。sk捉一只螃蟹一秒钟，当本秒末若某一只螃蟹与msk的手同x作标，sk的行动失败。问：怎样做才能抓完n只螃蟹？<br /></p>', '[{\"input\": \"input 1\\n2\\n1 3 4 2\\n\\ninput 2\\n1\\n10 5\\n\\n\", \"output\": \"output 1\\n1\\n2\\n\\noutput 2\\n1\\n\\n\\n\"}]', '1107', '<p>  hint<br />         输入数据保证有解...<br />         n<=5000.<br />         0<=所有作标<=2^31-1<br />         本题很简单<br /></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '2', '1', '  输入 第一行：n。\\n       第二行有2*n正整数，相邻两个用一空格分开，第2*i-1和第2*i个数表示编号为i的螃蟹的x，y作标。输入保证按先x后y的递增序排列。\\n', '  输出:\\n    一共n行，每行一个螃蟹编号，表示sk取螃蟹的先后序列。如有多解，输出第一个编号最小的，如果第一个编号相同，输出第二个编号最大的，再相同，输出第三个编号最小的......\\n  \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('109', ' 苹果摘陶陶', '<p>话说去年苹果们被陶陶摘下来后都很生气，于是就用最先进的克隆技术把陶陶克隆了好多份>.<然后把他们挂在树上，准备摘取。<br />摘取的规则是，一个苹果只能摘一个陶陶，且只能在它所能摘到的高度以下的[b]最高的[/b]陶陶，如果摘不到的话只能灰溜溜的走开了>.<给出苹果数目及每个苹果可以够到的高度和各个陶陶的高度，求苹果们都摘完后剩下多少个陶陶……<br /></p>', '[{\"input\": \"5 5\\n9\\n10\\n2\\n3\\n1\\n6\\n7\\n8\\n9\\n10\\n\", \"output\": \"3\\n\"}]', '1108', '<p>很容易的基础题哦>.<<br /></p>', '2016-08-18 14:22:14.000000', '[CoVH]Dragon.Dai原创\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行为两个数，分别为苹果的数量n和陶陶的数量m（n,m<=2000）\\n以下的n行，分别为各个苹果能够到的最大高度。\\n再接下来的m行，分别为各个陶陶的高度。\\n高度均不高于300。\\n当然了，摘取的顺序按照输入的“苹果够到的最大高度”的顺序来摘。\\n', '输出仅有一个数，是剩下的陶陶的数量\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('110', ' 火车票', '<p>一个铁路线上有n(2<=n<=10000)个火车站，每个火车站到该线路的首发火车站距离都是已知的。任意两站之间的票价如下表所示：<br />站之间的距离 - X	         票价<br />0<X<=L1          	C1<br />L1<X<=L2	C2<br />L2<X<=L3	C3<br />其中L1，L2，L3，C1，C2，C3都是已知的正整数，且(1 <= L1 < L2 < L3 <= 10^9, 1 <= C1 < C2 < C3 <= 10^9)。显然若两站之间的距离大于L3，那么从一站到另一站至少要买两张票。注意：每一张票在使用时只能从一站开始到另一站结束。<br />现在需要你对于给定的线路，求出从该线路上的站A到站B的最少票价。你能做到吗？<br /></p>', '[{\"input\": \"3 6 8 20 30 40\\n7\\n2 6\\n3\\n7\\n8\\n13\\n15\\n23\\n\", \"output\": \"70\\n\"}]', '1109', '<p></p>', '2016-08-18 14:22:14.000000', '某大牛提供的资料，如有侵权请立刻提出，我会立刻删除\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件的第一行为6个整数, L1, L2, L3, C1, C2, C3 (1 <= L1 < L2 < L3 <= 10^9, 1 <= C1 < C2 < C3 <= 10^9) ,这些整数由空格隔开.第二行为火车站的数量N (2 <= N <= 10000).第三行为两个不同的整数A、B,由空格隔开。接下来的 N-1 行包含从第一站到其他站之间的距离.这些距离按照增长的顺序被设置为不同的正整数。相邻两站之间的距离不超过L3. 两个给定火车站之间行程花费的最小值不超过10^9，而且任意两站之间距离不超过 10^9。\\n', '输出文件中只有一个数字,表示从A到B要花费的最小值. \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('111', ' 拯救OIBH总部', '<p>OIBH被突来的洪水淹没了>.<还好OIBH总部有在某些重要的地方起一些围墙，用*号表示，而一个封闭的*号区域洪水是进不去的……现在给出OIBH的围墙建设图，问OIBH总部没被淹到的重要区域（由\"0\"表示）有多少。<br /></p>', '[{\"input\": \"样例输入1\\n5 4\\n00000\\n00*00\\n0*0*0\\n00*00\\n\\n样例输入2\\n5 5\\n*****\\n*0*0*\\n**0**\\n*0*0*\\n*****\\n\", \"output\": \"样例输出1\\n1\\n\\n样例输出2\\n5\\n\"}]', '1110', '<p></p>', '2016-08-18 14:22:14.000000', '经典题目\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行是两个数，x和y（x,y<=500）\\n第二行及以下是一个由*和0组成的x*y的图。\\n', '输出没被水淹没的OIBH总部的“0”的数量。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('112', ' 生日蛋糕', '<p>7月17日是Mr.W的生日，ACM-THU为此要制作一个体积为N*pi的M层生日蛋糕，每层都是一个圆柱体。 设从下往上数第i(1 <= i <= M)层蛋糕是半径为Ri, 高度为Hi的圆柱。当i < M时，要求Ri > Ri+1且Hi > Hi+1。 由于要在蛋糕上抹奶油，为尽可能节约经费，我们希望蛋糕外表面（最下一层的下底面除外）的面积Q最小。 令Q = S*pi 请编程对给出的N和M，找出蛋糕的制作方案（适当的Ri和Hi的值），使S最小。（除Q外，以上所有数据皆为正整数）<br /></p>', '[{\"input\": \"100\\n2\\n\", \"output\": \"68\\n\"}]', '1111', '<p>给大家提高AC率。<br /></p>', '2016-08-18 14:22:14.000000', 'NOIP99\\n', '10000', '128', '1', '0', '0', '1', '1', '每组数据两行，第一行为N（N <= 10000），表示待制作的蛋糕的体积为N*pi；第二行为M(M <= 20)，表示蛋糕的层数为M。\\n', '仅一行，是一个正整数S（若无解则S=0）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('113', ' 古城之谜', '<p>著名的考古学家石教授在云梦高原上发现了一处古代城市遗址。让教授欣喜的是在这个他称为冰峰城(Ice-Peak City)的城市中有12块巨大石碑，上面刻着用某种文字书写的资料，他称这种文字为冰峰文。然而当教授试图再次找到冰峰城时，却屡屡无功而返。<br />幸好当时教授把石碑上的文字都拍摄了下来，为了解开冰峰城的秘密，教授和他的助手牛博士开始研究冰峰文，发现冰峰文只有陈述句这一种句型和名词(n)、动词(v)、辅词(a)这三类单词，且其文法很简单：<br /><文章>	    ::= <句子> { <句子> }<br /><句子>	    ::= <陈述句><br /><陈述句>    ::=	<名词短语> { <动词短语> <名词短语> } [ <动词短语> ]<br /><名词短语>  ::=	<名词> | [ <辅词> ] <名词短语><br /><动词短语>  ::=	<动词> | [ <辅词> ] <动词短语><br /><单词>      ::=	<名词> | <动词> | <辅词><br />注：其中<名词>、<动词>和<辅词>由词典给出，“::=”表示定义为，“|”表示或，{}内的项可以重复任意多次或不出现，[]内的项可以出现一次或不出现。<br />在研究了大量资料后，他们总结了一部冰峰文词典，由于冰峰文恰好有26个字母，为了研究方便，用字母a到z表示它们。<br />冰峰文在句子和句子之间以及单词和单词之间没有任何分隔符，因此划分单词和句子令石教授和牛博士感到非常麻烦，于是他们想到了使用计算机来帮助解决这个问题。假设你接受了这份工作，你的第一个任务是写一个程序，将一篇冰峰文文章划分为最少的句子，在这个前提下，将文章划分为最少的单词。<br /></p>', '[{\"input\": \"11\\nn.table\\nn.baleine\\na.silly\\nn.snoopy\\nn.sillysnoopy\\nv.is\\nv.isnot\\nn.kick\\nv.kick\\na.big\\nv.cry\\nsillysnoopyisnotbigtablebaleinekicksnoopysillycry.\\n\", \"output\": \"2\\n9\\n\"}]', '1112', '<p>[样例说明]<br />输出对应的划分：<br />sillysnoopyn isnotv biga tablen.<br />baleinen kickv snoopyn sillya cryv.	<br />如果用下面的划分：<br />sillya snoopyn isnotv biga tablen.<br />baleinen kickv snoopyn sillya cryv.<br />则划分的句子数仍为2个，但单词数却多了1个，为10个，显然应该按前者而不是后者划分。<br /></p>', '2016-08-18 14:22:14.000000', 'NOI2000\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件第1行为词典中的单词数n（n<=1000）。\\n输入文件第2行至第(n+1)行每行表示一个单词，形为“α.mot”， α表示词性，可能是n(名词),v（动词）,a（辅词）中的一个，mot为单词，单词的长度不超过20。拼写相同而词性不同的单词视为不同的单词，如输入示例中的n.kick与v.kick是两个不同的单词。\\n输入文件第(n+2)行为需要划分的文章，以“.”结束。\\n输入文件中的文章确保为冰峰文。文章是由有限个句子组成的，每个句子只包含有限个单词。文章长度不超过5KB。\\n', '输出文件为两行，每行一个整数。\\n输出文件第1行为划分出来的句子数。\\n输出文件第2行为划分出来的单词数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('114', ' 儿子游戏机', '<p>源自真实生活<br />    陈老奔的弟弟苏毛头最近迷上了一款游戏叫“儿子游戏机”，这款游戏乃是老奔制作的一个学龄前儿童的学习游戏，游戏的原理是做加减法并统计得分的程序。得分为千分制，共有mt道题(0<mt<=1000)。<br />    可是毛头很笨，2岁就会算100以内的加减法的老奔的弟弟居然6岁了只能算n(0<n<=100)以内的加减法，而且脑子一根筋地认为1+3=2，并且大于十的加数相加不会进位。<br />    “n以内”表示的是：加数、减数、被减数、和、差在任何时候都不超过n，超过了毛头必然做错（毛头的习惯是空着不做）。<br />    毛头做题只要出现了1+3的环节就会出错：<br />    1+3= ２  19+30= ２９  11+33+11+33= ６６　11+30-21= ０ 1+1+1+1= ２<br />    毛头大于十的加数相加不会进位：<br />    6+4= １０  19+9= １８  24+56= ７０ 99+1= ９０<br />    毛头的减法掌握很好，没有问题。<br />    毛头的一张试卷如下：n=20，mt=10<br />1+3= ２ ×<br />6+5= １１ √<br />10+10= ２０ √<br />14+6= １０ ×<br />5+9= １４ √<br />10+11=   ×<br />32-31=   ×<br />1+2+3+4+5-6-7= ２ √<br />1+1+1+1-1-1= ０ ×<br />3+9+6+5+8+7-5-6-7-8-6=   ×<br />    这样，这个小笨蛋得了400分。又要被老奔KTV了<br />    （KTV：K毛头一拳，T毛头一脚，把毛头折成V字型）<br />PS:计算当然是从左到右依次计算哈~<br /></p>', '[{\"input\": \"20 10\\n1+3=\\n6+5=\\n10+10=\\n14+6=\\n5+9=\\n10+11=\\n32-31=\\n1+2+3+4+5-6-7=\\n1+1+1+1-1-1=\\n3+9+6+5+8+7-5-6-7-8-6=\\n\", \"output\": \"400\\n\"}]', '1113', '<p></p>', '2016-08-18 14:22:14.000000', 'CSCCcd99\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行为两个整数：n,mt 具体功用见“描述”\\n(mt可以被1000整除)\\n\\n以下mt行为题目，格式为\\na+b=\\na+b-c=\\na-b+c-d+e+f=\\n...\\n等式不会超过100位，加数减数不会超过50个，且不超过3位\\n', '第一行输出一个整数：毛头的得分\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('115', ' 多进制高精度乘法', '<p>高精度乘法(mul.pas)<br />计算机表示数值的能力是有限的特别是精度。如计算机表示实数时一般只能保留几位有效数字，这就需要我们编写程序特殊处理。现有以字符串形式输入的两个高精度的K进制正实数，串长小于500，进行高精度乘法运算，输出它们的精确运算结果。<br />Input (mul.in)<br />第一行是一个十进制整数K，表示使用的进制。<br />第二行是一列数字或小数点（若有小数点“.”则只出现一次，也可能没有，数字是0—9，A，B，C，D，E，F，G，H，I。A-I分别表示10-18）表示一个乘数。<br />第三行是另一个乘数，格式同第二行<br />Output (mul.out)<br />输出文件中只有一行，表示K进制下的精确运算结果。<br />Sample<br />Input<br />16<br />100<br />AB.C                              <br />Output<br />  ABC0<br />约定<br />K<=18<br /></p>', '[{\"input\": \"\", \"output\": \"\"}]', '1114', '<p></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('116', ' 连续自然数和', '<p>对一个给定的自然数M，求出所有的连续的自然数段（连续个数大于1），这些连续的自然数段中的全部数之和为M。<br />例子：1998+1999+2000+2001+2002 = 10000，所以从1998到2002的一个自然数段为M=10000的一个解。<br /></p>', '[{\"input\": \"10000\\n\", \"output\": \"18 142 \\n297 328 \\n388 412 \\n1998 2002\\n\"}]', '1115', '<p></p>', '2016-08-18 14:22:14.000000', '', '1000', '128', '1', '0', '0', '1', '1', '包含一个整数的单独一行给出M的值（10 <= M <= 2,000,000）\\n', '每行两个自然数，给出一个满足条件的连续自然数段中的第一个数和最后一个数，两数之间用一个空格隔开，所有输出行的第一个按从小到大的升序排列，对于给定的输入数据，保证至少有一个解。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('117', ' 导弹拦截', '<p>某国为了防御敌国的导弹袭击，研发出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试验阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。<br /></p>', '[{\"input\": \"389,207,155,300,299,170,158,65\\n\", \"output\": \"6,1\\n\"}]', '1116', '<p>注意申题，切勿直接提交过去的程序！<br /></p>', '2016-08-18 14:22:14.000000', 'NOIP1999 经典问题 [实中编程者联盟 2006.10]\\n', '10000', '128', '1', '0', '0', '1', '1', '输入数据只有一行，该行包含若干个数据，之间用半角逗号隔开，表示导弹依次飞来的高度（导弹最多有 20 枚，其高度为不大于 30000 的正整数）。\\n', '输出数据只有一行，该行包含两个数据，之间用半角逗号隔开。第一个数据表示这套系统最多能拦截的导弹数；第二个数据表示若要拦截所有导弹至少要再添加多少套这样的系统。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('118', ' 回文数', '<p>若一个数（首位不为零）从左向右读与从右向左读都一样，我们就将其称之为回文数。<br />例如：给定一个10进制数56，将56加56（即把56从右向左读），得到121是一个回文数。<br />    又如：对于10进制数87：<br />    STEP1：87+78  = 165                  STEP2：165+561 = 726<br />    STEP3：726+627 = 1353                STEP4：1353+3531 = 4884<br />    在这里的一步是指进行了一次N进制的加法，上例最少用了4步得到回文数4884。<br />    写一个程序，给定一个N（2<=N<=10，N=16）进制数M，求最少经过几步可以得到回文数。如果在30步以内（包含30步）不可能得到回文数，则输出“Impossible！”<br /></p>', '[{\"input\": \"9\\n87\\n\", \"output\": \"6\\n\"}]', '1117', '<p></p>', '2016-08-18 14:22:14.000000', 'NOIP1999提高组第2题\\n', '10000', '128', '1', '0', '0', '1', '1', '共两行\\n第一行为进制数N（2<=N<=10，N=16）\\n第二行为N进制数M（0<=M<=maxlongint）\\n', '共一行\\n第一行为经过的步数或“Impossible！”\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('119', ' 递增序列', '<p>给定一个数字串，请你插入若干个逗号，使得该数字串成为一个严格递增的数列且分成的数的个数最多，在这个问题中，前导的零是允许出现在数的前面的。<br /></p>', '[{\"input\": \"125123123\\n\", \"output\": \"1,2,5,12,3123\\n\"}]', '1118', '<p></p>', '2016-08-18 14:22:14.000000', 'O Likewind\\n', '10000', '128', '1', '0', '0', '1', '1', '一行,是一个长度不超过80的数字串\\n', '按次序输出严格递增且分成的数的个数最多，相邻两个数之间用一个逗号隔开，如果有多个数列满足要求，则输出第一个数最大的那个数列，若这样的解还不止一个，则输出第二个数最大的那个数列，以此类推。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('120', ' 黑皮的正方形', '<p> 一天他不务正业出去耍，看见街上的地板是由很多小的正方形组成，顿时心里突发奇想想要总结一下到底有多少正方形。。。。<br />于是乎，他狠下心数了数，终于翻山越岭知道了正方形的总边长为N，你的目的是找出在可以组成的每个至少边为1的正方形的个数。(因为黑皮太笨了，无法找到)。。<br /></p>', '[{\"input\": \"2\\n\", \"output\": \"5\\n\"}]', '1119', '<p>本题太简单了，na上来个大家，解解烦~~~~<br />《呵呵》<br /></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '自然数(0<=n<=32767)\\n', '一个数，即正方形的总数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('121', ' 埃及分数', '<p>在古埃及，人们使用单位分数的和(形如1/a的, a是自然数)表示一切有理数。如：2/3=1/2+1/6,但不允许2/3=1/3+1/3,因为加数中有相同的。对于一个分数a/b,表示方法有很多种，但是哪种最好呢？首先，加数少的比加数多的好，其次，加数个数相同的，最小的分数越大越好。<br />如：19/45=1/3 + 1/12 + 1/180<br />19/45=1/3 + 1/15 + 1/45<br />19/45=1/3 + 1/18 + 1/30,<br />19/45=1/4 + 1/6 + 1/180<br />19/45=1/5 + 1/6 + 1/18. <br />最好的是最后一种，因为1/18比1/180,1/45,1/30,1/180都大。<br />给出a,b(0<a<b<1000),编程计算最好的表达方式。<br />输入：a b<br />输出：若干个数，自小到大排列，依次是单位分数的分母。<br /></p>', '[{\"input\": \"19 45\\n\", \"output\": \"5 6 18\\n\"}]', '1120', '<p></p>', '2016-08-18 14:22:14.000000', 'from OIBH 信息学练习赛 #1 第三题\\n', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('122', ' 分凸多边形', '<p>如果一个正方形被划分为n个凸多边形，给出n的定值，求这些凸多边形边数的最大值max。<br />由于该结果会因n的变化而变化，有可能会很大，所以给定一个数m，请你输出max除以2的m次方的余数(即max mod 2^m)。<br /></p>', '[{\"input\": \"1 \\n10\\n\", \"output\": \"4\\n\"}]', '1121', '<p></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入只有两行。\\n第一行，一个整数，n；\\n对于n,n的长度<=1000。\\n第二行，一个整数，m；\\n对于m,m<=10.\\n', '一行，一个整数，即max mod 2^m\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('123', ' 分解因式 加强版', '<p>一个自然数N的正因子个数记为F(N)，例如18的所有正因子为1、2、3、6、9、18，所以F(18)=6。现在给出K，求所有满足F(N)=K的N中最小的数.<br /></p>', '[{\"input\": \"2\\n5\\n7\\n\", \"output\": \"2^4\\n2^6\\n\"}]', '1122', '<p>前文已经给了hint<br /></p>', '2016-08-18 14:22:14.000000', '改编自P1229\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行n，表示有n个数据,1<=n<=10\\n接下来n行，每行一个数k，1<=k<=65536\\n', '输出n行，每行一个解\\n对于每个解，按照算术基本定理输出它的素数唯一分解，例如：\\n如果解是6936，则输出2^3*3*17^2(按素因子从小到大的顺序)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('124', ' 单词接龙', '<p>  单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的“龙”（每个单词都最多在“龙”中出现两次），在两个单词相连时，其重合部分合为一部分，例如 beast和astonish，如果接成一条龙则变为beastonish，另外相邻的两部分不能存在包含关系，例如at 和 atide 间不能相连。<br /></p>', '[{\"input\": \"5\\nat\\ntouch\\ncheat\\nchoose\\ntact\\na\\n\", \"output\": \"23\\n\"}]', '1123', '<p>连成的“龙”为atoucheatactactouchoose<br /></p>', '2016-08-18 14:22:14.000000', 'NOIP2000提高组第3题\\n', '10000', '128', '1', '0', '0', '1', '1', '  输入的第一行为一个单独的整数n (n<=20)表示单词数，以下n 行每行有一个单词，输入的最后一行为一个单个字符，表示“龙”开头的字母。你可以假定以此字母开头的“龙”一定存在.\\n', '  只需输出以此字母开头的最长的“龙”的长度\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('125', ' 能量项链', '<p>    在Mars星球上，每个Mars人都随身佩带着一串能量项链。在项链上有N颗能量珠。能量珠是一颗有头标记与尾标记的珠子，这些标记对应着某个正整数。并且，对于相邻的两颗珠子，前一颗珠子的尾标记一定等于后一颗珠子的头标记。因为只有这样，通过吸盘（吸盘是Mars人吸收能量的一种器官）的作用，这两颗珠子才能聚合成一颗珠子，同时释放出可以被吸盘吸收的能量。如果前一颗能量珠的头标记为m，尾标记为r，后一颗能量珠的头标记为r，尾标记为n，则聚合后释放的能量为（Mars单位），新产生的珠子的头标记为m，尾标记为n。<br />需要时，Mars人就用吸盘夹住相邻的两颗珠子，通过聚合得到能量，直到项链上只剩下一颗珠子为止。显然，不同的聚合顺序得到的总能量是不同的，请你设计一个聚合顺序，使一串项链释放出的总能量最大。<br />例如：设N=4，4颗珠子的头标记与尾标记依次为(2，3) (3，5) (5，10) (10，2)。我们用记号♁表示两颗珠子的聚合操作，(j♁k)表示第j，k两颗珠子聚合后所释放的能量。则第4、1两颗珠子聚合后释放的能量为：<br />(4♁1)=10*2*3=60。<br />这一串项链可以得到最优值的一个聚合顺序所释放的总能量为<br />((4♁1)♁2)♁3）=10*2*3+10*3*5+10*5*10=710。<br /></p>', '[{\"input\": \"4\\n2 3 5 10\\n\", \"output\": \"710\\n\"}]', '1124', '<p></p>', '2016-08-18 14:22:14.000000', 'NOIP2006第一题\\n\\n', '1000', '128', '1', '0', '0', '2', '1', '    输入文件的第一行是一个正整数N（4≤N≤100），表示项链上珠子的个数。第二行是N个用空格隔开的正整数，所有的数均不超过1000。第i个数为第i颗珠子的头标记（1≤i≤N），当1≤i＜N时，第i颗珠子的尾标记应该等于第i+1颗珠子的头标记。第N颗珠子的尾标记应该等于第1颗珠子的头标记。\\n至于珠子的顺序，你可以这样确定：将项链放到桌面上，不要出现交叉，随意指定第一颗珠子，然后按顺时针方向确定其他珠子的顺序。\\n', '    输出文件只有一行，是一个正整数E（E≤2.1*109），为一个最优聚合顺序所释放的总能量。  \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('126', ' 金明的预算方案NOIP提高组2006', '<p>    金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N元钱就行”。今天一早，金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子：<br />主件	附件<br />电脑	打印机，扫描仪<br />书柜	图书<br />书桌	台灯，文具<br />工作椅	无<br />    如果要买归类为附件的物品，必须先买该附件所属的主件。每个主件可以有0个、1个或2个附件。附件不再有从属于自己的附件。金明想买的东西很多，肯定会超过妈妈限定的N元。于是，他把每件物品规定了一个重要度，分为5等：用整数1~5表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是10元的整数倍）。他希望在不超过N元（可以等于N元）的前提下，使每件物品的价格与重要度的乘积的总和最大。<br />    设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为j1，j2，……，jk，则所求的总和为：v[j1]*w[j1]+v[j2]*w[j2]+ …+v[jk]*w[jk]。（其中*为乘号）请你帮助金明设计一个满足要求的购物单。<br /></p>', '[{\"input\": \"1000 5\\n800 2 0\\n400 5 1\\n300 5 1\\n400 3 0\\n500 2 0\\n\", \"output\": \"2200\\n\"}]', '1125', '<p></p>', '2016-08-18 14:22:14.000000', 'NOIP2006第二题\\n\\n', '1000', '128', '1', '0', '0', '1', '1', '    输入文件的第1行，为两个正整数，用一个空格隔开：\\nN  m \\n其中N（<32000）表示总钱数，m（<60）为希望购买物品的个数。）\\n从第2行到第m+1行，第j行给出了编号为j-1的物品的基本数据，每行有3个非负整数\\nv  p  q\\n（其中v表示该物品的价格（v<10000），p表示该物品的重要度（1~5），q表示该物品是主件还是附件。如果q=0，表示该物品为主件，如果q>0，表示该物品为附件，q是所属主件的编号）\\n', '     输出文件只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值\\n（<200000）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('127', ' 作业调度方案', '<p>    我们现在要利用m台机器加工n个工件，每个工件都有m道工序，每道工序都在不同的指定的机器上完成。每个工件的每道工序都有指定的加工时间。<br />每个工件的每个工序称为一个操作，我们用记号j-k表示一个操作，其中j为1到n中的某个数字，为工件号；k为1到m中的某个数字，为工序号，例如2-4表示第2个工件第4道工序的这个操作。在本题中，我们还给定对于各操作的一个安排顺序。<br />    例如，当n=3，m=2时，“1-1，1-2，2-1，3-1，3-2，2-2”就是一个给定的安排顺序，即先安排第1个工件的第1个工序，再安排第1个工件的第2个工序，然后再安排第2个工件的第1个工序，等等。<br />一方面，每个操作的安排都要满足以下的两个约束条件。<br />(1) 对同一个工件，每道工序必须在它前面的工序完成后才能开始；<br />(2) 同一时刻每一台机器至多只能加工一个工件。<br />另一方面，在安排后面的操作时，不能改动前面已安排的操作的工作状态。<br />    由于同一工件都是按工序的顺序安排的，因此，只按原顺序给出工件号，仍可得到同样的安排顺序，于是，在输入数据中，我们将这个安排顺序简写为“1 1 2 3 3 2”。<br />还要注意，“安排顺序”只要求按照给定的顺序安排每个操作。不一定是各机器上的实际操作顺序。在具体实施时，有可能排在后面的某个操作比前面的某个操作先完成。<br />例如，取n=3,m=2，已知数据如下：<br />工件号	机器号/加工时间<br />	工序1	工序2<br />1	1/3	2/2<br />2	1/2	2/5<br />3	2/2	1/4<br />则对于安排顺序“1 1 2 3 3 2”，下图中的两个实施方案都是正确的。但所需要的总时间分别是10与12。<br />　<br />    当一个操作插入到某台机器的某个空档时（机器上最后的尚未安排操作的部分也可以看作一个空档），可以靠前插入，也可以靠后或居中插入。为了使问题简单一些，我们约定：在保证约束条件（1）（2）的条件下，尽量靠前插入。并且，我们还约定，如果有多个空档可以插入，就在保证约束条件（1）（2）的条件下，插入到最前面的一个空档。于是，在这些约定下，上例中的方案一是正确的，而方案二是不正确的。显然，在这些约定下，对于给定的安排顺序，符合该安排顺序的实施方案是唯一的，请你计算出该方案完成全部任务所需的总时间。<br /></p>', '[{\"input\": \"2 3\\n1 1 2 3 3 2\\n1 2 \\n1 2 \\n2 1\\n3 2 \\n2 5 \\n2 4\\n\", \"output\": \"10\\n\"}]', '1126', '<p></p>', '2016-08-18 14:22:14.000000', 'NOIP2006第三题\\n\\n', '1000', '128', '1', '0', '0', '1', '1', '    输入文件的第1行为两个正整数，用一个空格隔开：\\nm n （其中m（<20）表示机器数，n（<20）表示工件数）\\n第2行：m*n个用空格隔开的数，为给定的安排顺序。\\n接下来的2n行，每行都是用空格隔开的m个正整数，每个数不超过20。\\n其中前n行依次表示每个工件的每个工序所使用的机器号，第1个数为第1个工序的机器号，第2个数为第2个工序机器号，等等。\\n后n行依次表示每个工件的每个工序的加工时间。\\n可以保证，以上各数据都是正确的，不必检验。\\n', '    输出文件只有一个正整数，为最少的加工时间。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('128', ' 2^k进制数', '<p>设r是个2k 进制数，并满足以下条件：<br />（1）r至少是个2位的2k 进制数。<br />（2）作为2k 进制数，除最后一位外，r的每一位严格小于它右边相邻的那一位。<br />（3）将r转换为2进制数q后，则q的总位数不超过w。<br />在这里，正整数k（1≤k≤9）和w（k＜W≤30000）是事先给定的。<br />问：满足上述条件的不同的r共有多少个？<br />    我们再从另一角度作些解释：设S是长度为w 的01字符串（即字符串S由w个“0”或“1”m组成），S对应于上述条件（3）中的q。将S从右起划分为若干个长度为k 的段，每段对应一位2k进制的数，如果S至少可分成2段，则S所对应的二进制数又可以转换为上述的2k 进制数r。<br />例：设k=3，w=7。则r是个八进制数（23=8）。由于w=7，长度为7的01字符串按3位一段分，可分为3段（即1，3，3，左边第一段只有一个二进制位），则满足条件的八进制数有：<br />2位数：高位为1：6个（即12，13，14，15，16，17），高位为2：5个，…，高位为6：1个（即67）。共6+5+…+1=21个。<br />3位数：高位只能是1，第2位为2：5个（即123，124，125，126，127），第2位为3：4个，…，第2位为6：1个（即167）。共5+4+…+1=15个。<br />所以，满足要求的r共有36个。<br /></p>', '[{\"input\": \"3 7\\n\", \"output\": \"36\\n\"}]', '1127', '<p></p>', '2016-08-18 14:22:14.000000', 'NOIP2006第四题\\n', '1000', '128', '1', '0', '0', '1', '1', '输入文件只有1行，为两个正整数，用一个空格隔开：\\nk  W\\n', '    输出文件为1行，是一个正整数，为所求的计算结果，即满足条件的不同的r的个数（用十进制数表示），要求最高位不得为0，各数字之间不得插入数字以外的其他字符（例如空格、换行符、逗号等）。\\n（提示：作为结果的正整数可能很大，但不会超过200位）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('129', ' 明明的随机数', '<p>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤100），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。<br /></p>', '[{\"input\": \"10\\n20 40 32 67 40 20 89 300 400 15\\n\", \"output\": \"8\\n15 20 32 40 67 89 300 400\\n\"}]', '1128', '<p></p>', '2016-08-18 14:22:14.000000', 'Upload by CoVH Team\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '输入有2行，第1行为1个正整数，表示所生成的随机数的个数：\\nN\\n第2行有N个用空格隔开的正整数，为所产生的随机数。\\n\\n', '输出也是2行，第1行为1个正整数M，表示不相同的随机数的个数。第2行为M个用空格隔开的正整数，为从小到大排好序的不相同的随机数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('130', ' 开心的金明', '<p>金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N 元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的N 元。于是，他把每件物品规定了一个重要度，分为5 等：用整数1~5 表示，第5 等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过N 元（可以等于N 元）的前提下，使每件物品的价格与重要度的乘积的总和最大。设第j 件物品的价格为v[j]，重要度为w[j]，共选中了k 件物品，编号依次为j1...jk，则所求的总和为：v[j1]*w[j1]+..+v[jk]*w[jk]请你帮助金明设计一个满足要求的购物单.<br /></p>', '[{\"input\": \"1000 5\\n800 2\\n400 5\\n300 5\\n400 3\\n200 2\\n\", \"output\": \"3900\\n\"}]', '1129', '<p></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '2', '1', '输入的第1 行，为两个正整数，用一个空格隔开：\\nN m\\n（其中N（<30000）表示总钱数，m(<25)为希望购买物品的个数。）\\n从第2 行到第m+1 行，第j 行给出了编号为j1\\n的物品的基本数据，每行有2 个非负整数\\nv p\\n（其中v 表示该物品的价格（v≤10000），p 表示该物品的重要度（1~5））\\n', '输出只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的\\n最大值（<100000000）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('131', ' Jam的计数法', '<p>Jam是个喜欢标新立异的科学怪人。他不使用阿拉伯数字计数，而是使用小写英文字母计数，他觉得这样做，会使世界更加丰富多彩。在他的计数法中，每个数字的位数都是相同的（使用相同个数的字母），英文字母按原先的顺序，排在前面的字母小于排在它后面的字母。我们把这样的“数字”称为Jam数字。在Jam数字中，每个字母互不相同，而且从左到右是严格递增的。每次，Jam还指定使用字母的范围，例如，从2到10，表示只能使用{b,c,d,e,f,g,h,i,j}这些字母。如果再规定位数为5，那么，紧接在Jam数字“bdfij”之后的数字应该是“bdghi”。（如果我们用U、V依次表示Jam数字“bdfij”与“bdghi”，则U<V，且不存在Jam数字P，使U<P<V）。你的任务是：对于从文件读入的一个Jam数字，按顺序输出紧接在后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。<br /></p>', '[{\"input\": \"2 10 5\\nbdfij\\n\\n\", \"output\": \"bdghi\\nbdghj\\nbdgij\\nbdhij\\nbefgh\\n\"}]', '1130', '<p>第一次出题，如果有错误请大家指出<br /></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入有2行，第1行为3个正整数，用一个空格隔开：\\ns t w\\n（其中s为所使用的最小的字母的序号，t为所使用的最大的字母的序号。w为数字的位数，这3个数满足：1≤s<t≤26, 2≤w≤t-s ） \\n第2行为具有w个小写字母的字符串，为一个符合要求的Jam数字。\\n所给的数据都是正确的，不必验证。\\n', '输出最多为5行，为紧接在输入的Jam数字后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。每行只输出一个Jam数字，是由w个小写字母组成的字符串，不要有多余的空格。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('132', ' 数列', '<p>给定一个正整数k(3≤k≤15),把所有k的方幂及所有有限个互不相等的k的方幂之和构成一个递增的序列，例如，当k=3时，这个序列是：<br />1，3，4，9，10，12，13，…<br />（该序列实际上就是：30，31，30+31，32，30+32，31+32，30+31+32，…）<br />请你求出这个序列的第N项的值（用10进制数表示）。<br />例如，对于k=3，N=100，正确答案应该是981。<br /></p>', '[{\"input\": \"3 10\\n\", \"output\": \"981\\n\"}]', '1131', '<p>第二次出题，如果有错误请大家指出<br /></p>', '2016-08-18 14:22:14.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入只有1行，为2个正整数，用一个空格隔开：\\nk N\\n（k、N的含义与上述的问题描述一致，且3≤k≤15，10≤N≤1000）。\\n', '输出为计算结果，是一个正整数（在所有的测试数据中，结果均不超过2.1*109）。（整数前不要有空格和其他符号）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('133', ' 清点人数', '<p>初始时，火车上没有学生；当同学们开始上火车时，年级主任从第一节车厢出发走到最后一节车厢，每节车厢随时都有可能有同学上下。年级主任走到第m节车厢时，他想知道第１到m这m节车厢上一共有多少学生，但是他没有调头往回走的习惯．也就是说每次当他提问时，m总会比前一次大。<br /></p>', '[{\"input\": \"10 7\\nA 1\\nB 1 1\\nB 3 1\\nB 4 1\\nA 2\\nA 3\\nA 10\\n\", \"output\": \"0\\n1\\n2\\n3\\n\"}]', '1132', '<p>注意:对于30%的数据,n<=10000,k<=10000 至少有3000个A<br />     对于100%的数据n<=500000,k<=100000. 至少有30000个A<br /></p>', '2016-08-18 14:22:14.000000', '命题:cauchy	\\n审题:彩虹阴影\\n数据:彩虹阴影\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行两个整数n,k，表示火车共有n节车厢以及k个事件。接下来有k行，按时间先后给出k个事件，每行开头都有一个字母A,B或C，如果字母为A，接下来是一个数m，表示年级主任现在在第m节车厢；如果为B，接下来两个数m,p，表示在第m节车厢有p名学生上车；如果为C，接下来两个数m,p，表示在第m节车厢有p名学生下车。学生总人数不会超过100000。\\n', '有多少个A就输出多少行，每行一个整数，回答年级主任提出的问题。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('134', ' 魔塔', '<p>  在魔塔中有N个房间和M条道路，每条道路上有一个怪，它可以被一种特殊的武器消灭，而每个房间中也存在一种武器。现在知道第I个房间中的武器编号为I，小明（主人翁）初始在J房间，小明想知道哪些房间是他可以去的。<br /></p>', '[{\"input\": \"6 4 6\\n1 2 1\\n1 3 2\\n2 4 4\\n3 4 4\\n3 5 3\\n5 6 6\\n\", \"output\": \"1:Yes\\n2:Yes\\n3:Yes\\n4:Yes\\n5:Yes\\n6:No\\n\"}]', '1133', '<p>数据范围 1<=m<=50000,1<=a,b,J<=n<=50000<br />提示：m,n<50000不等于说数组可以只开到50000；输出前面无空格<br /></p>', '2016-08-18 14:22:23.000000', 'from ls_3\\n', '10000', '128', '1', '0', '0', '1', '1', '  第一行是N，J，M\\n  接下来M行每行三个数Ai，Bi，Ci，分别代表Ai房间和Bi房间之间有路，且此处的怪物可以被Ci号武器消灭。\\n', '  N行，如果I个房间可以到达，则在第I行输出Yes,否则输出No\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('135', ' 解题', '<p>    过去的日子里,农夫John的牛没有任何题目. 可是现在他们有题目,有很多的题目.<br />精确地说,他们有P (1 <= P <= 300) 道题目要做. 他们还离开了农场并且象普通<br />人一样找到了工作. 他们的月薪是M (1 <= M <= 1000) 元.<br />他们的题目是一流的难题,所以他们得找帮手.帮手们不是免费的,但是他们能保证<br />在一个月内作出任何题目.每做一道题需要两笔付款, 第一笔A_i(1 <= A_i <= M)<br />元在做题的那一个月初支付, 第二笔B_i元(1 <= B_i <= M)在做完后的下一个月<br />初支付. 每一个月牛们用上一个月挣的钱来付款. 牛没有任何存款意识, 所以每<br />个月的节余都回拿用去买糖吃掉了.<br />因为题目是相互关连的,它们必须按顺序解出. 比如,题目3必须在解题目4<br />之前或同一个月解出.<br />找出牛们做完所有题目并支付完所有款项的最短月数.<br /></p>', '[{\"input\": \"100 5\\n40 20\\n60 20\\n30 50\\n30 50\\n40 40\\n\", \"output\": \"6\\n\"}]', '1134', '<p></p>', '2016-08-18 14:22:23.000000', 'USACO Contest: JAN07\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行: N 和 P;\\n第2...P+1行: 第i行包含A_i和B_i, 分别是做第i道题的欲先付款和完成付款.\\n', '第一行: 牛们做完题目和付完帐目的最少月数.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('136', ' 化工厂装箱员', '<p>118号工厂是世界唯一秘密提炼锎的化工厂，由于提炼锎的难度非常高，技术不是十分完善，所以工厂生产的锎成品可能会有3种不同的纯度，A：100%，B：1%，C：0.01%，为了出售方便，必须把不同纯度的成品分开装箱，装箱员grant第1次顺序从流水线上取10个成品（如果一共不足10个，则全部取出），以后每一次把手中某种纯度的成品放进相应的箱子，然后再从流水线上顺序取一些成品，使手中保持10个成品（如果把剩下的全部取出不足10个，则全部取出），如果所有的成品都装进了箱子，那么grant的任务就完成了。<br />由于装箱是件非常累的事情，grant希望他能够以最少的装箱次数来完成他的任务，现在他请你编个程序帮助他。<br /></p>', '[{\"input\": \"11\\nA\\nB\\nC\\nA\\nB\\nC\\nA\\nB\\nC\\nA\\nB\\n\", \"output\": \"3\\n\\n\"}]', '1135', '<p></p>', '2016-08-18 14:22:33.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第1行为n（1<=n<=100），为成品的数量\\n以后n行，每行为一个大写字母A，B或C，表示成品的纯度。\\n', '仅一行，为grant需要的最少的装箱次数。\\n\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('137', ' 黑皮的蛋糕', '<p>  众所周知，黑皮出生与1000年01月01日，那天乌云密布，电闪雷鸣，在黑光划破夜空的一瞬间，黑皮准确无误的生成了男孩。不妨给大家说声：由于他天生体黑，故取名为黑皮。^-^<br />  为了庆祝黑皮的1006岁生日，也就是2006年01月01日。校长为他在学校里举行一个名为{天造奇才}的大型庆祝活动。邀请全校的师生及其家属们都参加。考虑到当时人数相当庞大，黑皮的好友小佳佳特地为他从美国进口了个超级无敌五香麻辣阴阳五行令万千饿鬼为之绝倒的巨无霸大蛋糕1号。供到场的所有人享用。<br />  黑皮也考虑到人数太多，蛋糕又只有一个。所以决定自己用在最少的刀数划出最多的蛋糕份数。比如说：开始是1个蛋糕，份数为1；黑皮一刀子划下去，刀数为1，份数就为2了；再一刀，刀数为2，份数为4；再一刀………………若干刀下去，份数就为n了。<br />  黑皮当时，千心万苦终于划了出来。他想知道你们是否也能划出来。^-^<br /></p>', '[{\"input\": \"2\\n\", \"output\": \"4\\n\"}]', '1136', '<p>  由于上次的题目《黑皮的正方形》（p1307）一些描述给大家带来的不便，请大家谅解。这个题应该不会了吧。嘿嘿…………<br />  这个题和上次的一样简单，希望大家不要B视我。我很弱啊~~~~~<br />  争取100%的正确率。谢谢^-^<br />  (我怕会超时，改了时间)<br /></p>', '2016-08-18 14:22:33.000000', '', '10000', '128', '1', '0', '0', '3', '1', '输入一个数，即为黑皮当时划的刀数n。0<=n<=34567890;\\n', '一个数，即为到场人数。已知人数与黑皮划下来的份数相同。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('138', ' 桐桐的糖果计划', '<p>桐桐很喜欢吃棒棒糖。他家处在一大堆糖果店的附近。<br />但是，他们家的区域经常出现塞车、塞人等情况，这导致他不得不等到塞的车或人走光了他才能去买到他最爱吃的棒棒糖品种。于是，他去找市长帮他修路，使得每两个糖果店之间至少有两条完全不同的路。可是市长经费有限，于是让桐桐找出哪些路被塞住后会使某些糖果店与糖果店间无法到达及最少的修路条数。你能帮助他吃到他最喜爱的糖果吗？<br />注：1->3->2  和 1->3->4->2 为不完全不同的路，即不符合题意的路。<br />    1->3->4->2 和 1->5->2 为完全不同的路，即符合题意的路。<br /></p>', '[{\"input\": \"7 7\\n1 2\\n2 3\\n3 4\\n2 5\\n4 5\\n5 6\\n5 7\\n\", \"output\": \"3\\n2\\n\"}]', '1137', '<p>   1   2   3<br />   +---+---+  <br />       |   |<br />       |   |<br /> 6 +---+---+ 4<br />      / 5<br />     / <br />    / <br /> 7 +<br />上图是样例所表示的一个图。<br />下图是改变后的图，其中虚线表示应连接的边。<br />   1   2   3<br />   +---+---+  <br />   :   |   |<br />   :   |   |<br /> 6 +---+---+ 4<br />      / 5  :<br />     /     :<br />    /      :<br /> 7 + - - - -<br /></p>', '2016-08-18 14:22:33.000000', '根据Pku原题改编\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '输入第一行是两个数n，m（n<=5000，m<=10000）\\n接下来的m行，每行两个数i,j，表示i,j间有一条边连接。\\n', '输出有两行。第一行为塞住后就不可以到达某些糖果店的道路条数，第二行为最少的修路条数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('139', ' 回文词', '<p>    回文词是一种对称的字符串——也就是说，一个回文词，从左<br />到右读和从右到左读得到的结果是一样的。任意给定一个字符串，<br />通过插入若干字符，都可以变成一个回文词。你的任务是写一个程<br />序，求出将给定字符串变成回文词所需插入的最少字符数。 <br />    比如字符串“Ab3bd”，在插入两个字符后可以变成一个回文<br />词（“dAb3bAd”或“Adb3bdA”）。然而，插入两个以下的字符无<br />法使它变成一个回文词。<br /></p>', '[{\"input\": \"5\\nAb3bd\\n\", \"output\": \"2\\n\"}]', '1138', '<p></p>', '2016-08-18 14:22:33.000000', 'IOI 2000\\nby Zossin\\n', '10000', '128', '1', '0', '0', '1', '1', '    第一行包含一个整数N，表示给定字符串的长度，3<=N<=5000\\n    第二行是一个长度为N的字符串，字符串由大小写字母和数字\\n构成。\\n', '一个整数，表示需要插入的最少字符数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('140', ' 小明的网络游戏', '<p>网络公司共推出n个游戏，每个游戏都有一段免费双倍经验时间，对于任何一款网络游戏，只要是在双倍经验的条件下，无论谁玩都可以在单位时间内轻松获得一个单位的经验值，小明（不是佳佳玩吗？小明你怎么……）决定只玩处于免费双倍经验开放时期的游戏。<br />我们假定，每台电脑最多只能有一人操作，一个人最多只能操作一台电脑；并且每款游戏最多只能在一台电脑上玩，每台电脑[b]在同一时间[/b]最多运行一个游戏。我们忽略开始游戏和结束游戏时所消耗的时间。<br />现在小明想知道，假如他共有m台电脑，且一共叫来了(p-1)个同学（即加上他自己共p个人），那么他和他的同学们最多能得到多少单位的经验。<br /></p>', '[{\"input\": \"3 2 1\\n0 5\\n2 6\\n8 9\\n\", \"output\": \"9\\n\"}]', '1139', '<p>数据比较BT……（WA了就改题 ^_^）<br />FAQ:那个比赛时前些日子举行的？<br />ANS:提交了一年多也没通过审核。<br /></p>', '2016-08-18 14:22:33.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第一行有三个用空格隔开的整数n,m和p，它们表示的意义如题目描述。\\n以下n行，每行有两个用空格隔开的整数Xi,Yi(Xi<=Yi)，表示从第Xi单位时间到第Yi单位时间(即1到2为2个单位时间)为第i款游戏开放双倍经验的时间。\\n\\n1≤n≤100000\\n0≤Xi,Yi≤50000000\\n1≤p≤1000000\\n1≤m≤1000000\\n', '输出一个整数，表示小明和他的同学们能获得的最大经验值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('141', ' 灯泡', '<p>   有n个灯泡排列成一个环，第1个灯泡的左边为第n个灯泡，第2个灯泡的左边为第1个灯泡，第3个灯泡的左边为第2个灯泡，…，第n个灯泡的左边为第n-1个灯泡。初始时刻时有些灯泡是亮的，有些是不亮的。当且仅当时刻t-1时灯泡p左边一个灯是亮的，灯泡p在时刻t会改变状态（亮变不亮，不亮变亮）。求在时刻m时，每个灯泡的状态。<br /></p>', '[{\"input\": \"5 3\\nbdbdb\\n\", \"output\": \"bdbdd\\n\"}]', '1140', '<p>【样例的变化过程】<br />时刻0时bdbdb→时刻1时dbbbb<br />→时刻2时bbddd→时刻3时bdbdd<br /></p>', '2016-08-18 14:22:43.000000', '宁波市竞赛原题\\n', '10000', '128', '1', '0', '0', '2', '1', '输入有二行数据。\\n第一行有二个整数n和m,分别表示灯泡的数目和最终时刻。两数之间有一个空格。\\n第二行有n个字符，表示初始时刻（时刻0）n个灯泡的亮与不亮的状态。这些字符要么为英文字符b,表示亮；要么为d，表示不亮。\\n30%的数据，1≤n≤10000，1≤m≤1000\\n100%的数据，1≤n≤100000，1≤m≤109\\n\\n', '输出中只有一行\\n数据，该行有n个字符，表示时刻m时，\\n每个灯泡的状态。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('142', ' 看球的巴士', '<p>两个球队的支持者要一起坐车去看球，他们已经排成了一列。我们要让他们分乘若干辆巴士，同一辆巴士上的人必须在队伍中是连续的。为了在车上不起冲突，希望两队的支持者人数尽量相等，差至多是D。有一个例外，就是一辆车上的人全部都是一个球队的支持者。问要将这N个人全部送至球场，至少要几辆巴士。<br /></p>', '[{\"input\": \"14 3\\nH\\nJ\\nH\\nH\\nH\\nJ\\nH\\nJ\\nH\\nH\\nH\\nH\\nH\\nH\\n\", \"output\": \"2\\n\"}]', '1141', '<p>有多种方案，例如让前9人做一辆车，差正好是3；后5人做一辆车，因为只有一对的支持者。<br /></p>', '2016-08-18 14:22:43.000000', 'SQ\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行是整数N和D，1<=N<=2500，1<=D<=N。\\n接下来的N行，按排队的顺序，描述每个人支持的球队，用H或J表示。\\n', '至少要几辆巴士。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('143', ' Cantor表', '<p>现代数学的著名证明之一是Georg Cantor证明了有理数是可枚举的。他是用下面这一张表来证明这一命题的：<br />1/1  1/2  1/3  1/4  1/5 …<br />2/1  2/2  2/3  2/4  …<br />3/1  3/2  3/3  …<br />4/1  4/2  …<br />5/1  …<br />…<br />我们以Z字形给上表的每一项编号。<br />第一项是1/1，然后是1/2，2/1，3/1，2/2，…<br /><br /></p>', '[{\"input\": \"7\\n\", \"output\": \"1/4\\n\"}]', '1142', '<p>很简单的哦~<br /></p>', '2016-08-18 14:22:43.000000', 'NOIP1999普及组第一题\\n', '10000', '128', '1', '0', '0', '1', '1', '输入：整数N（1≤N≤10000000）\\n', '输出：表中的第N项\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('144', ' NASA的食物计划', '<p>航天飞机的体积有限,当然如果载过重的物品,燃料会浪费很多钱,<br />每件食品都有各自的体积、质量以及所含卡路里,在告诉你体积<br />和质量的最大值的情况下,请输出能达到的食品方案所含卡路里<br />的最大值,当然每个食品只能使用一次.<br /></p>', '[{\"input\": \"320 350\\n4\\n160 40 120\\n80 110 240\\n220 70 310\\n40 400 220\\n\", \"output\": \"550\\n\"}]', '1143', '<p>很简单的背包...<br /></p>', '2016-08-18 14:22:43.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行 两个数 体积最大值(<400)和质量最大值(<400)\\n第二行 一个数 食品总数N(<50).\\n第三行－第3+N行 \\n每行三个数 体积(<400) 质量(<400) 所含卡路里(<500) \\n', '一个数 所能达到的最大卡路里(int范围内)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('145', ' 数独验证', '<p>具体规则如下:<br />每一行都用到1,2,3,4,5,6,7,8,9，位置不限，<br />每一列都用到1,2,3,4,5,6,7,8,9，位置不限，<br />每3×3的格子（共九个这样的格子）都用到1,2,3,4,5,6,7,8,9，位置不限，<br />游戏的过程就是用1,2,3,4,5,6,7,8,9填充空白，并要求满足每行、每列、每个九宫格都用到1,2,3,4,5,6,7,8,9。<br />如下是一个正确的数独:<br />5 8 1 4 9 3 7 6 2<br />9 6 3 7 1 2 5 8 4<br />2 7 4 8 6 5 9 3 1<br />1 2 9 5 4 6 3 7 8<br />4 3 6 1 8 7 2 9 5<br />7 5 8 3 2 9 1 4 6<br />8 9 2 6 7 1 4 5 3<br />6 1 5 9 3 4 8 2 7<br />3 4 7 2 5 8 6 1 9<br /><br /></p>', '[{\"input\": \"2\\n5 8 1 4 9 3 7 6 2\\n9 6 3 7 1 2 5 8 4\\n2 7 4 8 6 5 9 3 1\\n1 2 9 5 4 6 3 7 8\\n4 3 6 1 8 7 2 9 5\\n7 5 8 3 2 9 1 4 6\\n8 9 2 6 7 1 4 5 3\\n6 1 5 9 3 4 8 2 7\\n3 4 7 2 5 8 6 1 9\\n\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\\n\", \"output\": \"Right\\nWrong\\n\"}]', '1144', '<p>1<=n<=20 （输入的数独个数）<br />不论输入的数独是错误的还是正确的,数据都保证每个数在1-9之间,即只会出现因为有相同的数而导致违反规则,而不会因为数字超出了1-9的范围而违反规则.<br /></p>', '2016-08-18 14:22:43.000000', '', '10000', '128', '1', '0', '0', '2', '1', '输入n个数独，你来验证它是否违反规则.\\n第一行为数独个数，第二行开始为第一个数独，之后为第二个，至第n个.\\n注意！每个数独之间有一个回车隔开!\\n', '若正确则输出”Right”若不正确则输出”Wrong” 输出一个换一行\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('146', ' 飞翔', '<p>这些鹰的起始点被设在一个N*M矩阵的左下角map[1，1]的左下角。终点被设定在矩阵的右上角map[N,M]的右上角，有些map[i,j]是可以从中间穿越的。每一个方格的边长都是100米。如图所示： <br />[img]ProblemImg/P1136.jpg[/img]<br />没有障碍，也没有死路。这样设计主要是为了高速飞行的鹰们不要发现死路来不及调整而发生意外。潘帕斯雄鹰冒着减RP的危险从比赛承办方戒备森严的基地中偷来了施工的地图。但是问题也随之而来，他必须在比赛开始之前把地图的每一条路都搞清楚，从中找到一条到达终点最近的路。（哈哈，笨鸟不先飞也要拿冠军）但是此鹰是前无古鹰，后无来鹰的吃菜长大的鹰--菜鸟。他自己没有办法得出最短的路径，于是紧急之下找到了学OI的你，希望找到你的帮助。<br /></p>', '[{\"input\": \"3 2\\n3\\n1 1\\n3 2\\n1 2\\n\", \"output\": \"383\\n\"}]', '1145', '<p></p>', '2016-08-18 14:22:43.000000', '@潘帕斯雄鹰经典问题改编\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '3', '1', '首行为n,m(0<n,m<=100000),第2行为k（0<k<=1000）表示有多少个特殊的边。以下k行为两个数，i,j表示map[i,j]是可以直接穿越的。\\n', '仅一行，1，1-->n,m的最短路径的长度，四舍五入保留到整数即可\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('147', ' 拼图', '<p>这个拼图游戏要求将一些图形拼成一个正方形，图形的个数从1到5。如下图所示，图形个数是4。<br />[img]ProblemImg/P1137_1.jpg[/img]<br />图形不能旋转，拼的时候不能重叠，拼完后的正方形里面不能有空隙。所有给定的图形都要使用。<br />[img]ProblemImg/P1137_2.jpg[/img]<br />左面的图表示这样拼不行，右面是一个成功的拼法。<br />现在，@潘帕斯雄鹰想知道他能否完成这个游戏以表示自己是最强的鹰；如果可以，请输出一种完成这个游戏的方案。<br /></p>', '[{\"input\": \"输入样例1：\\n4\\n1 4\\n1111\\n1 4\\n1111\\n1 4\\n1111\\n2 3\\n111\\n001\\n\\n输入样例2：\\n5\\n2 2\\n11\\n11\\n2 3\\n111\\n100\\n3 2\\n11\\n01\\n01\\n1 3\\n111\\n1 1\\n1\\n\\n\", \"output\": \"输出样例1：\\nNo solution possible\\n\\n输出样例2：\\n1133\\n1153\\n2223\\n2444\\n\\n\"}]', '1146', '<p></p>', '2016-08-18 14:22:43.000000', 'Dai\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '文件的第一行是一个整数n，表示图形的个数，范围从1到5。\\n接下来有n个部分，每个部分的第一行是2个整数i和j，表示下面的i行j列用来描述一个图形。图形用0和1表示，1表示图形占有这个位置，0表示不占有，中间没有空格。例如上图中图形A的描述是\\n2 3\\n111\\n101\\n所有图形的长与宽都不超过5。\\n根据图形给出的顺序给每个图形编号，从1开始，至多到5。\\n保证数据无多解情况。\\n', '如果不能拼成一个正方形，就输出\"No solution possible\"；否则，输出一种拼的方案：一个正方形的数阵，每个位置上的数字是占有这个位置的图形的编号，中间没有空格。例如上面A、B、C、D的编号依次是1、2、3、4，那么就可以输出\\n1112\\n1412\\n3422\\n3442\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('148', ' 比赛', '<p>土豆国王把这个任务交给你，请你帮他安排一个日程表。<br />特别注意：比赛分成N轮进行，每轮比赛都有N div 2场比赛同时进行、并有一支球队轮空，即：每支球队共参加N-1场比赛。<br />保证数据无多解情况。<br /></p>', '[{\"input\": \"3 1 2\\n3\\n1\\n2\\n\", \"output\": \"1 3 2\\n\"}]', '1147', '<p></p>', '2016-08-18 14:22:43.000000', '琥珀（从头再来）\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行两个整数N（3<=N<=499，N为奇数），M（1<=M<=N），T（1<=T<=N）,其中N表示球队数量。\\n第二行到第N+1行，每行一个正整数，第i行表示编号为M的球队第i-1轮的对手球队的编号，如果第i行为M表示该队该轮轮空。\\n', '1行共N个正整数。输出第T轮的所有比赛，第i个整数表示编号为i的球队的对手编号。如果第i个整数为i，则表示该队该轮轮空。\\n同一行相邻两个整数之间，用一个空格符间隔。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('149', ' 羽毛', '<p>在潘帕斯草原上牛甚多，他们统治着草原的中心部分，鹰的领地环绕着牛所在的地方，而且每个鹰都有一片自己的领地。在@潘帕斯雄鹰将羽毛进行染色后，其他的鹰纷纷效仿，也想把自己的羽毛染成五颜六色。但是问题随之而来，相邻的两个鹰（1和2相邻，1和n也是相邻的）如果发现对方身上有和自己有一样颜色的羽毛就会和对方进行一场你死我活的空中战斗。为了避免这种情况必须要想一种办法才行。由于@潘帕斯雄鹰是第一个将羽毛进行染色的鹰，他被鹰们指派去买颜料(自费T_T)，买颜料当然是要花钱的。@潘帕斯雄鹰想尽量的少买颜料。他发现由于各个鹰的喜好不同，他们想在身上染的颜色种类的个数也是不一样的，有些鹰喜欢把自己的羽毛涂的颜色多些，有些则少。通过统计得出了第i个鹰想在自己身上涂Ai种颜色。你现在的任务是维护世界和平找到最少的颜色种类使得每个相邻的鹰身上的羽毛颜色都可以没有相同的。<br /></p>', '[{\"input\": \"4\\n2\\n2\\n1\\n1\\n\", \"output\": \"4\\n\"}]', '1148', '<p></p>', '2016-08-18 14:22:43.000000', '@潘帕斯雄鹰改编\\n本题目由VijosCP V0.1.1 测试版 生成 请勿删除此行\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行n(1<=n<=20000)\\n第二行开始每行有一个数ai(1<=ai<=100000)表示第i个鹰要在身上涂ai种颜色\\n\\n', '一个数，即最少的满足条件的颜色种类\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('150', ' 拯救ice-cream', '<p>给你一张坐标图，s为Tina的初始位置，m为Ice-cream home的位置，‘.’为路面，Tina在上面，每单位时间可以移动一格；‘#’为草地，Tina在上面，每两单位时间可以移动一格（建议不要模仿—毕竟Tina还小）；‘o’是障碍物，Tina不能在它上面行动。也就是说，Tina只能在路面或草地上行走，必须绕过障碍物，并到达冰淇淋店。但是…………不保证到达时，冰淇淋还未融化，所以……就请聪明的你……选择最佳的方案啦…………如果，Tina到的时候，冰淇淋已经融化完了，那她可是会哭的。<br /></p>', '[{\"input\": \"11\\n10\\n8\\n......s...\\n..........\\n#ooooooo.o\\n#.........\\n#.........\\n#.........\\n#.....m...\\n#.........\\n\", \"output\": \"10\\n\"}]', '1149', '<p></p>', '2016-08-18 14:22:43.000000', '', '10000', '128', '1', '0', '0', '1', '1', '依次输入冰淇淋的融化时间t(0<t<1000)，坐标图的长x,宽y(5<=x,y<=25){太长打起来好累……}，和整张坐标图。\\n', '判断按照最优方案是否可以赶在冰淇淋融化之前到达冰淇淋店（注：当T=最优方案所用时间，则判断为未赶到），如赶到，输出所用时间；如未赶到，输出Tina的哭声——“55555”（不包括引号）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('151', ' 旅行', '<p>某趟列车的最大载客容量为V人，沿途共有n个停靠站，其中始发站为第1站，终点站为第n站。<br />在第1站至第n-1站之间，共有m个团队申请购票搭乘，若规定：<br />（1）对于某个团队的购票申请，要么全部满足，要么全部拒绝，即不允许只满足部分。（2）每个乘客的搭乘费用为其所乘站数。问：应如何选择这些购票申请，能使该趟列车获得最大的搭乘费用？<br />其中，每个团队的购票申请格式是以空格分隔的三个整数：a  b  t，即表示有t个人需要从第a站点乘至第b站点（注：每个团队的所有人员都必须同时在a站上车，且必须同时在后面的b站下车）。<br /></p>', '[{\"input\": \"3  3  5\\n1  2  2\\n2  3  5\\n1  3  4\\n\", \"output\": \"8\\n\"}]', '1150', '<p></p>', '2016-08-18 14:22:43.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入文件travel.in中有若干行。其中：\\n第1行只有三个整数n，m，v，分别表示站点数、申请数、列车的最大载客容量。这三个整数之间都以一个空格分隔。\\n第2行至第m+1行，每行有三个整数，中间都以一个空格分隔。其中第k+1行的三个整数a，b，t表示第k个申请，含义为：有t个人需要从第a站乘至第b站。\\n其中：1≤n≤10；1≤m≤18\\n', '输出文件travel.out中只有一行，该行只有一个整数，为该列车能获得的最大搭乘费用。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('152', ' Alpha编码', '<p>Alice：“不如采用一种很简单的加密方式：’A’替换成1，’B’替换成2，……，’Z’替换成26。”<br />Bob：“这种加密方式太傻了，Alice。如果我想要传送一个单词’BEAN’给你，它加密后就是25114。但你有很多种不同的方法来解密，从而得到许多单词！”<br />Alice：“你说的是没错，但是除了’BEAN’有意义以外，其他解密出来的’BEAAD’、’YAAD’、’YAN’、’YKD’和’BEKD’都没有任何含义。”<br />Bob：“是的，但是同一个加密后的数字序列，可能的得到数以亿计的不同解密方案。”<br />Alice：“是吗？有这么多吗？”<br />你要帮助Bob编写一个程序，来说服Alice。对于一个加密后的数字序列，告诉她确切的解密方案数。<br /></p>', '[{\"input\": \"25114\\n1111111111\\n3333333333\\n0\\n\", \"output\": \"6\\n89\\n1\\n\"}]', '1151', '<p></p>', '2016-08-18 14:22:43.000000', 'SQ\\n', '1000', '128', '1', '0', '0', '1', '1', '有若干个加密后的数字序列，每行一个，行数不超过10，每行的数字数量不超过4100个。序列一定是符合要求的，例如没有先导的零和连续两个零等情况。数字间没有空格。一行一个零表示输入结束，这是不需要处理的。\\n', '对于每个加密后的数字序列，输出一行。一个整数，表示解密的不同方案数。结果保证在32位带符号整数（longint）范围内。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('153', ' 精度计算', '<p>输入两个10000以内的正整数X、Y，求X除以Y的值。要求精确到小数点后100位，如果在100位内出现循环节，请用括号标出。如：51/7＝7.(285714)。<br /></p>', '[{\"input\": \"[样例一]\\n51 7\\n\\n[样例二]\\n21 7\\n\", \"output\": \"[样例一]\\n7.(285714)\\n\\n[样例二]\\n3\\n\"}]', '1152', '<p></p>', '2016-08-18 14:22:43.000000', 'SQ\\n', '1000', '128', '1', '0', '0', '1', '1', '两个整数，用空格分开。\\n', '按照要求，输出X除以Y的值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('154', ' 计算器的改良', '<p>问题描述：<br />    NCL是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手ZL先生。为了很好的完成这个任务，ZL先生首先研究了一些一元一次方程的实例：<br />   4+3x=8<br />   6a-5+1=2-2a<br />   -5+12y=0<br />    ZL先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及+、-、=这三个数学符号（当然，符号“-”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。<br />问题求解：<br />    编写程序，解输入的一元一次方程，将解方程的结果（精确至小数点后三位）输出至屏幕。<br />    你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。<br /></p>', '[{\"input\": \"6a-5+1=2-2a\\n\", \"output\": \"a=0.750\\n\"}]', '1153', '<p></p>', '2016-08-18 14:22:43.000000', 'NOIP 2000年 第六届 普及组 第1题\\n', '1000', '128', '1', '0', '0', '2', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('155', ' 数独大赛', '<p>数独<br />襄樊开展了数独大赛，明明和红红参加了比赛，比赛分数与时间有关。明明和红红想在别人前面做出来一得到更高的分数。他们想到了作弊，利用掌上电脑解决问题。由于题目较难，请你用计算机帮忙做个程序，解决这个问题。由于输入需要时间，掌上电脑不是很快。<br />你的程序需要在一秒内解决上百个这样的问题。<br />数独游戏规则  <br />数独游戏在9x9的方格内进行，分为3x3的小方格，被称为“区”：<br />[IMG]http://www.sudoku.name/pictures/rule1_images/rules1_01.gif[/IMG]      <br />- 数独游戏首先从已经填入数字的格子开始：<br />[IMG]http://www.sudoku.name/pictures/rules2.png[/IMG] <br />- 数独游戏的目的是根据下列规则，用1至9之间的数字填满空格，一个格子只能填入一个数字： <br />1. 每个数字在每一行只能出现一次<br />2. 每个数字在每一列只能出现一次<br />3. 每个数字在每一区只能出现一次<br />- 总结这些规则， 即每个数字在每一行、每一列和每一区只能出现一次。 <br /> <br /></p>', '[{\"input\": \"1\\n005000600080701040700060003090205060008040900060109080500090002040308010006000700\\n\", \"output\": \"415923678683751249729864153194285367358647921267139485571496832942378516836512794\\n\"}]', '1154', '<p>样例的输入转为表：<br />005000600<br />080701040<br />700060003<br />090205060<br />008040900<br />060109080<br />500090002<br />040308010<br />006000700<br />输出转为表：<br />415923678<br />683751249<br />729864153<br />194285367<br />358647921<br />267139485<br />571496832<br />942378516<br />836512794<br /></p>', '2016-08-18 14:22:43.000000', '[b]red_sxz[/b]\\n数据来自网络。大部分都是骨灰级题目。\\n', '10000', '128', '1', '0', '0', '1', '1', '数独的个数n(n<=300)\\n下面n行，每行81个数（ai)，当ai=0是未知数，否则为数独里面的已知数。\\n注意，每2个数之间没有空格。\\n', '输出有n行，每行有81个数为最终的结果。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('156', ' 税收与补贴问题', '<p>    每样商品的价格越低，其销量就会相应增大。现已知某种商品的成本及其在若干价位上的销量（产品不会低于成本销售），并假设相邻价位间销量的变化是线性的且在价格高于给定的最高价位后，销量以某固定数值递减。（我们假设价格及销售量都是整数）<br />    对于某些特殊商品，不可能完全由市场去调节其价格。这时候就需要政府以税收或补贴的方式来控制。（所谓税收或补贴就是对于每个产品收取或给予生产厂家固定金额的货币）问题求解：<br />    你是某家咨询公司的项目经理，现在你已经知道政府对某种商品的预期价格，以及在各种价位上的销售情况。要求你确定政府对此商品是应收税还是补贴的最少金额（也为整数），才能使商家在这样一种政府预期的价格上，获取相对其他价位上的最大总利润。<br />    总利润=单位商品利润*销量<br />    单位商品利润=单位商品价格-单位商品成本（-税金 or +补贴）<br /></p>', '[{\"input\": \"31\\n28 130\\n30 120\\n31 110\\n-1 -1\\n15\\n\", \"output\": \"4\\n\"}]', '1155', '<p></p>', '2016-08-18 14:22:43.000000', 'NOIP 2000年 第六届 普及组 第2题\\n', '1000', '128', '1', '0', '0', '2', '1', '    输入的第一行为政府对某种商品的预期价，第二行有两个整数，第一个整数为商品成本，第二个整数为以成本价销售时的销售量，以下若干行每行都有两个整数，第一个为某价位时的单价，第二个为此时的销量，以一行-1，-1表示所有已知价位及对应的销量输入完毕，输入的最后一行为一个单独的整数表示在已知的最高单价外每升高一块钱将减少的销量。\\n', '    输出有两种情况：若在政府预期价上能得到最大总利润，则输出一个单独的整数，数的正负表示是补贴还是收税，数的大小表示补贴或收税的金额最小值。若有多解，取绝对值最小的输出。\\n    如在政府预期价上不能得到最大总利润，则输出“NO SOLUTION”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('157', ' 乘积最大', '<p>    今年是国际数学联盟确定的“2000——世界数学年”，又恰逢我国著名数学家华罗庚先生诞辰90周年。在华罗庚先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友XZ也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目：<br />   设有一个长度N的数字串，要求选手使用K个乘号将它分成K+1个部分，找出一种分法，使得这K+1个部分的乘积能够为最大。<br />   同时，为了帮助选手能够正确理解题意，主持人还举了如下的一个例子：<br />   有一个数字串: 312，当N=3，K=1时会有以下两种分法：<br />            1）3*12=36<br />            2）31*2=62<br />   这时，符合题目要求的结果是：  31*2=62<br />   现在，请你帮助你的好朋友XZ设计一个程序，求得正确的答案。<br /></p>', '[{\"input\": \"4 2\\n1231\\n\", \"output\": \"62\\n\"}]', '1156', '<p></p>', '2016-08-18 14:22:43.000000', 'NOIP 2000年 第六届 普及组 第3题\\n', '1000', '128', '1', '0', '0', '1', '1', '    程序的输入共有两行：\\n    第一行共有2个自然数N，K (6<=N<=40，1<=K<=6)\\n    第二行是一个K度为N的数字串。\\n', '    屏幕输出(结果显示在屏幕上)，相对于输入，应输出所求得的最大乘积（一个自然数）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('158', ' C数列', '<p>问题是这样的：一个数列A，A1=1，对于数列当中其它的数，都满足于Ak=Ai+Aj(1<=i<=j<=n)，现在给出数列的最后一个数An，求使n最小的数列。<br /></p>', '[{\"input\": \"4\\n\", \"output\": \"3\\n1 2 4\\n\"}]', '1157', '<p></p>', '2016-08-18 14:22:43.000000', '', '1000', '128', '1', '0', '0', '2', '1', '输入数据只有一行，是一个整数An。（An<=1000）\\n', '在文件的第一行输出n。\\n第二行输出数列，每两个数之间有且仅有一个空格。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('159', ' 棋盘制作', '<p>	国际象棋是世界上最古老的博弈游戏之一，和中国的围棋、象棋以及日本的将棋同享盛名。据说国际象棋起源于易经的思想，棋盘是一个8*8大小的黑白相间的方阵，对应八八六十四卦，黑白对应阴阳。<br />	而我们的主人公小Q，正是国际象棋的狂热爱好者。作为一个顶尖高手，他已不满足于普通的棋盘与规则，于是他跟他的好朋友小W决定将棋盘扩大以适应他们的新规则。<br />	小Q找到了一张由N*M个正方形的格子组成的矩形纸片，每个格子被涂有黑白两种颜色之一。小Q想在这种纸中裁减一部分作为新棋盘，当然，他希望这个棋盘尽可能的大。<br />	不过小Q还没有决定是找一个正方形的棋盘还是一个矩形的棋盘（当然，不管哪种，棋盘必须都黑白相间，即相邻的格子不同色），所以他希望可以找到最大的正方形棋盘面积和最大的矩形棋盘面积，从而决定哪个更好一些。<br />	于是小Q找到了即将参加全国信息学竞赛的你，你能帮助他么？<br /></p>', '[{\"input\": \"3 3\\n1 0 1\\n0 1 0\\n1 0 0\\n\", \"output\": \"4\\n6\\n\"}]', '1158', '<p>对于20%的数据，N, M ≤ 80<br />对于40%的数据，N, M ≤ 400 <br />对于100%的数据，N, M ≤ 2000<br /></p>', '2016-08-18 14:22:43.000000', '2007年浙江省省选第一试\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行包含两个整数N和M，分别表示矩形纸片的长和宽。接下来的N行包含一个N * M的01矩阵，表示这张矩形纸片的颜色（0表示白色，1表示黑色）。\\n', '包含两行，每行包含一个整数。第一行为可以找到的最大正方形棋盘的面积，第二行为可以找到的最大矩形棋盘的面积（注意正方形和矩形是可以相交或者包含的）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('160', ' 最大获利', '<p>新的技术正冲击着手机通讯市场，对于各大运营商来说，这既是机遇，更是挑战。 THU集团旗下的 CS&amp; T通讯公司在新一代通讯技术血战的前夜，需要做太多的准备工作，仅就站址选择一项，就需要完成前期市场研究、站址勘测、最优化等项目。<br />在前期市场调查和站址勘测之后，公司得到了一共 N个可以作为通讯信号中转站的地址，而由于这些地址的地理位置差异，在不同的地方建造通讯中转站需要投入的成本也是不一样的，所幸在前期调查之后这些都是已知数据：建立第 i个通讯中转站需要的成本为 Pi（1≤i≤N）。<br />另外公司调查得出了所有期望中的用户群，一共 M个。关于第 i个用户群的信息概括为 Ai, Bi和 Ci：这些用户会使用中转站 Ai和中转站 Bi进行通讯，公司可以获益 Ci。（1≤i≤M, 1≤Ai, Bi≤N）<br />THU集团的 CS&amp; T 公司可以有选择的建立一些中转站（投入成本），为一些用户提供服务并获得收益（获益之和）。那么如何选择最终建立的中转站才能让公司的净获利最大呢？（净获利 = 获益之和 – 投入成本之和）<br /></p>', '[{\"input\": \"5 5\\n1 2 3 4 5\\n1 2 3\\n2 3 4\\n1 3 3\\n1 4 2\\n4 5 3\\n\", \"output\": \"4\\n\"}]', '1159', '<p>原题要求:<br />只需要向输出文件输出一行，行内不得有多余空白字符，行末须有一个换行/回车符，格式不对不能得分。<br /></p>', '2016-08-18 14:22:55.000000', 'NOI 2006 Day2 第1题, 最大获利.\\n题目文本从官方公布pdf获得, 数据由《年鉴》光盘获得.\\n', '10000', '128', '1', '0', '0', '2', '1', '输入中第一行有两个正整数N 和M 。\\n第二行中有 N 个整数描述每一个通讯中转站的建立成本，依次为P1, P2, …, PN 。\\n以下 M 行，第(i + 2)行的三个数 Ai, Bi 和 Ci 描述第 i 个用户群的信息。\\n所有变量的含义可以参见题目描述。\\n', '你的程序只要输出一个整数，表示公司可以得到的最大净获利。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('161', 'VIJOS-P1353', '<p>头脑并不发达的warden最近在思考一个问题:她的闪烁技能可以到处闪（废话），<br />于是她想用闪烁在监狱里留下一个有规律的印记（无聊）：<br />1，1，2，3，5，8，13，21，34，55.....<br />大家应该看出来他想闪出什么序列了吧！<br />现在他想知道：这个序列的第n项是不是质数。<br /></p>', '[{\"input\": \"2\\n3\\n8\\n\", \"output\": \"true\\nflase\\n\"}]', '1160', '<p></p>', '2016-08-18 14:22:55.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行一个数字m\\n以下m行每行一个数字n\\n', '输出m行，每行一个字符串：true（是质数）或false（不是质数）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('162', ' Hanoi双塔问题', '<p>    给定A,B,C三根足够长的细柱，在A柱上放有2n个中间有孔的圆盘，共有n个不同的尺寸，每个尺寸都有两个相同的圆盘，注意这两个圆盘是不加区分的。现要将这些圆盘移到C柱上，在移动过程中可放在B柱上暂存。要求:  <br />(1)每次只能移动一个圆盘；  <br />(2) A、B、C三根细柱上的圆盘都要保持上小下大的顺序；  <br />任务:设An为2n个圆盘完成上述任务所需的最少移动次数，对于输入的n，输出An。<br /></p>', '[{\"input\": \"Sample 1:\\n1\\n\\nSample 2:\\n2\\n\", \"output\": \"Sample 1:\\n2\\n\\nSample 2:\\n6\\n\"}]', '1161', '<p>对于50%的数据， 1<=n<=25  <br />对于100% 数据， 1<=n<=200  <br />提示:设法建立An与An-1的递推关系式。<br /></p>', '2016-08-18 14:22:55.000000', 'JackDavid127\\nNOIP2007\\n', '1000', '128', '1', '0', '0', '1', '1', '输入为一个正整数n，表示在A柱上放有2n个圆盘。\\n', '输出文件hanoi.out仅一行，包含一个正整数，为完成上述任务所需的最少移动次数An。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('163', ' 车队过桥问题', '<p>现有N辆车要按顺序通过一个单向的小桥，由于小桥太窄，不能有两辆车并排通过。另外，由于小桥建造的时间已经很久，只能承受有限的重量，记为Max（吨）。管理员将N辆车按初始的顺序分组，每次让一个组过桥，并且只有在一个组的车辆全部过桥后，下一组车辆才能上桥。每辆车的重量和最大速度是已知的，而每组车的过桥时间由该组中速度最慢的那辆车决定。请你帮管理员编一个程序，将这N辆车分组，使得全部车辆通过小桥的时间最短。<br /></p>', '[{\"input\": \"100 5 10\\n40 25\\n50 20\\n50 20\\n70 10\\n12 50\\n9 70\\n49 30\\n38 25\\n27 50\\n19 70\\n\", \"output\": \"75.0\\n\"}]', '1162', '<p></p>', '2016-08-18 14:22:55.000000', '阴卫东\\n', '1000', '128', '1', '0', '0', '1', '1', '文件的第一行有3个数字，分别为Max（吨），Len（桥的长度，单位km），N（3个数之间用一个或多个空格隔开）。接下来又N行，每行两个数，第i行的两个数分别表示第i辆车的重量w（吨）和最大速度v（km/h）。\\nmax,len,w,v不超过32位有符号整数类型的最大值，且为整数\\nn<1000\\n', '文件只有一行，即全部车辆通过小桥的最短时间（minute），精确到小数点后一位。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('164', ' 比较傻的人学英语', '<p></p>', '[{\"input\": \"1111111111\\n\", \"output\": \"one billion one hundred and eleven million one hundred and eleven thousand one hundred and eleven\\n\"}]', '1163', '<p>纯种水题-_-<br />但是要注意某些单词的拼法和英文特殊的格式！^_^<br /></p>', '2016-08-18 14:22:55.000000', '', '10000', '128', '1', '0', '0', '1', '1', '一个自然数n，0<=n<=2^31-1。\\n', '输出这个数的英文，最后不要有多余的空格。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('165', 'VIJOS-P1357', '<p>输入一个数n(n<=200000)和n个自然数（每个数都不超过1.5*10^9），请统计出这些自然数各自出现的次数，按顺序从小到大输出。输入数据保证不相同的数不超过10000个。 <br /></p>', '[{\"input\": \"\", \"output\": \"\"}]', '1164', '<p></p>', '2016-08-18 14:22:55.000000', '', '10000', '128', '1', '0', '0', '2', '1', '8 \\n2 \\n4 \\n2 \\n4 \\n5 \\n100 \\n2 \\n100 \\n', '2 3 \\n4 2 \\n5 1 \\n100 2 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('166', ' Superprime', '<p>农民约翰的母牛总是生产出最好的肋骨。你能通过农民约翰和美国农业部标记在每根肋骨上的数字认出它们。<br />农民约翰确定他卖给买方的是真正的质数肋骨,是因为从右边开始切下肋骨,每次还剩下的肋骨上的数字都组成一个质数,举例来说:<br />7 3 3 1<br />全部肋骨上的数字 7331是质数;三根肋骨 733是质数;二根肋骨 73 是质数;当然,最后一根肋骨 7 也是质数。<br />7331 被叫做长度 4 的特殊质数。<br />写一个程序对给定的肋骨的数目 N (1<=N<=8),求出所有的特殊质数。数字1不被看作一个质数。 <br /></p>', '[{\"input\": \"4\\n\", \"output\": \"2333\\n2339\\n2393\\n2399\\n2939\\n3119\\n3137\\n3733\\n3739\\n3793\\n3797\\n5939\\n7193\\n7331\\n7333\\n7393\\n\"}]', '1165', '<p>很简单,不要先算出来在交表-_-~~<br /></p>', '2016-08-18 14:23:03.000000', '原题来自USACO\\n', '10000', '128', '1', '0', '0', '1', '1', '单独的一行包含N。\\n', '按顺序输出长度为 N 的特殊质数,每行一个。\\n并按大小顺序排列(从小到大).\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('167', ' 八数码问题', '<p>在3×3的棋盘上，摆有八个棋子，每个棋子上标有1至8的某一数字。棋盘中留有一个空格，空格用0来表示。空格周围的棋子可以移到空格中。要求解的问题是：给出一种初始布局（初始状态）和目标布局（为了使题目简单,设目标状态为123804765），找到一种最少步骤的移动方法，实现从初始布局到目标布局的转变。 <br /></p>', '[{\"input\": \"283104765\\n\", \"output\": \"4\\n\"}]', '1166', '<p></p>', '2016-08-18 14:23:03.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入初试状态，一行九个数字，空格用0表示\\n', '只有一行，该行只有一个数字，表示从初始状态到目标状态需要的最少移动次数(测试数据中无特殊无法到达目标状态数据)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('168', ' 天平称量', '<p>有n个球，从外表上看不出差别，但有一个球比其他球重，其他N-1个球质量相等。请问：在地球上（MS废话），用天平最少称几次可以称出来？<br /></p>', '[{\"input\": \"8\\n\", \"output\": \"2\\n\"}]', '1167', '<p>非常简单，主要是找规律和动规<br /></p>', '2016-08-18 14:23:03.000000', '', '10000', '128', '1', '0', '0', '1', '1', '一个自然数N(0<N<=2^24)\\n', '输出用天平最小的称量数m(m<30000)\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('169', ' 树网的核', '<p>设T=(V, E, W) 是一个无圈且连通的无向图（也称为无根树），每条边到有正整数的权，我们称T为树网（treebetwork），其中V，E分别表示结点与边的集合，W表示各边长度的集合，并设T有n个结点。<br />路径：树网中任何两结点a，b都存在唯一的一条简单路径，用d(a, b)表示以a, b为端点的路径的长度，它是该路径上各边长度之和。我们称d(a, b)为a, b两结点间的距离。<br />D(v, P)=min{d(v, u), u为路径P上的结点}。<br />树网的直径：树网中最长的路径成为树网的直径。对于给定的树网T，直径不一定是唯一的，但可以证明：各直径的中点（不一定恰好是某个结点，可能在某条边的内部）是唯一的，我们称该点为树网的中心。<br />偏心距ECC(F)：树网T中距路径F最远的结点到路径F的距离，即<br />ECC(F)=max{d(v, F)，v∈V}<br />任务：对于给定的树网T=(V, E, W)和非负整数s，求一个路径F，他是某直径上的一段路径（该路径两端均为树网中的结点），其长度不超过s（可以等于s），使偏心距ECC(F)最小。我们称这个路径为树网T=(V, E, W)的核（Core）。必要时，F可以退化为某个结点。一般来说，在上述定义下，核不一定只有一个，但最小偏心距是唯一的。<br />下面的图给出了树网的一个实例。图中，A-B与A-C是两条直径，长度均为20。点W是树网的中心，EF边的长度为5。如果指定s=11，则树网的核为路径DEFG（也可以取为路径DEF），偏心距为8。如果指定s=0（或s=1、s=2），则树网的核为结点F，偏心距为12。<br />http://www.xystudio.cn/jsfd/UploadFiles_8843/200711/20071120000732268.gif[/IMG]<br /></p>', '[{\"input\": \"5 2\\n1 2 5\\n2 3 2\\n2 4 4\\n2 5 3\\n\", \"output\": \"5\\n\"}]', '1168', '<p></p>', '2016-08-18 14:23:03.000000', '', '1000', '128', '1', '0', '0', '2', '1', '包含n行：\\n\\n第1行，两个正整数n和s，中间用一个空格隔开。其中n为树网结点的个数，s为树网的核的长度的上界。设结点编号以此为1，2，……，n。\\n\\n从第2行到第n行，每行给出3个用空格隔开的正整数，依次表示每一条边的两个端点编号和长度。例如，“2 4 7”表示连接结点2与4的边的长度为7。\\n\\n所给的数据都是正确的，不必检验。\\n', '只有一个非负整数，为指定意义下的最小偏心距。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('170', ' 物理课考试', '<p>这次考试都是选择题。考试的时候，181818181818对每道选择题的4个选项的选取是基于一定的概率。比如 ABCD 4个选项的被他选中概率分别为p1 p2 p3 p4，其中p1≥0，p2≥0，p3≥0，p4≥0， p1+p2+p3+p4=1 ，而如果正确答案为B,他做对这道题目的概率为p2。<br />一次考试总有n道题目，181818181818想知道他得100分（就是全对）的概率有多大，他需要你的帮助。<br />输入：第1行有一个数n，(1≤n≤100)表示选择题的数量。第2行是每道题目的正确答案。第3行到第n+2行，每行包括4个概率数字，以一个空格隔开，格式为x%，表示ABCD 4个选项被选中的概率。（0≤x≤100）<br />输出：如果概率为0的话，输出0。如果概率为1的话，输出1。其它概率，请输出其精确值。（即输出所有的有效数字，忽略有效数字后的0）。<br /></p>', '[{\"input\": \"5\\nABBAC \\n50% 20% 13% 37%\\n20% 10% 11% 59%\\n0% 100% 0% 0%\\n99% 1% 0% 0%\\n50% 0% 50% 0%\\n\", \"output\": \"0.02475\\n\"}]', '1169', '<p>要用高精度！！<br /></p>', '2016-08-18 14:23:03.000000', '', '10000', '128', '1', '0', '0', '2', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('171', ' Likecloud-吃、吃、吃', '<p>    正处在某一特定时期之中的李大水牛由于消化系统比较发达，最近一直处在饥饿的状态中。某日上课，正当他饿得头昏眼花之时，眼前突然闪现出了一个n*m(n and m<=200)的矩型的巨型大餐桌，而自己正处在这个大餐桌的一侧的中点下边。餐桌被划分为了n*m个小方格，每一个方格中都有一个圆形的巨型大餐盘，上面盛满了令李大水牛朝思暮想的食物。李大水牛已将餐桌上所有的食物按其所能提供的能量打了分（有些是负的，因为吃了要拉肚子），他决定从自己所处的位置吃到餐桌的另一侧，但他吃东西有一个习惯——只吃自己前方或左前方或右前方的盘中的食物。<br />由于李大水牛已饿得不想动脑了，而他又想获得最大的能量，因此，他将这个问题交给了你。<br />每组数据的出发点都是最后一行的中间位置的下方！<br /></p>', '[{\"input\": \"6 7\\n16 4 3 12 6 0 3\\n4 -5 6 7 0 0 2\\n6 0 -1 -2 3 6 8\\n5 3 4 0 0 -2 7\\n-1 7 4 0 7 -5 6\\n0 -1 3 4 12 4 2\\n\", \"output\": \"41\\n\"}]', '1170', '<p>快吃！快吃！快吃！<br /></p>', '2016-08-18 14:23:03.000000', 'From 李晗\\n', '1000', '128', '1', '0', '0', '3', '1', '[输入数据：]\\n第一行为m n.(n为奇数)，李大水牛一开始在最后一行的中间的下方\\n接下来为m*n的数字距阵.\\n共有m行,每行n个数字.数字间用空格隔开.代表该格子上的盘中的食物所能提供的能量.\\n数字全是整数.\\n', '[输出数据：]\\n一个数,为你所找出的最大能量值.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('172', ' 偷看漫画(1)', '<p>告诉你教室的平面图（长宽≦２００）<br />在图中有一些字母，其中：<br />。　代表走道<br />Ｄ　代表鸭子同学的位置（ＤＵＣＫ！）<br />&amp; 　代表鸭子的同学们<br />＃　代表课桌<br />Ｔ　代表老师的位置（ＴＥＡＣＨＥＲ！）<br />没有可能有其他字母<br />教室的上方是北。班主任在刚开始的时候是面向北的（罚站？）。<br />再告诉你班主任行动的路径，为一串　“NEWS”组成，代表班主任每步往哪走。　如：NNNNNNNNNN（撞死了？）　（不会超过２５５）<br />最后告诉你　这节课还有多少时间（以班主任的脚步时间为单位）<br />（时间≦１０００００）<br />请你告诉鸭子他最多可以看多长时间的漫画。<br />（鸭子的习惯是：先看看老师走一步后能不能看见自己再看漫画）<br />假如鸭子无法看漫画，则输出　“５５５５５～～”<br />班主任的视线范围是 以自己的前方为法（中心）线，左右各45度分开，在视线范围内，假如鸭子看漫画了，那么………………<br /></p>', '[{\"input\": \"样例输入1：\\n3 3\\n...\\nD#T\\n...\\nNEWS\\n6\\n样例输入2：\\n3 3\\n...\\nD#T\\n...\\nWWWWWWWWWW\\n10\\n\", \"output\": \"样例输出1：\\n4\\n样例输出2：\\n55555~~\\n\"}]', '1171', '<p>假如班主任走的方向有人或桌子或鸭子，那么班主任只会面朝那面而不会走（你认为班主任会爬上桌子或鸭子或人吗？）。假如你的英语不好，那我告诉你<br />“N” 代表北<br />“E” 代表东<br />“W”代表西<br />“S” 代表南<br /></p>', '2016-08-18 14:23:03.000000', 'from 超级鸭子\\n（自创！）\\n', '10000', '128', '1', '0', '0', '2', '1', 'n m (教室的长和宽)\\n2~n+1 行 每行M个字母 表示教室的平面图\\n一行字母,表示班主任走的路径\\n这节课还剩的时间.\\n', '只有一行，鸭子可以看漫画的时间或“55555~~”\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('173', ' 冰原探险', '<p>传说中，南极有一片广阔的冰原，在冰原下藏有史前文明的遗址。整个冰原被横竖划分成了很多个大小相等的方格。在这个冰原上有N个大小不等的矩形冰山，这些巨大的冰山有着和南极一样古老的历史，每个矩形冰山至少占据一个方格，且其必定完整地占据方格。冰山和冰山之间不会重叠，也不会有边或点相连。以下两种情况均是不可能出现的：<br />ACM探险队在经过多年准备之后决定在这个冰原上寻找遗址。根据他们掌握的资料，在这个冰原上一个大小为一格的深洞中，藏有一个由史前人类制作的开关。而唯一可以打开这个开关的是一个占据接近一格的可移动的小冰块。显然，在南极是不可能有这样小的独立冰块的，所以这块冰块也一定是史前文明的产物。他们在想办法把这个冰块推到洞里去，这样就可以打开一条通往冰原底部的通道，发掘史前文明的秘密。冰块的起始位置与深洞的位置均不和任何冰山相邻。<br />这个冰原上的冰面和冰山都是完全光滑的，轻轻的推动冰块就可以使这个冰块向前滑行，直到撞到一座冰山就在它的边上停下来。冰块可以穿过冰面上所有没有冰山的区域，也可以从两座冰山之间穿过（见下图）。冰块只能沿网格方向推动。<br />[img]http://www.rqnoj.cn/ProblemPic/P104.jpg[/img]<br /></p>', '[{\"input\": \"2\\n1 1\\n5 5\\n1 3 3 3\\n6 2 8 4\\n\", \"output\": \"3\\n\"}]', '1172', '<p>寻求好的搜索方法<br /></p>', '2016-08-18 14:23:03.000000', 'CTSC2000 Day1\\n\\nGiven by 宇智波带狗。\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件第一行为冰山的个数N (1<=N<=4000)，第二行为冰块开始所在的方格坐标X1,Y1，第三行为深洞所在的方格坐标X2,Y2，以下N行每行有四个数，分别是每个冰山所占的格子左上角和右下角坐标Xi1,Yi1,Xi2,Yi2\\n', '输出文件仅包含一个整数，为最少推动冰块的次数。如果无法将冰块推入深洞中，则输出0。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('174', ' 课间十分钟', '<p>两人都是数学爱好者，便发明了一个游戏。<br />在游戏开始前，他们先约定一个正整数n，同时令m=1。游戏过程中，每个人都可以将m的值扩大2到9中的任意倍数。第一个使m≥n的人就是最后的赢家。<br />181818181818和ZBT都十分聪明，并且游戏过程中都使用最佳的策略，问谁会是最后的赢家。（181818181818总是第一个先玩）<br />输入：一个正整数n（1≤n≤2^32-1）<br />输出：在使用最佳的策略的情况下，如果181818181818必胜，则输出“181818181818”。如果ZBT必胜，则输出“ZBT”。<br /></p>', '[{\"input\": \"9\\n\", \"output\": \"181818181818\\n\"}]', '1173', '<p>找规律吧！<br /></p>', '2016-08-18 14:23:03.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('175', ' 英语课句型转换', '<p>将陈述句转换为感叹句是英语的经典题型。因此，ZLJ老师让我们练习一下，大头的英语很差，你能帮帮他吗？<br />输入：第一行，一个字符串，What或How，表示感叹句由什么来引导，第二行，一个字符串，表示原句(0＜长度≤2^8)。<br />输出:一行，表示改后的句子(感叹句)。<br /></p>', '[{\"input\": \"What\\nIt is a lovely dog!\\n\", \"output\": \"What a lovely dog it is!\\n\"}]', '1174', '<p>提示：string类型范围：(0＜长度＜2^8)<br /></p>', '2016-08-18 14:23:03.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('176', ' 难解的问题', '<p>  在你的帮助下，蔚蓝来到了埃及.在金字塔里，蔚蓝看到了一个问题，传说，能回答出这个问题的人就能受到埃及法老的祝福，可是蔚蓝日夜奋战，还是想不出来，你能帮帮他么？(XXX: 胡扯,教主怎么可能想不出来= _ =||)（WS这人说的=。=）<br />  问题是这样的： <br />  给定一个序列<a1,a2,...,an>.求最长上升子序列(lis)p1<p2<...<pw满足a[p1]<a[p2]<...<a[pw]<br />   例如65 158 170 299 300 155 207 389<br />  LIS=<65,158,170,299,300,389>。<br />  但是，现在还有一个附加条件：求出的最长上升子序列必须含有第K项。<br />  比如，在上面的例子中，要求求出的最长上升子序列必须含有第6项，那么最长上升子序列就是：65 155 207 389。<br /></p>', '[{\"input\": \"5 3\\n1 2 3 2 1\\n\", \"output\": \"3\\n\"}]', '1175', '<p>对于60%的数据，N<=10000;<br />对于100%的数据，1<=n<=300000 ,1<=k<=n,序列的每一个数为小于2^31-1 的非负整数.<br /></p>', '2016-08-18 14:23:03.000000', 'Super Pig（蔚蓝）\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行是用空格隔开的两个正整数N、K，含义同上所述.\\n第二行N个数，即给出的序列.\\n', '仅有一个数，表示含有第K项的最长上升子序列的长度.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('177', ' 采果子', '<p>  Lyl今天心情不错，于是走到埃及郊外旅游(会不会碰到MMY?...PS:MMY的含义请自行理解)。他边走边向四周望望，发现周围有许多果树。这些树之间互相到达的时间Lyl是知道的（假定每两棵树之间都拥有独立的边可以到达）。他数出了这些果树上果子的个数，并且估了估每个的价格（真是个奇怪的人）。Lyl规定了一种采摘方案，就是对于第i棵树来说，它有a[i]个果子，且所有果子价值为s[i]，摘取时间为c[i](小时)。并且，当他摘了第i个树上的果子后，后面他所选择去摘的果树上的果子数必须大于第i棵树上的果子数目，说白了就是一个上升序列；并且每到一棵树，他都必须摘下该树上的所有果子。一开始，Lyl可以在任意一棵树，他只有m小时，那么，在他所拥有的限定时间内，他想知道，这样摘取的最大价值是多少？<br /></p>', '[{\"input\": \"4 10\\n1 10 2\\n2 5 3\\n3 6 1\\n4 9 4\\n0 1 2 3\\n1 0 3 4\\n2 3 0 5\\n3 4 5 0\\n\", \"output\": \"21\\n\"}]', '1176', '<p>对于60%的数据 ,1<=N<=60,1<=m<=100;<br />对于100%的数据 ,1<=N<=100, 1<=m<=1000.<br /></p>', '2016-08-18 14:23:25.000000', 'lyl\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行2个数：n（表示这条路上的大树数），m（总共时间）\\n接下来第n+1行，每行三个数a[i],s[i],c[i] (第i+1行输入的为第i颗果树的信息)\\n且保证有1<=a[i]<=2^31-1;1<=s[1]+s[2]+…+s[n]<=2^31-1;s[i]>=0; 1<=c[i]<=100\\n接下来的n行，每行n个数，第i行第j个数表示从树i到树j的时间。（0<=T[I,j]<=100;）\\n', '仅有一个数，即按这样方法摘取的最大价值.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('178', ' 方程的解', '<p>   对于不定方程A1+A2+.....+Ak-1+Ak=g(x) ，其中k>=2  x是正整数,g(x)=x^x mod 1000 ,x,k是给定的数.我们要求的是这个不定方程的正整数解组数.<br />   举例来说,当k=3,x=2时,g(x)=4,原方程即A1+A2+A3=4. <br />   这个方程的正整数解有3组.分别为  =（2，1，1），（1，2，1），（1，1，2）. <br /></p>', '[{\"input\": \"3 2\\n\", \"output\": \"3\\n\"}]', '1177', '<p>对于40%的数据, ans<=10^16;<br />对于100%的数据, k<=100,x<=2^31-1,k<=g(x).<br /></p>', '2016-08-18 14:23:25.000000', 'hyc\\n', '10000', '128', '1', '0', '0', '3', '1', '只有一行.为用空格隔开的两个正整数,依次为k,x.\\n', '只有一行,为方程的正整数解组数.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('179', ' 数学课做减法', '<p>做减法<br /></p>', '[{\"input\": \"7777777 -29\\n\", \"output\": \"7,777,806\\n\\n\"}]', '1178', '<p>小心负数！！！<br /></p>', '2016-08-18 14:23:25.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入：两个整数a,b(-2^63<=a,b<2^63)\\n', '输出：一个整数，表示两数的差(从个位开始，每隔三位加一个\",\"号)。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('180', ' 电路探究', '<p>请帮小明编一个程序来判断一个电路是否短路或断路，斌且计算出有多少灯泡能亮。<br /></p>', '[{\"input\": \"样例输入1：\\n4 4\\n1 1 1 1\\n1 0 0 1\\n1 0 0 1\\n1 2 1 1\\n样例输入2：\\n5 5\\n1 1 1 3 1\\n1 0 1 0 1\\n1 3 1 0 1\\n1 0 1 0 1\\n1 1 1 2 1\\n\", \"output\": \"样例输出1：\\nError\\n样例输出2：\\n2\\n\"}]', '1179', '<p></p>', '2016-08-18 14:23:25.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第1行，n,m，表示方阵的大小。第2行至第m+1行，每行n个数，表示电路方阵。\\n‘1’表示导线，‘0‘表示空的，’2‘表示电池，‘3’表示灯泡。其中电池只有一个，其余有无限个。\\n如：\\n4 4\\n1 1 1 3\\n1 0 0 1\\n1 0 0 1\\n1 2 1 1\\n表示如下电路：\\n----------------(灯泡)\\n|                          |\\n|                          |\\n-----|电池|-----------\\n电池不分正负极\\n灯泡短路也算亮\\n不会存在\\n1 1 1 1 1\\n1 1 1 1 1\\n的情况\\n', '若电路短路或断路，则输出‘Error\'，否则输出有多少灯泡能亮。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('181', ' 大整数', '<p>一个k(1<=k<=80)位的十进制正整数N,就是所谓的大整数.<br />请你设计程序,对于给出的某一个大整数N,找到满足p^3+p^2+3p<=n的p的最大值.<br /></p>', '[{\"input\": \"1000000000000001000000000000003000000000000001\\n\", \"output\": \"1000000000000000\\n\"}]', '1180', '<p></p>', '2016-08-18 14:23:25.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入数据只有一行，是一个K位的大整数N，行首行未无多余空格\\n', '输出第一行为你所找到的P最大值，行首行末别乱加东西\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('182', ' 特殊的平原', '<p>在Starcraft某个古怪的薇操地图中，你被要求在一个狭窄的高地上用1个marine来打败2只zergling。由于你认为这是不可能完成的任务，你打算编程验证这一点。<br />为了方便处理，你抽象出了这样一个模型：<br />作为战场的狭窄高低可以认为是一个5*5的方格阵，每个方格可能是“可通过”和“不可通过”两种情况。marine和zergling总是占据其中的一个可通过方格。两个zergling可以处于同一方格，但任意时刻，marine不能任一未死亡的zergling处于同一方格。marine和zergling均拥有生命值(HP)，marine的初始生命值为m，所有zerglint的初始生命值均为z。<br />游戏可以抽象为回合制，在每个回合中，marine首先行动。marine可以选择沿竖直或水平方向移动一格，或站在原地朝某只zergling开枪（由于高低非常狭窄，marine可以集中处于高地任何位置的zergling）。marine的每一枪会减少目标zergling得生命值1点，当一只zergling得生命值降低到0点或以下时会死亡。<br />marine行动完毕后，所有尚未死亡的zergling会同时行动，如果某只zergling和marine相邻，它会攻击marine，否则它会沿着自己当前位置到marine当前位置的最短路前进一格，如果有多条最短路，zergling会按左、上、右、下的顺序一次尝试行动（例如如果左、上都是最短路，zergling会向左走）如果两只zergling同时在同一格攻击marine，marine的生命值只会减少1点，否则每只zergling的攻击都会使marine的生命值减少1点。<br />当某个回合结束时，若zergling全部死亡则认为游戏胜利，若marine的低到0点或以下，或者游戏进行了34个回合但仍未胜利则认为游戏失败。<br />你需要判定游戏是否可能取得胜利，如果可能，输出取得胜利的最少回合数。<br /></p>', '[{\"input\": \"zZ000\\n11110\\n00M10\\n01110\\n00000\\n15 15\\n\", \"output\": \"WIN\\n30\\n\"}]', '1181', '<p></p>', '2016-08-18 14:23:25.000000', 'LIU, Ichou\\n北京市2005年培训冬令营考题\\n青少年信息学奥林匹克竞赛培训教材·数据结构与算法设计\\n', '1000', '128', '1', '0', '0', '1', '1', '输入文件的前5行有5个字符，表示战场每个方格的情况。\\n字符“1”表示对应方格不可通过，其他字符表示对应方格可通过。大写字母“M”表示marine初始位置，大小写字母“Z”和“z”表示两只zergling的初始位置。\\n输入文件的第6行有两个整数m、z，分别表示marine的初始生命值和zergling的初始生命值。1≦m≦16，1≦z≦99。\\n', '如果游戏可以取得胜利，输出一行“WIN”，并在第二行输出一个整数，表示取得胜利需要的最少回合数。否则输出一行“LOSE”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('183', ' 矩阵取数游戏', '<p>帅帅经常更同学玩一个矩阵取数游戏：对于一个给定的n*m的矩阵，矩阵中的每个元素aij据为非负整数。游戏规则如下：<br />    1. 每次取数时须从每行各取走一个元素，共n个。m次后取完矩阵所有的元素；<br />    2. 每次取走的各个元素只能是该元素所在行的行首或行尾；<br />    3. 每次取数都有一个得分值，为每行取数的得分之和；每行取数的得分 = 被取走的元素值*2i，其中i表示第i次取数（从1开始编号）；<br />   4. 游戏结束总得分为m次取数得分之和。<br />    帅帅想请你帮忙写一个程序，对于任意矩阵，可以求出取数后的最大得分。<br /></p>', '[{\"input\": \"2 3\\n1 2 4\\n3 4 2\\n\", \"output\": \"82\\n\"}]', '1182', '<p></p>', '2016-08-18 14:23:25.000000', '', '1000', '128', '1', '0', '0', '1', '1', '包括n+1行；\\n第一行为两个用空格隔开的整数n和m。\\n第2~n+1行为n*m矩阵，其中每行有m个用单个空格隔开\\n', '仅包含1行，为一个整数，即输入矩阵取数后的最大的分。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('184', ' 字符串的展开', '<p>在初赛普及组的“阅读程序写结果”的问题中，我们曾给出一个字符串展开的例子：如果在输入的字符串中，含有类似于“d-h”或者“4-8”的字串，我们就把它当作一种简写，输出时，用连续递增的字母获数字串替代其中的减号，即，将上面两个子串分别输出为“defgh”和“45678”。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下：<br />    (1) 遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号“-”，减号两侧同为小写字母或同为数字，且按照ASCII码的顺序，减号右边的字符严格大于左边的字符。<br />    (2) 参数p1：展开方式。p1=1时，对于字母子串，填充小写字母；p1=2时，对于字母子串，填充大写字母。这两种情况下数字子串的填充方式相同。p1=3时，不论是字母子串还是数字字串，都用与要填充的字母个数相同的星号“*”来填充。<br />    (3) 参数p2：填充字符的重复个数。p2=k表示同一个字符要连续填充k个。例如，当p2=3时，子串“d-h”应扩展为“deeefffgggh”。减号两边的字符不变。<br />    (4) 参数p3：是否改为逆序：p3=1表示维持原来顺序，p3=2表示采用逆序输出，注意这时候仍然不包括减号两端的字符。例如当p1=1、p2=2、p3=2时，子串“d-h”应扩展为“dggffeeh”。<br />    (5) 如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：“d-e”应输出为“de”，“3-4”应输出为“34”。如果减号右边的字符按照ASCII码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：“d-d”应输出为“d-d”，“3-1”应输出为“3-1”。<br /></p>', '[{\"input\": \"1 2 1\\nabcs-w1234-9s-4zz\\n\", \"output\": \"abcsttuuvvw1234556677889s-4zz\\n\"}]', '1183', '<p></p>', '2016-08-18 14:23:25.000000', '', '1000', '128', '1', '0', '0', '2', '1', '包括两行：\\n第1行为用空格隔开的3个正整数，一次表示参数p1，p2，p3。\\n第2行为一行字符串，仅由数字、小写字母和减号“-”组成。行首和行末均无空格。\\n', '只有一行，为展开后的字符串。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('185', ' 盗窃-巴黎阳光普照', '<p>怪盗基德煞费苦心历尽九九八十一难终于来到了存放Paris Sunshine的OIBH总部<br />大楼顶上。基德知道这幢大楼的层数以及哪几层有呆头呆脑的警察。他还知道<br />Paris Sunshine就藏在两层层数与警卫人数成反比的楼层的中间那层。基德想<br />要知道那层楼的层数，警卫人数以及到那层所要经过的警卫人数。基德行踪不<br />定，可能从楼底往楼上走，也可能从楼顶往楼下走。<br /></p>', '[{\"input\": \"5 1\\n3\\n6\\n1\\n4\\n5\\n\", \"output\": \"2 16\\n\"}]', '1184', '<p>输入数据保证只有唯一一层楼符合条件。<br /></p>', '2016-08-18 14:23:25.000000', 'From 玛维-影之歌\\n', '10000', '128', '1', '0', '0', '2', '1', '输入文件共n+1行。第一行为2个数a,b。分别表示大楼的层数以及怪盗基德会从楼\\n下还是楼上出发。b=1则表示从楼顶出发，b=0表示从楼底出发。第2行到第n+1行\\n每行一个整数。表示该层警卫人数。\\n', '输出文件共1行，为两个用空格隔开的整数，分别是Paris Sunshine的藏匿地点以\\n及基德盗走Paris Sunshine所要经过楼层的警卫总数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('186', ' 丰盛的晚宴', '<p>给定一个长度为n的整数序列，元素定义域为[1 .. n]，求其中一个最长的连续子序列S，使得其恰好为一个1至|S|的排列。<br /></p>', '[{\"input\": \"6\\n4\\n4 3 2 1 \\n4\\n2 1 2 3 \\n4\\n3 3 2 1 \\n4\\n2 1 1 3 \\n4\\n3 2 4 1 \\n4\\n2 1 4 2\\n\", \"output\": \"4 1\\n3 2\\n3 2\\n2 1\\n4 1\\n2 1\\n\"}]', '1185', '<p></p>', '2016-08-18 14:23:25.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有一个数T，表示数据组数，对于每组数据：\\n接下来T组数据:\\n第一行一个整数n，表示菜市场长度；\\n第二行n个数,表示对菜市场的描述；\\n\\n对于50%的数据，有：\\n1 <= n <= 1000，1 <= T <= 100；\\n对于另外50%的数据，有：\\n1 <= n <= 2 * 105；1 <= T <= 10；\\n', '每组数据只有一行，两个数p、q，表示|S| = p，且|S|的最早可能的起始位置为q（无解时q = 0）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('187', ' 寻找主人', '<p>给定一个长度为n的整数序列，元素定义域为[1 .. n]，求其中一个最长的连续子序列S，使得其恰好为一个1至|S|的排列。<br /></p>', '[{\"input\": \"6\\n4\\n4 3 2 1 \\n4\\n2 1 2 3 \\n4\\n3 3 2 1 \\n4\\n2 1 1 3 \\n4\\n3 2 4 1 \\n4\\n2 1 4 2\\n\", \"output\": \"4 1\\n3 2\\n3 2\\n2 1\\n4 1\\n2 1\\n\"}]', '1186', '<p></p>', '2016-08-18 14:23:35.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有一个数T，表示数据组数，对于每组数据：\\n接下来T组数据:\\n第一行一个整数n，表示菜市场长度；\\n第二行n个数,表示对菜市场的描述；\\n\\n对于50%的数据，有：\\n1 <= n <= 1000，1 <= T <= 100；\\n对于另外50%的数据，有：\\n1 <= n <= 2 * 105；1 <= T <= 10；\\n', '每组数据只有一行，两个数p、q，表示|S| = p，且|S|的最早可能的起始位置为q（无解时q = 0）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('188', ' 盗窃-黑珍珠', '<p>今次怪盗基德再次对阵OIBH,目标是Black Star!基德已经突破了数层封锁，到达<br />了OIBH总部存放Black Star的房间门口。OIBH的人也不是等闲之辈，他们在门上<br />设了密码。密码问题上只有两个正整数n,m。基德已经获悉密码的生成方法。现<br />在要你帮他计算出密码。<br />生成方法是这样的：<br />设一个数组a[1..n]（n即是上述中的n）中按递增存放了1..n这n个数。数组s是<br />a的子数组（就是集合s为集合a的子集）。而数组s中任意两个数的和都不被m整<br />除。s中数的数目最大值就是密码!<br /></p>', '[{\"input\": \"50 7\\n\", \"output\": \"23\\n\"}]', '1187', '<p>1<=n,m<=10000<br />很简单哦~~<br /></p>', '2016-08-18 14:23:45.000000', 'From 玛维-影之歌；\\n感谢kaito&amp; aoko提供测试数据\\n', '10000', '128', '1', '0', '0', '1', '1', '一行两个整数n,m\\n', '只有一个数max,即密码。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('189', ' 飘香盛会', '<p>TT是个富甲一方的大富豪。作为一个富有激情和创造力的新时代青年，他早做腻了一般的买卖，决定顺应时代潮流，开一家网络公司。由于他从小就热爱网络游戏，所以TT决定把网络游戏作为他的第一个经营项目。<br />由于TT的制作团队相当强大，所以TT很快就开发出了一个绝对能盖过暴雪出的一堆游戏的的超牛B网络游戏，一夜之间风靡全球，TT也再次发了一笔财。当然TT对钱并不感兴趣，他更感兴趣的是游戏本身。<br />TT的网络游戏会根据玩家的各方面给玩家一个实力积分。TT最喜欢的做的事情是选出一些有代表性的玩家，然后按一种特别的顺序排成一个序列，然后调查连续的一段中积分不超过V的玩家有多少个，以得知这一片玩家是否实力太弱。当然这个序列是会经常改变的，TT经常会把看不顺眼的玩家T掉、在中间加入一个玩家。并且，玩家的积分也是经常会变的。<br />刚开始的时候，由于TT选的人不多，这个序列用他的开发团队写的一个简单程序还可以勉强维护。但人一多起来，TT就有些觉得不爽了，所以他决定请你给他写个牛B的程序来解决这个问题。<br /></p>', '[{\"input\": \"5 8\\n10 2 6 1 5 \\n1 1 7\\n3 5 5\\n2 5\\n0 3 5 8\\n1 2 7\\n0 2 5 10\\n0 3 6 2\\n2 3 \\n\", \"output\": \"3\\n4\\n1 \\n\"}]', '1188', '<p></p>', '2016-08-18 14:23:45.000000', 'NOI2008模拟\\nFrom 刘鹰\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件的第一行包含两个整数n和Q，n代表一开始TT所选玩家个数，Q表示TT的操作数。\\n接下来一行包含n个整数，表示一开始TT选的各个玩家的积分。\\n接下来的Q行，每行第一个整数o表示本次的操作类型：\\n若o=0,则接下来三个整数a，b，c表示TT询问第a个人到第b个人之间积分不超过c的有多少个。\\n若o=1，则接下来两个整数p，v表示TT在第p个人后面插入了一个积分为v的玩家。若p=0，则表示将该玩家插在序列开头。\\n若o=2，则接下来一个整数p表示TT将第p个人从序列中删除。\\n若o=3，则接下来两个整数p，v表示TT将第p个玩家的积分更新为v。\\n\\n对于20%的数据     n<=10000，Q<=10000\\n对于100%的数据   n<=100000，Q<=100000，所有输入整数在maxlongint以内。\\n', '对于每个o=0的操作，输出一行包含一个整数，表示该问题的答案。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('190', ' 盗窃-月之眼', '<p>怪盗基德第三次来到熟悉的OIBH总部。屡屡失败的OIBH这次看守的是The Eye of Moon。还是那个<br />房间，还是那扇门，不同的是OIBH对密码锁进行了改进。这次屏幕上只显示一个数n(基德：这是<br />改进了还是退化了？）。<br />密码生成方法：设集合A中A={1,2,...,n}，B为A子集。对于B中任意一个元素x，2x均不在集合B中。<br />B中元素数目最大值即为密码。<br /></p>', '[{\"input\": \"100\\n\", \"output\": \"67\\n\"}]', '1189', '<p>简单数学题哦~~<br /></p>', '2016-08-18 14:23:45.000000', 'From 玛维-影之歌；\\n感谢vijos的朋友提供数据\\n', '10000', '128', '1', '0', '0', '2', '1', '一行，一个整数n(1<=n<=maxlongint)\\n', '只有一个整数m，表示B中元素最大值\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('191', ' 矿工配餐', '<p>现有两个煤矿，每个煤矿都雇用一组矿工。采煤工作很辛苦，所以矿工们需要良好饮食。每当一辆食品车到达煤矿时，矿工们便会产出一定数量的煤。有三种类型的食品车：肉车，鱼车和面包车。<br />矿工们喜欢变化的食谱。如果提供的食品能够不断变化，他们的产煤量将会增加。每当一个新的食品车到达煤矿时，矿工们就会比较这种新的食品和前两次（或者少于两次，如果前面运送食品的次数不足两次）的食品，并且：<br />如果这几次食品车都是同一类型的食品，则矿工们产出一个单位的煤。<br />如果这几次食品车中有两种不同类型的食品，则矿工们产出两个单位的煤。<br />如果这几次食品车中有三种不同类型的食品，则矿工们产出三个单位的煤。<br />预先已知食品车的类型及其被配送的顺序。通过确定哪车食品送到哪个煤矿可以影响产煤量。食品车不能被拆分，每个食品车必须被全部送到一个或另一个煤矿。两个煤矿也并不要求接收相同数量的食品车（事实上，也允许将所有食品车都送到一个煤矿）。<br />任务<br />给出食品车的类型及其被配送的顺序，要求你写一个程序，确定哪个食品车应被送到煤矿1，哪个食品车应被送到煤矿2，以使得两个煤矿的产煤量的总和最大。<br /></p>', '[{\"input\": \"样例输入1\\n6\\nMBMFFB\\n\\n样例输入2\\n16\\nMMBMBBBBMMMMMBMB\\n\", \"output\": \"样例输出1\\n12\\n\\n样例输入2\\n29\\n\"}]', '1190', '<p>在样例1中，可以按照如下的顺序运送食品车：煤矿 1, 煤矿 1, 煤矿 2, 煤矿 2, 煤矿 1, 煤矿 2, 依次产生的产煤量为1, 2, 1, 2, 3 和 3 个单位，一共是12 个单位。还有其它运送方式也能产生上述最大总和的产煤量。<br /></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入的第一行包含一个整数N (1 ≤ N ≤ 100 000),  表示食品车的数目。\\n第二行包含一个由N个字符组成的字符串，按照配送顺序依次表示食品车配送的食品的类型。每个字符是以下三个大写字母之一：\'M\' (表示肉类), \'F\' (表示鱼类) 或 \'B\' (表示面包)。\\n', '输出一个整数，表示最大的总产煤量。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('192', ' 二叉树数', '<p>求由n个结点构成的不同的二叉树数.<br /></p>', '[{\"input\": \"3\\n\", \"output\": \"5\\n\"}]', '1191', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '2', '1', '一行，包含一个整数n(1<=n<=5000)。\\n', '输出一个整数，表示由n个结点构成的不同的二叉树数.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('193', ' 婚礼上的小杉', '<p>原来妖精先生在夏威夷的教堂里住了太久，家里的信件堆积了太多，凌乱不堪，你的工作就是帮他整理信件。<br />总计N封的信件，每个信件都有自己的特征码和序号。<br /></p>', '[{\"input\": \"3 1 2\\n1.0 21.2 1\\n\", \"output\": \"21.2\\n1\\n1.0\\n\"}]', '1192', '<p>很简单的，不要想太多<br /></p>', '2016-08-18 14:23:45.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '1', '1', '每组测试数据的\\n第一行有N个数，分别是不超过N的不重复的正整数，表示N封信件的序号。\\n第二行也有N个数，分别是有效数字不超过255位的浮点数（没有前导的0且均大于0），表示N封信件的特征码。\\n信件的序号和特征码按照给出的顺序一一对应。序号与序号间、特征码与特征码间有一个空格，两行均没有多余的空格。\\n(1<=N<=1000)\\n', '对每组数据输出N行\\n请按照序号递增的顺序输出信件的特征码\\n每行一个特征码，且特征码的格式应与输入完全一致\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('194', ' 玩诈欺的小杉', '<p>是这样的，在小杉的面前有一个N行M列的棋盘，棋盘上有N*M个有黑白棋的棋子（一面为黑，一面为白），一开始都是白面朝上。<br />小杉可以对任意一个格子进行至多一次的操作（最多进行N*M个操作），该操作使得与该格同列的上下各2个格子以及与该格同列的左右各1个格子以及该格子本身翻面。<br />例如，对于一个5*5的棋盘，仅对第三行第三列的格子进行该操作，得到如下棋盘（0表示白面向上，1表示黑面向上）。<br />00100<br />00100<br />01110<br />00100<br />00100<br />对一个棋盘进行适当的操作，使得初始棋盘（都是白面朝上）变成已给出的目标棋盘的操作集合称作一个解法。<br />小杉的任务是对给出的目标棋盘求出所有解法的总数。<br /></p>', '[{\"input\": \"4 4 2\\n0010\\n0010\\n0111\\n0010\\n\\n0010\\n0110\\n0111\\n0010\\n\\n\", \"output\": \"1\\n1\\n\"}]', '1193', '<p>对于输入的数据，两个目标棋盘各有一种解法<br />1:<br />0000<br />0000<br />0010<br />0000<br />2:<br />1011<br />1101<br />0111<br />1011<br />其中1表示对该格进行操作，0表示不操作<br /></p>', '2016-08-18 14:23:45.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '2', '1', '每组测试数据的\\n第一行有3个正整数，分别是N和M和T(1<=N,M<=20,1<=T<=5)\\n接下来T个目标棋盘，每个目标棋盘N行，每行M个整数之前没有空格且非0即1，表示目标棋盘（0表示白面朝上，1表示黑面朝上）\\n两个目标棋盘之间有一个空行。\\n特别地，对于30%的数据，有1<=N,M<=15\\n', '对每组数据输出T行，每行一个整数，表示能使初始棋盘达到目标棋盘的解法总数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('195', ' 想越狱的小杉', '<p>小杉看了看自己的纹身，明白了整个管道网是由N个小房间和若干小房间之间的单向的管道组成的。<br />小房间编号为不超过N的正整数。<br />对于某个管道，小杉只能在人品不超过一定程度时通过。<br />小杉一开始在房间1，现在小杉想知道，每个小房间他最多能够以人品多少的状态到达。<br />注意，小杉的人品在出发以后是不会改变的。<br /></p>', '[{\"input\": \"4\\n1 2 30\\n1 3 20\\n2 3 25\\n3 4 30\\n2 4 20\\n0 0 0\\n\", \"output\": \"30\\n25\\n25\\n\"}]', '1194', '<p>对于样例数据：<br />小杉最多能够在人品为30的情况下到达小房间2(1->2)<br />小杉最多能够在人品为25的情况下到达小房间3(1->2->3)<br />小杉最多能够在人品为25的情况下到达小房间4(1->2->3->4)<br /></p>', '2016-08-18 14:23:45.000000', 'lolanv\\n', '10000', '128', '1', '0', '0', '1', '1', '每组测试数据的\\n第一行有一个正整数N(1<=N<=2000)。\\n接下来若干行描述管道，每行三个正整数A,B,R(1<=A,B<=N)，表示A房间有一条到达B房间的管道，且小杉的人品不超过R时可以通过（注意从B房间不可由此管道到达A房间，即管道是单向的)\\n整个输入数据以一行0 0 0结束\\n\\n特别地，对于30%的数据，有N<=100\\n', '对每组测试数据输出N-1行，分别表示对于2到N号的小房间，小杉最多能够以人品多少的状态到达。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('196', ' 盗窃-大海的奇迹', '<p>The Blue Wonder被OIBH悬空挂在大厅的天花板上，距地面有m米的高度。大厅是<br />一个圆形的半球顶房间，直墙高度为n米。大厅半径为r米。基德可以在直墙上的<br />任意一点移动，但不能移动到半球顶上。基德需要用一根细丝连上Blue Wonder<br />来走上去（好厉害啊，钢丝杂技）。需要你帮他计算细丝的最短长度。 <br /></p>', '[{\"input\": \"3 4 2\\n\", \"output\": \"2.000\\n\"}]', '1195', '<p>0<=n,m,r<=maxlongint<br /></p>', '2016-08-18 14:23:45.000000', '虽然这道还是水题...\\n但是尾声...\\n敬请期待:尾声-怪盗基德的逃离!\\n', '10000', '128', '1', '0', '0', '1', '1', '一行，三个实数m,n,r。\\n', '一行一个实数min，表示细丝的最短长度。你需要把这个数保留到3位小数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('197', ' HYH的歌词', '<p>给定一个长度为n的整数序列，元素定义域为[1 .. n]，求其中一个最长的连续子序列S，使得其恰好为一个1至|S|的排列。<br /></p>', '[{\"input\": \"6\\n4\\n4 3 2 1 \\n4\\n2 1 2 3 \\n4\\n3 3 2 1 \\n4\\n2 1 1 3 \\n4\\n3 2 4 1 \\n4\\n2 1 4 2\\n\", \"output\": \"4 1\\n3 2\\n3 2\\n2 1\\n4 1\\n2 1\\n\"}]', '1196', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有一个数T，表示数据组数，对于每组数据：\\n接下来T组数据:\\n第一行一个整数n，表示菜市场长度；\\n第二行n个数,表示对菜市场的描述；\\n\\n对于50%的数据，有：\\n1 <= n <= 1000，1 <= T <= 100；\\n对于另外50%的数据，有：\\n1 <= n <= 2 * 105；1 <= T <= 10；\\n', '每组数据只有一行，两个数p、q，表示|S| = p，且|S|的最早可能的起始位置为q（无解时q = 0）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('198', ' 奖学金', '<p>　　某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩：语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。 <br />　　任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前5名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数：学号、总分)是： <br />　　7 279 <br />　　5 279 <br />　　这两行数据的含义是：总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是279(总分等于输入的语文、数学、英语三科成绩之和)，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是： <br />　　5 279 <br />　　7 279 <br />　　则按输出错误处理，不能得分。 <br /></p>', '[{\"input\": \"Sample 1:\\n6\\n90 67 80\\n87 66 91\\n78 89 91\\n88 99 77\\n67 89 64\\n78 89 98\\n\\nSample 2:\\n8\\n80 89 89\\n88 98 78\\n90 67 80\\n87 66 91\\n78 89 91\\n88 99 77\\n67 89 64\\n78 89 98\\n\", \"output\": \"Sample 1:\\n6 265\\n4 264\\n3 258\\n2 244\\n1 237\\n\\nSample 2:\\n8 265\\n2 264\\n6 264\\n1 258\\n5 258\\n\"}]', '1197', '<p>50%的数据满足：各学生的总成绩各不相同 <br />100%的数据满足：6<=n<=300 <br /></p>', '2016-08-18 14:23:45.000000', 'NOIP2007普级组复赛第一题\\n', '10000', '128', '1', '0', '0', '1', '1', '　　输入包含n+1行： \\n　　第l行为一个正整数n，表示该校参加评选的学生人数。 \\n　　第2到年n+l行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1～n(恰好是输入数据的行号减1)。 \\n　　所给的数据都是正确的，不必检验。 \\n', '　　输出共有5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('199', ' 尾声-怪盗基德的逃离', '<p></p>', '[{\"input\": \"8 10 10 120\\n1 2 2 1\\n1 3 1 1\\n1 4 2 19\\n2 3 2 6\\n3 4 1 1\\n3 5 2 2\\n5 6 2 1\\n6 7 1 3\\n7 8 3 1\\n4 8 7 100\\n\", \"output\": \"9 119\\n\"}]', '1198', '<p>2<=n<=100<br />1<=t,v<=500<br />样例说明<br />道路网如图所示【道路上括号外为费时，括号内为过路费】<br />[IMG]http://www.vijos.cn/upload/ProblemPic/P1XXX%20from%20%E7%8E%9B%E7%BB%B4-%E5%BD%B1%E4%B9%8B%E6%AD%8C.jpg[/IMG]<br />1->4->8即为所求路径，用时为9，费钱为119。<br /></p>', '2016-08-18 14:23:45.000000', 'From 玛维-影之歌\\n这不再是水题...\\n感谢 宇智波带狗 提供标程\\n感谢 kaito&amp; aoko 提供背景\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行4个整数n,m,t,v，分别是结点总数，通路总数，规定时间，及基德所拥有\\n的钱。接下去m行，每行4个整数a,b,c,d，a和b表示有通路的两结点，c为此路费\\n时，d代表此路过路费。 \\n', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('200', ' 复制CS', '<p>有一天，机房所有机器的D盘都被物理格式化了，也就是说CS全都没有了；而且局域网也被关闭了，也就是说网上邻居看不到其他机器了。<br />但是，道高一尺，魔高一丈。一天，一个同学不知道使用了什么方法，在一台计算机的D盘上安装了CS。由于局域网不通了，其他同学没有办法通过网络复制。但是，现在有k根并口线，可以用来复制。一根并口线可以连接两台计算机；一台计算机只有一个并口，因此同一时刻只能连一根并口线。两台计算机如果用并口线连接了，就可以进行复制，但由于并口的传输速率较慢，所以复制一次CS要一个小时。<br />需要注意的是：由于SQ对CS的深恶痛绝，他和他的助教将进行不定期的视察，次数为M视察期间并口线上不能传输数据，原来没有传完的CS也将遭到灭顶之灾。万幸的是，同学们获取了老师视察的时间总表。<br />现在有n个同学要玩CS，开始时只有一台机器上有CS。使用这k根并口线，在其他的n-1台计算机上都装上CS。同学们希望尽快能一起玩，你能计算一下至少需要多少小时吗？<br />（SQ：何时CS才能从机房消失？玩CS，以后可有的是时间啊！）<br /></p>', '[{\"input\": \"8 3 2\\n1.1 0.9\\n4 1\\n\", \"output\": \"6.00\\n\"}]', '1199', '<p>一开始有一台已经装好。第0到1小时复制出1台，一共2台有了。第1到1.1小时，复制中。第1.1到2小时，老师视察。第2到3小时，两台可以同时又复制出两台。第3-4小时，由于只有3根并口线，所以只能在复制出3台，一共7台好了。所以还需要一个小时（5.0-6.0）。<br /></p>', '2016-08-18 14:23:45.000000', 'SQ CLASS公开编程竞赛2008——Problem A\\nSource: SQ, liuichou, royZhang\\n', '1000', '128', '1', '0', '0', '1', '1', 'N，k和M的值，中间以一个空格分开。(2≤n≤10E9, 1≤k≤10E9, 1≤M≤10E3)\\n以下M行有A和B两个值，A代表视察开始的时间(小时)，B代表视察持续的时间(小时)。\\n', '一个整数，表示n台计算机上都复制好CS至少需要多少小时。（保留两位小数）\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('201', ' 遭遇战', '<p>今天，他们在打一张叫DUSTII的地图，万恶的恐怖分子要炸掉藏在A区的SQC论坛服务器！我们SQC的人誓死不屈，即将于恐怖分子展开激战，准备让一个人守着A区，这样恐怖分子就不能炸掉服务器了。（一个人就能守住??这人是机械战警还是霹雳游侠？）<br />但是问题随之出现了，由于DustII中风景秀丽，而且不收门票，所以n名反恐精英们很喜欢在这里散步，喝茶。他们不愿意去单独守在荒无人烟的A区，在指挥官的一再命令下，他们终于妥协了，但是他们每个人都要求能继续旅游，于是给出了自己的空闲时间，而且你强大的情报系统告诉了你恐怖份子计划的进攻时间（从s时刻到e时刻）。<br />当然，精明的SQC成员不会为你免费服务，他们还要收取一定的佣金（注意，只要你聘用这个队员，不论他的执勤时间多少，都要付所有被要求的佣金）。身为指挥官的你，看看口袋里不多的资金（上头真抠！），需要安排一个计划，雇佣一些队员，让他们在保证在进攻时间里每时每刻都有人员执勤，花费的最少资金。<br /></p>', '[{\"input\": \"3 1 5\\n1 3 3\\n4 5 2\\n1 1 1\\n\", \"output\": \"5\\n\"}]', '1200', '<p>敌人从1时刻到4时刻要来进攻，一共有3名反恐队员。第1名从1时刻到3时刻有空，要3元钱（买糖都不够??）。以此类推。<br />一共要付5元钱，选用第1名和第2名。<br /></p>', '2016-08-18 14:23:45.000000', 'SQ CLASS公开编程竞赛2008——Problem D\\nSource: WindTalker, liuichou, royZhang\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行是三个整数n(1≤n≤10000)，s和e（1≤s≤e≤90000）。\\n接下来n行，描述每个反恐队员的信息：空闲的时间si, ei（1≤si≤ei≤90000）和佣金ci（1≤ci≤300000）。\\n', '一个整数，最少需支付的佣金，如果无解，输出“-1”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('202', ' 古韵之同心锁', '<p>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却人间无数。<br />柔情似水，佳期如梦，忍顾鹊桥归路。两情若是久长时，又岂在朝朝暮暮！<br />——秦观《鹊桥仙》<br />    夜未央。带着细腻连绵的眼光遥望牛郎织女千年的爱情，平淡、精致且长久的幸福感顿时氤氲在心。或许幸福就是这样，不求朝暮合，但求永同心。据说同心锁是恋人们定情的一种信物，上面刻着两人的名字，它见证着天长地久的爱情，诉说着爱情的坎坷与甜蜜。<br />    据说在一座OI桥上，同心锁上显示的文字有着它奇异的呈现方式，需要你把它稍做改变才可解密。每个同心锁上都有3个数据。第一个数据是一个字符串s。第二个数据m表示把s串从m处分为两段，s[1]至s[m-1]为a串，s[m]至最后为b串。第三个数据n表示你需要做改变的方式。第4个数据表示把n处理后的s串每个字母变重复次数p，不用重复则为0。<br />    当n=1时，把s串中所有大写字母改成小写字母，把所有小写字母改成大写字母，然后在后面加上‘Immorta1’；<br />    当n=2时，从s串中删除所有出现的和b一样的子串，然后把所有出现的‘1013’改成‘hh4742’。<br />    当n=3时，在a串部分的|n-m|-1和|n-m|之间插入b串，并删除b串部分。<br /></p>', '[{\"input\": \"【样例输入1】\\nMEIYOUwsshujuBYhh4742\\n14 1 1\\n\\n【样例输入2】\\noiBYhh4742MEIYOU1013hh4742wsshujuBYhh4742\\n34 2 0\\n\\n【样例输入3】\\nipkepk\\n5 3 3\\n\", \"output\": \"【样例输出1】\\nmmeeiiyyoouuWWSSSSHHUUJJUUbbyyHHHH44774422IImmmmoorrttaa11\\n\\n【样例输出2】\\noiMEIYOUhh4742hh4742wsshuju\\n\\n【样例输出3】\\niiiippppkkkkppppkkkkeeee\\n\"}]', '1201', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有一个字符串s（长度不超过1993）；\\n第二行有3个数：m（1<m<s的长度）、n（1、2或3）、p（0<=p<100）。\\n', '第一行有一个字符串s（长度不超过1993）；\\n第二行有3个数：m（1<m<s的长度）、n（1、2或3）、p（0<=p<100）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('203', ' 古韵之鹊桥相会', '<p>迢迢牵牛星，皎皎河汉女。<br />纤纤擢素手，札札弄机杼；<br />终日不成章，泣涕零如雨。<br />河汉清且浅，相去复几许？<br />盈盈一水间，脉脉不得语。<br />——《古诗十九首》<br />传说，上古时期的某个七月七日，王母娘娘为了阻止牛郎织女的爱情，划一道玉钗拆散鸳鸯，使两人“星桥鹊驾，经年才见，想离情、别恨难穷。”于是，“执子之手，与子偕老”成了天下有情人共同的希翼。<br />在气宇轩昂、玉树临风、才高八斗、英俊潇洒的程文大牛的期盼中，浪漫又迷人的七夕终于来临了。迷离的夜空之上，牛郎织女的絮语伴随着美好的秋光，浸润了古今文人墨客多情的心。他与美若天仙、唇红齿白、蕙质兰心、冰雪聪明的某MM约好在清江的小桥上相会……<br />天亦有情，此时，浮云错开，从天而降一张丝绸地图：正面上，不同颜色的星星组成了前方道路的俯视图；背面写着“愿有情人终成眷属，无伴者皆得幸福。——瑾姝”。<br />程文仔细看着这个图，发现自己必须从上到下打通一条道路才能见到某MM，于是程文决定用排云掌和风神腿打开前方的道路——<br />现用不同的字母来表示不同颜色的星星，连在一起(水平或竖直相邻才算连在一起)的相同颜色的星星，程文可以一次性全部打掉。<br />图样如下：<br />AABBCCD<br />AFFBGGD<br />IIJBKKD<br />MNNOOPD<br />QQRRSST<br />比如在这张地图中，程文可以先打掉最右边的D区域，然后再打通T区域，这样就只用两次就可以打通道路(道路是可以拐弯的，不一定要是一条直线)。<br />因为使用排云掌和风神腿会耗费体力，耗费干净了程文就没法陪MM一起玩了，所以程文想用最少的次数来打通这条道路，不过程文现在跑去学Java了，这件事就交给你了。<br /></p>', '[{\"input\": \"5 7\\nAABBCCD\\nAFFBGGD\\nIIJBKKD\\nMNNOOPD\\nQQRRSST\\n\", \"output\": \"2\\n\"}]', '1202', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有两个整数，m和n（0<m,n<21）；\\n下面m行，每行n个字母。\\n', '一个整数，程文打通道路用功力的最少的次数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('204', ' 古韵之刺绣', '<p>日暮堂前花蕊娇，<br />争拈小笔上床描，<br />绣成安向春园里，<br />引得黄莺下柳条。<br />——胡令能《咏绣障》<br />    古时女子四德中有一项——女红。女红的精巧程度对于女子来说是十分重要的。韵哲君十分爱好女红，尤其是刺绣。<br />当衬衣公司的Immortal掌柜在知道韵哲君有这一手艺后，交给韵哲君一个任务：在他所提供的各种各样大小的布上绣上精美的花纹（每匹布上只能绣一种花纹）。有3种花纹可以供韵哲君选择，每一体积布上的每种花纹的美观度c和所占体积v都不同。Immortal带了一个不知道是否足够装下所有刺绣作品的包，请你帮忙计算一下，Immortal的包里所能装下作品的最大美观度。<br /></p>', '[{\"input\": \"5 100\\n8 2001 5\\n4 9 8\\n3 74 4\\n111 4\\n79 8\\n6 3\\n5 8\\n23 4\\n\", \"output\": \"10449\\n\"}]', '1203', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行为两个数n（布的匹数，0<n<=100）、m（包的容积，0<m<=8000）；\\n第二行到第四行，每行有3个数据：花纹种类编号z（0<z<maxint）、每一体积布上这种花纹的美观度c[z]（0<c[z]<maxint）和每一体积布上绣的这种花纹的体积v[z]（0<z<maxint）；\\n第五行到n+4行每行有2个数据，分别是第i匹布的体积b[i]（0<b[i]< maxint）和这匹布上所绣花纹的种类编号z[i]。\\n', '输出一个正整数，为Immortal的包里所能装下作品的最大美观度。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('205', ' 古韵之乞巧', '<p>闺女求天女，更阑意未阑。<br />玉庭开粉席，罗袖捧金盘。<br />向月穿针易，临风整线难。<br />不知谁得巧，明旦试相看。<br />——祖咏《七夕》<br />    女子乞巧，是七夕的重头戏。古时，女子擅长女红被视为一种重要的德行。所以女孩子们纷纷在七夕这天祈求上天，是自己变得更加灵巧。仰头凝视，以虔诚的心去膜拜桂魄；双手合十，用坚定信念去盼望未来，祈求能有更出众的才能。一根针、一丝线 、一轮月、一束影，组成了一个简单的乞巧仪式。<br />“年年岁岁花相似，岁岁年年人不同。”千百年后的今天，女孩子们更加看重自己的才华与能力。韵哲君参加了一个新乞巧活动：<br />韵哲君发现自己的面前有一行数字，当她正在琢磨应该干什么的时候，这时候，陈凡老师从天而降，走到了韵哲君的身边，低下头，对她耳语了几句，然后飘走了。<br />陈凡老师说了什么呢，且听下回分解。<br />接上回书，陈凡老师原来对韵哲君说了这些话：“还记得我传授给你的不下降子序列吗？你现在只要找出一定长度的不下降子序列的种数，你就完成任务了。”<br />好了，不废话了，你也来做做这个活动吧？<br /></p>', '[{\"input\": \"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\", \"output\": \"252\\n\"}]', '1204', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有两个整数N(0<N<=100)，M(0<M<=20)；\\nN表示给出多少个整数，M表示给出的定长；\\n第二行有N个整数，对于每个数字(-10000<=T[i]<=10000)。\\n', '输出一个整数，在给出的数列中定长不下降子序列的种数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('206', ' 纪念品分组', '<p>元旦快到了，校学生会让乐乐负责新年晚会的纪念品发放工作。为使得参加晚会的同学所获得 的纪念品价值相对均衡，他要把购来的纪念品根据价格进行分组，但每组最多只能包括两件纪念品， 并且每组纪念品的价格之和不能超过一个给定的整数。为了保证在尽量短的时间内发完所有纪念品，乐乐希望分组的数目最少。 <br />你的任务是写一个程序，找出所有分组方案中分组数最少的一种，输出最少的分组数目。<br />【限制】 <br />50%的数据满足: 1 <=n <= 15 <br />100%的数据满足: 1 <= n <= 30000， 80 <= W <= 200  <br /></p>', '[{\"input\": \"100\\n9\\n90\\n20\\n20\\n30\\n50\\n60\\n70\\n80\\n90\\n\", \"output\": \"6\\n\"}]', '1205', '<p></p>', '2016-08-18 14:23:45.000000', 'Noip2007普及组第2题\\n', '10000', '128', '1', '0', '0', '2', '1', '第1行包括一个整数w，为每组纪念品价格之和的上眼= 第2行为一个整数n，表示购来的纪念品的总件数G \\n\\n第3-n+2行每行包含一个正整数Pi (5 <= Pi <= w3)w表示所对应纪念品的价格。 \\n\\n', '仅1行，包含一个整数， ep最少的分组数目合 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('207', ' 多人背包', '<p>DD 和好朋友们要去爬山啦！他们一共有 K 个人，每个人都会背一个包。这些包的容量是相同的，都是 V。可以装进背包里的一共有 N 种物品，每种物品都有给定的体积和价值。<br />在 DD 看来，合理的背包安排方案是这样的：<br />每个人背包里装的物品的总体积恰等于包的容量。 <br />每个包里的每种物品最多只有一件，但两个不同的包中可以存在相同的物品。 <br />任意两个人，他们包里的物品清单不能完全相同。 <br />在满足以上要求的前提下，所有包里的所有物品的总价值最大是多少呢？<br /></p>', '[{\"input\": \"2 10 5\\n3 12\\n7 20\\n2 4\\n5 6\\n1 1\\n\\n\\n\", \"output\": \"57\\n\\n\"}]', '1206', '<p></p>', '2016-08-18 14:23:45.000000', '感谢dd_engi\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行有三个整数：K、V、N。\\n\\n第二行开始的 N 行，每行有两个整数，分别代表这件物品的体积和价值。\\n\\n', '只需输出一个整数，即在满足以上要求的前提下所有物品的总价值的最大值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('208', ' Dejected Birthday-盗窃', '<p>基德穿破层层障碍终于来到了\"忧郁的生日\"面前.\"忧郁的生日\"如前题所述封存于密码锁中.这个密码锁不是一般的密码锁,这是不一<br />般的密码锁！这个密码锁上显示着一串数字.旁边还有一串提示:The password is in the number.The number is on screen,you s-<br />hould delete N numbers as 1,2 or 3...9.The last number should be the smallest of all.The last number is then passwo-<br />rd（基德:靠,提示居然是E文,无视我400的智商吗?!).为了成功盗取并尽快赶去青子家，基德请你编一个程序解决这个密码锁。<br /></p>', '[{\"input\": \"178543\\n4\\n\", \"output\": \"13\\n\"}]', '1207', '<p>数据范围<br />n不超过250位<br />s不超过n的长度<br /></p>', '2016-08-18 14:23:45.000000', '经典改编题...\\nFrom 玛维-影之歌\\n永远守望vijos...\\n', '1000', '128', '1', '0', '0', '1', '1', '输入共2行\\n第一行为一个不超过250位的数字；\\n第二行则为N。\\n', '输出只有一行，即PASSWORD.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('209', ' 生命游戏', '<p>生命游戏(Game of life)由英国数学家John Conway在1970年发明。事实上，它是一个“零人游戏”，也没有胜负之分，而是相当于一个确定性自动机。<br />游戏在N×M的细胞组成的矩阵里进行，每个细胞每个时刻的状态可能是“存活”或者“休眠”两种,细胞矩阵的状态会按以下规则进行演化：<br />一个存活状态的细胞，在某一秒，若周围的存活状态的细胞数目不足两个，则下一秒将由于孤独而进入休眠状态。<br />一个存活状态的细胞，在某一秒，若周围的存活状态的细胞数目超过三个，则下一秒将由于过度拥挤而进入休眠状态。<br />一个存活状态的细胞，在某一秒，若周围的存活状态的细胞数目为两或三个，则下一秒将继续保持存活状态。<br />一个休眠状态的细胞，在某一秒，若周围的存活状态的细胞数目为正好三个，则认为是比较适合生存的状态，将于下一秒进入存活状态。<br />这里“周围”的范围包括一个细胞的上、下、左、右、左上、左下、右上、右下的细胞，如果存在的话。<br />现在，给定一个初始状态（即第1秒时的状态），请按照规则计算第T秒时的状态。<br /></p>', '[{\"input\": \"5 5 1\\n00000\\n01100\\n01010\\n00100\\n00000\\n\", \"output\": \"00000\\n01100\\n01010\\n00100\\n00000\\n\"}]', '1208', '<p></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行，三个空格隔开的整数：M、N和T。\\n第二行开始的N行，每行M个字符，“0”或“1”分别代表休眠状态与存活状态的细胞。\\n', '输出N行，每行M个“0”或“1”，表示第T秒时的状态。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('210', ' 魔法塔防', '<p>塔防游戏(Tower Defence)是dd_engi非常喜爱的一类休闲游戏。在这类游戏中，玩家需要在地图上摆放各种防御单位，打击并阻止试图跨越地图的敌对单位。一般而言，敌对单位不会攻击防御单位，但若敌对单位未被防御单位消灭且成功跨越地图，玩家的生命数会减少。<br />dd_engi设计出了一种一维的塔防游戏，并将其命名为“魔法塔防”，规则如下：<br />游戏的地图是一行N个连续的魔法塔，其中行的一端是入口，另一端是出口，怪兽会从地图的一端向另一端移动。初始时，怪兽通过每个魔法塔的时间是T秒。玩家可以在这N个魔法塔中放置魔法师以对经过的怪兽造成伤害，每个魔法塔中最多放置一个魔法师，且放置好的魔法师不能改变位置。<br />共有三种不同属性的魔法师，分别是红色魔法师、蓝色魔法师和绿色魔法师，作用分别是攻击、减速以及下毒。当怪兽经过一个红色魔法师所在的魔法塔时，每秒钟生命值会减少R点；当怪兽从一个蓝色魔法师所在的魔法塔走出之后，通过每个魔法塔的时间延长B秒；当怪兽从一个绿色魔法师所在的魔法塔走出之后，每秒钟会因中毒失去G点生命值。蓝色魔法师的减速效果和绿色魔法师的下毒效果是可以累加的。也就是说，怪兽通过n个蓝色魔法师所在的魔法塔之后，它通过每个魔法塔的时间会变成T+B*n秒；怪兽通过n个绿色魔法师所在的魔法塔之后，它每秒钟会因中毒失去G*n点生命值。<br />现在，你的任务是，在这N个魔法塔里放置各种类型的魔法师，使通过的怪兽失去的生命值最大。输出这个最大值。<br /></p>', '[{\"input\": \"5 4 3 2 1\\n\", \"output\": \"82\\n\"}]', '1209', '<p>20%的数据满足N<=12。<br />50%的数据满足N<=100。<br />100%的数据满足1<=N<=1024; 0 <= R, G, B <= 65536; 0 <= T <= 3。<br /></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '一行，五个空格隔开的整数N、R、G、B、T。\\n', '只需输出一行一个整数，即通过的怪兽失去的最大的生命值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('211', ' Dejected Birthday-替身', '<p>基德与替身是有一个约定的，每次基德使用替身前都要输入密码，以便替身确认是否是主人在使用它<br />。这密码有一串提示，密码就是由这段提示生成。每次输密码之前，屏幕上都会出现一段E文（基德：<br />又是E文!不是标明了\"Creat in China\"吗!）。这段英文中的单词是可能有错的。英文的下方有几行<br />单词，它们是正确的，供给参考（基德：直接说字典不就行了!）。现在需要你编一个程序（基德：<br />直接看不就行了!替身：没办法，我只能读入程序），找出错误的单词，把它们改正，并输出错误的<br />单词个数和改正后的整段E文。我们约定：每个错误单词和正确的差且仅差1个字母，不会同时出现两<br />个正确情况。<br /></p>', '[{\"input\": \"4\\nAt lest we sharl hsve revenge!\\nat\\nlast\\nshall\\nhave\\n\", \"output\": \"3\\nAt last we shall have revenge!\\n\"}]', '1210', '<p>Very Easy.<br />注意英文中的一些细节。<br />n<=100<br />读入不需ansistring.<br />不必考虑单复数<br /></p>', '2016-08-18 14:23:45.000000', 'From 玛维-影之歌\\n永远守望vijos...\\n', '1000', '128', '1', '0', '0', '1', '1', '输入共n+2行；\\n第1行为一个正整数n，表示字典中共有n个单词；\\n第2行为一串英文，表示原始提示；\\n第3行到第n+2行共n个正确单词。\\n若提示中的单词与字典里任一单词都差2个字母以上，则对此单词不作任何改动。\\n提示以感叹号结束，中间不会出现其他标点符号。\\n', '输出共两行。\\n第一行为一个整数k，表示错误单词总数。\\n第二行为改正后的提示。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('212', ' 更换轮胎', '<p>经过数周的期待，比赛终于正式开始。<br />不过天公不作美，今天的天气十分诡异，一会儿下雨，一会儿刮风。要知道，天气的变化对F1比赛的影响是巨大的，恶劣的天气甚至会严重干扰赛车手发挥。因此，各车队的总指挥都会在赛前根据赛道环境和天气的变化为车手制定一系列周密的计划。幸运的是，F1专用气象站拥有最顶尖的技术，能够精确测量出每一圈的天气情况，这大大降低了计划的风险。<br />在计划中，对轮胎的正确选择是至关重要的。每一场比赛，赛会都会提供给各赛车不同总类的轮胎（每种轮胎数量不限）。出发时，各赛车可根据需要使用任意一种轮胎。以后每过一圈，赛车可以选择不更换轮胎继续前进，或者进维修站更换任一种轮胎，但需要消耗一定的换胎时间。<br />通过测试，换胎时间和各种轮胎在各圈所消耗的单圈时间已精确测出，你能帮车队求出完成比赛的最短时间么？<br /></p>', '[{\"input\": \"【样例输入】\\n\\n4 3 30\\n50 60 100\\n70 50 100\\n10 50 90\\n100 30 10\\n\", \"output\": \"【样例输出】\\n\\n170\\n\"}]', '1211', '<p>30%的数据满足n<=15，m<=2<br /></p>', '2016-08-18 14:23:45.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行是三个整数n，m，c（1<=n<=1000，1<=m<=1000，1<=c<=1000000），分别表示总圈数，轮胎种类数和换胎时间。接下来n行，每行m个整数，第i行第j个是tij（1<=tij<=1000000），表示在第i圈时第j种轮胎所消耗的单圈时间。\\n', '一个整数s，表示最短的总时间。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('213', ' 最佳路线', '<p>年久失修的赛道令国际汽联十分不满。汽联命令主办方立即对赛道进行调整，否则将取消其主办权。主办方当然必须马上开始行动。<br />赛道测评人员经过了三天三夜的数据采集，选出了若干可以使用的道路和各道路行驶所需的时间。这些道路包括若干直道和弯道，每个直道连接两个不同的弯道且为单向，两个弯道之间可能有多条直道，通过直道和弯道都需要一定的时间。主办方打算在这些可用道路中选出一部分作为赛道。赛道是由直道和弯道交替组成的一圈，赛道可多次经过同一条弯道，因为主办方可以通过架设立交桥的方法避免撞车。为了使比赛更加精彩，主办方希望选择一条单圈时间最短的赛道，由于观众席的位置在弯道1，所以赛道必须经过弯道1（赛道至少要包含一条直道）。<br /></p>', '[{\"input\": \"【样例输入1】\\n\\n3 6\\n1\\n1\\n2\\n1 2 3\\n2 3 5\\n3 1 1\\n3 2 1\\n2 1 10\\n1 3 15\\n\\n【样例输入2】\\n\\n3 4\\n1\\n1\\n2\\n1 2 4\\n1 3 5\\n2 3 5\\n3 2 10\\n\", \"output\": \"【样例输出1】\\n\\n13\\n\\n【样例输出2】\\n\\n-1\\n\"}]', '1212', '<p>30%的数据满足n<=10<br /></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第一行是两个整数n，m（1<=n<=200，1<=m<=100000），分别表示弯道数和直道数。接下来n行，第i行是一个整数ai（1<=ai<=1000），表示通过第i个弯道所消耗的时间。接下来m行，第j行是三个整数xj，yj，bj（1<=xj，yj<=n，1<=bj<=1000），表示从弯道xj到弯道yj有一条单向直道，且通过该直道所消耗的时间为bj。\\n', '一个整数s，表示单圈时间最短的赛道的单圈时间，若无解则输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('214', ' 炮兵阵地', '<p>  司令部的将军们打算在N*M的网格地图上部署他们的炮兵部队。一个N*M的地图由N行M列组成，地图的每一格可能是山地（用“H” 表示），<br />也可能是平原（用“P”表示），如下图。在每一格平原地形上最多可以布置一支炮兵部队（山地上不能够部署炮兵部队）；<br />一支炮兵部队在地图上的攻击范围如图中黑色区域所示：<br />  如果在地图中的灰色所标识的平原上部署一支炮兵部队，则图中的黑色的网格表示它能够攻击到的区域：沿横向左右各两格，沿纵向上下各两格。<br />图上其它白色网格均攻击不到。从图上可见炮兵的攻击范围不受地形的影响。<br />　现在，将军们规划如何部署炮兵部队，在防止误伤的前提下（保证任何两支炮兵部队之间不能互相攻击，即任何一支炮兵部队都不在其他支炮兵部队的攻击范围内）<br />，在整个地图区域内最多能够摆放多少我军的炮兵部队。<br /></p>', '[{\"input\": \"5 4\\nPHPP\\nPPHH\\nPPPP\\nPHPP\\nPHHP\\n\", \"output\": \"6\\n\"}]', '1213', '<p></p>', '2016-08-18 14:23:57.000000', 'NOI2001\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行包含两个由空格分割开的正整数，分别表示N和M；\\n接下来的N行，每一行含有连续的M个字符（‘P’或者‘H’），中间没有空格。按顺序表示地图中每一行的数据。\\nN≤100；M≤10。\\n', '仅在第一行包含一个整数K，表示最多能摆放的炮兵部队的数量。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('215', ' 子串清除', '<p>我们定义字符串A是字符串B的子串当且仅当我们能在B串中找到A串。现在给你一个字符串A，和另外一个字符串B，要你每次从B串中从左至右找第一个A串，并从B串中删除它，直到A串不为B串的子串，问你需要进行几次删除操作。<br /></p>', '[{\"input\": \"abc\\nabcabcabaabcbccc\\n\", \"output\": \"5\\n\"}]', '1214', '<p>样例说明:abcabcabaabcbccc-> abcabaabcbccc-> abaabcbccc-> ababccc-> abcc<br /></p>', '2016-08-18 14:23:57.000000', 'Conan From HNSDFZ\\n', '1000', '128', '1', '0', '0', '2', '1', '输入文件共2行，第一行一个字符串A（长度小于256），第二行一个字符串B。\\n    30%的数据是随机生成的；\\n    50%的数据满足输入文件大小小于300KB；\\n    100%的数据满足输入文件小于500KB，字符串A、B中只会出现英文字母。\\n', '输出文件只有一个整数N。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('216', ' 兴奋剂检查', '<p>    虽然兴奋剂是奥运会及其他重要比赛的禁药，是禁止服用的。但是运动员为了提高成绩难免要服用一些，super pig也不例外。为了不被尿检检查出来，这些药品就只能选一些不容易被发现的来服用。但是奥委会关于兴奋剂检查有很多个指标，只有尿检中各项数值均不高于规定指标才算成阴性（“你没服兴奋剂”），所以如何服用适量的药品使自己的水平达到最高是每个运动员困扰的问题。<br />    现在有n个药品，每个药品如服用就必须全部用掉（否则会有副作用）。尿检检查共有m个项目，服用每个药品对于每个检查项目都会得到一定的效果值，这些效果值是累加的；服用每个药品当然还会给super pig一些水平提高值，这些效果也是累加的。现在super pig想把问题交给你来解决，因为吃药归吃药，训练才重要。<br /></p>', '[{\"input\": \"5 1\\n6\\n7 3\\n8 5\\n3 1\\n6 2\\n4 3\\n\", \"output\": \"16\\n\"}]', '1215', '<p></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行有两个整数n (0<n<=200)和m (1<=m<=5)，分别表示药品数和需要检查的项目；\\n第二行m个整数 v1---vm，表示检查各项目的指标（即最高不能超过的值）；\\n第三行到第n+2行，分别是这n个药品的资料，每行m+1个数。每行第一个数表示服用该药品所得到的水平提高值，第二到第m+1个数分别表示服用这个药品每一项的效果值（分别对应第二行的指标类型）。\\n0<= k=1∏m Vk <=5000000\\n\\n', '一个整数，即super pig通过服这些药在不被检查出来的条件下所能得到的最高水平提高值\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('217', ' 机密信息', '<p>Lorabit有个很奇怪的习惯，他把他所有的机密信息都存放在一个叫机密盘的磁盘分区里，然而这个机密盘中却没有一个文件，那他是怎么存放信息呢？聪明的你一定想到了，Lorabit的信息都是以文件夹名称的形式保存的。Lorabit给机密盘中的每一个文件夹都编了号，而Lorabit的机密信息是由S文件夹转到T文件夹的过程中必须经过的文件夹名称组合而成的（包括S和T），由于Lorabit的磁盘很慢，打开每个文件夹所耗费的时间等于该文件夹内下一级文件夹的数量。这次的任务是，给出每个文件夹的编号、名称以及它的父目录的编号和隐藏了Lorabit机密信息的起始文件夹编号和终点文件夹编号，你要计算出来的是Lorabit机密信息的长度以及寻找这个机密信息所需要的总时间。<br /></p>', '[{\"input\": \"6 1 5\\n1 2 Lo\\n2 3 ra\\n3 0 .\\n4 3 bi\\n5 4 t\\n6 5 .COM\\n\", \"output\": \"8\\n4\\n\"}]', '1216', '<p>假设你一开始就在初始文件夹位置，此时耗费的时间为0；你每打开一个文件夹，能够知道的文件夹名除了当前这个文件夹名之外，还有该文件夹内下一级的文件夹名。<br /></p>', '2016-08-18 14:23:57.000000', 'Conan From HNSDFZ\\n', '1000', '128', '1', '0', '0', '1', '1', '输入文件的第一行为3个整数n、s、t，分别代表文件夹的个数、起始文件夹编号、终点文件夹编号，接下来n行，每行有2个整数i、pi和一个长度不超过255的字符串si（不包含空格）,用空格分开，pi是i号文件夹的父目录编号（为0时表示该文件夹为根目录下的一级文件夹），si是i号文件夹的名称。\\n50%的数据是随机生成的；\\n60%的数据满足3<=n<=1000；\\n100%的数据满足3<=n<=10000、1<=i<=n、0<=pi<=n，保证一定有解。\\n', '输出文件共2行，第一行是Lorabit的机密信息的长度，第二行是所消耗的时间。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('218', ' 贪婪格尔曼', '<p>从前有2只狗，大的叫大狗，小的叫小狗，它们2个合起来就是狗儿们，使用英语的人把它们写作Girlman，传来传去，到最后大家决定叫它们格尔曼。它们的叫声很特别，但是它们十分吝啬它们的叫声，你为了听到它们的叫声，决定买狗饼干送给它们吃，不同种类的饼干能让它们叫的次数不一样，同一块饼干对于大小格尔曼的效果也不一样。它们很贪婪，如果你只给其中一只格尔曼吃狗饼干或者给两只格尔曼吃的不一样，有一只就会不高兴，因此你买狗饼干的时候总要两块两块地买，而且现在每类饼干也只有2块（想要多的也没得）。现在不是流行节约型社会吗？因此你也不能浪费，你要求的是在满足你要听格尔曼叫声次数要求的情况（两只格尔曼实际叫的次数都不小于你的要求即可）下的最小花费是多少。<br /></p>', '[{\"input\": \"5 5 10\\n1 2 5\\n2 4 10\\n3 7 8\\n1 11 36\\n6 0 18\\n\", \"output\": \"36\\n\"}]', '1217', '<p></p>', '2016-08-18 14:23:57.000000', 'Conan From HNSDFZ\\n', '1000', '128', '1', '0', '0', '2', '1', '输入文件的第一行为3个整数n、s、b，分别表示狗饼干的类数、你想听到的小格尔曼的叫声次数和大格尔曼的叫声次数，接下来有n行，第i+1行有3个整数si、bi、ci，分别表示第i类狗饼干能让小格尔曼叫的次数、能让大格尔曼叫的次数和该类饼干的单价。\\n30%的数据满足1<=n<=30；\\n100%的数据满足1<=n<=1000、1<=s,b<=50、0<=si ,bi ,ci <=2147483647。\\n', '输出文件只有一个整数，为满足你的要求情况下的最小花费。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('219', ' 守望者的逃离', '<p>    恶魔猎手尤迪安野心勃勃，他背叛了暗夜精灵，率领深藏在海底的娜迦族企图叛变。守望者<br />在与尤迪安的交锋中遭遇了围杀，被困在一个荒芜的大岛上。为了杀死守望者，尤迪安开始对这<br />个荒岛施咒，这座岛很快就会沉下去。到那时，岛上的所有人都会遇难。守望者的跑步速度为<br />17m/s，以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在1s内移动60m,不<br />过每次使用闪烁法术都会消耗魔法值10点。守望者的魔法值恢复的速度为4点/s，只有处在原地<br />休息状态时才能恢复。 <br />    现在已知守望者的魔法初值M，他所在的初始位置与岛的出口之间的距离S,岛沉没的时间T。<br />你的任务写写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望<br />者在剩下的时间能走的最远距离。注意：守望者跑步、闪烁或休息活动均以秒(s)为单位，且每<br />次活动的持续时间为整数秒。距离的单位为米(m)。<br /></p>', '[{\"input\": \"【输入样例1】\\n39 200 4\\n\\n【输入样例2】\\n36 255 10\\n\", \"output\": \"【输出样例1】\\nNo\\n197\\n\\n【输出样例2】\\nYes\\n6\\n\"}]', '1218', '<p>30%的数据满足：1<=T<=10,1<=S<=100 <br />50%的数据满足：1<=T<=1000,1<=S<=10000 <br />100%的数据满足：1<=T<=300000,0<=M<=1000,1<=S<=108<br /></p>', '2016-08-18 14:23:57.000000', 'NOIP2007普及组第3题\\n', '1000', '128', '1', '0', '0', '1', '1', '在输入文件escape.in仅一行，包括空格隔开的三个非负整数M,S,T。\\n', '在输出文件escape.out包括两行： \\n第1行为字符串“Yes”或“No”（区分大小写），即守望者是否能逃离荒岛。 \\n第2行包含一个整数。第一行为“Yes”（区分大小写）时表示守望者逃离荒岛的最短时间；\\n第一行为“No”（区分大小写）时表示守望者能走的最远距离。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('220', ' 数学家之梦', '<p>十八居士做的第2个梦是成为了一个数学家，有名的数学家自然是“门人弟子填其室”。一天，他给弟子们出了一道题目：“环X皆山也，其西南诸峰，林壑尤美，望之蔚然而深秀者，Y山也。山行六七里，渐闻水声潺潺而泻于两峰之间者，Z泉也。峰回路转，有塔翼然临于泉上者，汉诺塔也。塔有n根柱子，有m个圆盘按顺序（大在下，小在上）套在第1个柱子上，算出将第1个柱子上的m个圆盘移动到第n根柱子至少要多少次。（1次移1盘，大的必须在小的下面，每次移动柱子中最上方的盘子）弟子门面面相觑，于是找到了会编程的你，你能帮他们解决吗？<br />输入：n，m（1<=n<=10000，1<=m<=100000）<br />输出：移动次数除以181818181818的余数,如果不能移动，则输出-18。<br /></p>', '[{\"input\": \"3 3\\n\", \"output\": \"7\\n\"}]', '1219', '<p></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('221', ' 火炬手之梦', '<p>十八居士做的第4个梦是成为了一名火炬手。恰巧奥组委还有最后一个火炬手的名额，于是各路高手群雄逐鹿争夺这个名额，clever的十八居士过五关斩六将，与另一高手会师决赛。裁判把他们带到一个神秘密码门前，只要谁先打开这个门，门里的祥云火炬就属于谁。只见密码门上写着一个提示：“密码：f(x)=sqrt((x+a)^2+b)+sqrt((x+c)^2+d)的最小值。”两人面面相觑，怎么做啊这？于是十八居士找到了会编程的你，请你帮他解决问题。<br />输入：a,b,c,d四个常数(b,d为完全平方数，0<a、b、c、d<=10000)<br />输出:f(x)的最小值(保留3位小数)。<br /></p>', '[{\"input\": \"1 1 3 4\\n注：即f(x)=sqrt((x+1)^2+1)+sqrt((x+3)^2+4)\\n\", \"output\": \"3.606\\n注：但x=-5/3时，f(x)=sqrt(13)\\n\"}]', '1220', '<p></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('222', ' 简单的迷宫', '<p>简单在外面的田野上搭建了一个巨大的用栅栏围成的迷宫。幸运的是，他在迷宫的边界上留出了两段栅栏作为迷宫的出口。更幸运的是，他所建造的迷宫是一个“完美的”迷宫：即你能从迷宫中的任意一点找到一条走出迷宫的路。给定迷宫的宽W(1<=W<=38)及长H(1<=H<=100)。 2*H+1行，每行2*W+1的字符以下面给出的格式表示一个迷宫。然后计算从迷宫中最“糟糕”的那一个点走出迷宫所需的步数。（即使从这一点以最优的方式走向最靠近的出口，它仍然需要最多的步数）当然了，神牛们只会水平或垂直地在X或Y轴上移动，他们从来不走对角线。每移动到一个新的方格算作一步（包括移出迷宫的那一步）这是一个W=5,H=3的迷宫： <br />+-+-+-+-+-+<br />|         |<br />+-+ +-+ + +<br />|     | | |<br />+ +-+-+ + +<br />| |     |  <br />+-+ +-+-+-+<br />如上图的例子，栅栏的柱子只出现在奇数行或奇数列。每个迷宫只有两个出口。 <br /></p>', '[{\"input\": \"5 3\\n+-+-+-+-+-+\\n|         |\\n+-+ +-+ + +\\n|     | | |\\n+ +-+-+ + +\\n| |     |  \\n+-+ +-+-+-+\\n\", \"output\": \"9\\n\"}]', '1221', '<p></p>', '2016-08-18 14:23:57.000000', '简简单单\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行： W和H（用空格隔开） \\n第二行至第2*H+2行： 每行2*W+1个字符表示迷宫,其中’+’表示栅栏的柱子，’-‘和’|’表示栅栏，而空格表示可以行走的通道。\\n', '输出一个单独的整数，表示能保证牛从迷宫中任意一点走出迷宫的最小步数。 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('223', ' 简单的比赛', '<p>   一年一度的篮球比赛终于开战了，简单最喜欢这个了，8过，要像获得胜利可不是那么容易的，是要经过努力的训练的，在经过了漫长的魔鬼训练之后，简单已经不简单了，长出了一身“疙瘩肉”（(*^__^*) 嘻嘻……），投篮也有了很高的命中水平，他的梦想是当个控球后卫，不过离这个目标还是有距离的（……..）<br />期盼已久的篮球比赛终于来了，这次参加比赛的有n支队伍（n不会为奇数，都是2^n），和普通的篮球规则不大一样，这是直接进入淘汰制，简单想要精通OI的你算出他的队伍能究竟有多大的可能性可以夺得冠军和他的个人得分。<br />可能性是这样计算的：（获胜的几率*运气度*士气）/1000000*100%（结果两位小数如有第三位四舍五入，然后在用每场获胜的可能性相乘，就可以得出夺冠的可能性）。<br />简单的得分是这样计算的：（简单的第S场比赛的手感*运气*他的状态）*基础得分/1000000+第s场的基础得分。（取整，因为分数不会出现小数，不用四舍五入，直接舍去小数点后的数字）<br />每一场比赛都加在一起，再加上所有比赛简单认为自己应该得能分数（n场比赛总基础得分）<br /></p>', '[{\"input\": \"4\\n20 70 100\\n40 50 90\\n20 40 20 20\\n50 30 10 15\\n6\\n123456\\n\", \"output\": \"2.52\\n123491\\n\"}]', '1222', '<p></p>', '2016-08-18 14:23:57.000000', '简简单单\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行为,参加的队伍个数 n\\n接下来log(2,n)行，其中第s行输入s场获胜的的几率，运气度，士气（都是百分之几，百分号省略）\\n接下来log(2,n)行，其中第s场简单的手感，运气，状态，基础得分（都是百分之几，百分号省略，基础得分除外）\\n接下来一行为简单得分的位数\\n简单一行为n场比赛总基础得分（不会超过255位，位数与上一行输入的相等）\\n\\n', '两行,\\n第一行为获胜的可能性,结果保留两位小数.\\n第二行为简单的得分,保留整数.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('224', ' 简单的口令', '<p>暑假，简单闲着无聊，边想出了一个很奇怪的东西。。。。。。。<br />简单有很奇怪的方法来隐藏他的口令。他会选择一个字符串S（由L个小写字母组成，5<=L<=100,000），然后他把S顺时针绕成一个圈，每次取一个做开头字母并顺时针依次取字母而组成一个字符串。这样将得到一些字符串，他把它们排序后取出第一个字符串。把这个字符串的第一个字母在原字符串中的位置-1做为口令。 <br />如字符串alabala，按操作的到7个字符串，排序后得： <br />aalabal abalaal alaalab alabala balaala laalaba labalaa <br />第一个字符串为aalabal，这个a在原字符串位置为7，7-1=6，则6为口令。 <br /></p>', '[{\"input\": \"7\\nalabala\\n\", \"output\": \"6\\n\"}]', '1223', '<p></p>', '2016-08-18 14:23:57.000000', '简简单单\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行：一个数：L \\n第二行：字符串：S \\n', '一行，为得到的口令 \\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('225', ' 区间', '<p>给定n个闭区间  [ai,bi], i=1,2,...,n.  这些区间的和可以用两两不相交的闭区间的和来表示。你的任务是找到这样的区间数目最少的表示，且把它们按升序的方式写到输出文件中。当且仅当a <= b < c <= d时，区间[a; b] 、[c; d]才是升序<br />写一个程序完成以下任务：<br />读取区间<br />计算出满足上述条件的两两不相交的区间<br />把找到的区间按升序输出<br /></p>', '[{\"input\": \"5 \\n5 6 \\n1 4\\n10 10\\n6 9\\n8 10\\n\", \"output\": \"1 4\\n5 10\\n\"}]', '1224', '<p></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第一行只有一个数n, 3 <= n <= 50000，代表区间数.第I+1行有两个数ai,bi,之间用一个空格隔开，分别表示区间[ai,bi]的起始和结束（1 <= i <= n），1 <= ai <= bi <= 1000000\\n', '输出文件应该包含计算出的所有区间，每行写一个区间，每行只有两个数，分别是区间起始和结束，之间用一个空格分开。记住必须是按升序输出。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('226', ' 打鼹鼠', '<p>根据这个特点阿Q编写了一个打鼹鼠的游戏：在一个n*n的网格中，在某些时刻鼹鼠会在某一个网格探出头来透透气。你可以控制一个机器人来打鼹鼠，如果i时刻鼹鼠在某个网格中出现，而机器人也处于同一网格的话，那么这个鼹鼠就会被机器人打死。而机器人每一时刻只能够移动一格或停留在原地不动。机器人的移动是指从当前所处的网格移向相邻的网格，即从坐标为（i,j）的网格移向(i-1, j),(i+1, j),(i,j-1),(i,j+1)四个网格，机器人不能走出整个n*n的网格。游戏开始时，你可以自由选定机器人的初始位置。<br />现在你知道在一段时间内，鼹鼠出现的时间和地点，希望你编写一个程序使机器人在这一段时间内打死尽可能多的鼹鼠。<br /></p>', '[{\"input\": \"2 2\\n1 1 1\\n2 2 2\\n\", \"output\": \"1\\n\"}]', '1225', '<p></p>', '2016-08-18 14:23:57.000000', '', '10000', '128', '1', '0', '0', '2', '1', '文件第一行为n（n<=1000）, m（m<=10000），其中m表示在这一段时间内出现的鼹鼠的个数，接下来的m行每行有三个数据time,x,y表示有一只鼹鼠在游戏开始后time个时刻，在第x行第y个网格里出现了一只鼹鼠。Time按递增的顺序给出。注意同一时刻可能出现多只鼹鼠，但同一时刻同一地点只可能出现一只鼹鼠。\\n', '输出文件中仅包含一个正整数，表示被打死鼹鼠的最大数目。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('227', ' 银河英雄传说', '<p>公元五八○一年，地球居民迁移至金牛座α第二行星，在那里发表银河联邦创立宣言，同年改元为宇宙历元年，并开始向银河系深处拓展。 <br />宇宙历七九九年，银河系的两大军事集团在巴米利恩星域爆发战争。泰山压顶集团派宇宙舰队司令莱因哈特率领十万余艘战舰出征，气吞山河集团点名将杨威利组织麾下三万艘战舰迎敌。 <br />杨威利擅长排兵布阵，巧妙运用各种战术屡次以少胜多，难免恣生骄气。在这次决战中，他将巴米利恩星域战场划分成30000列，每列依次编号为1, 2, …, 30000。之后，他把自己的战舰也依次编号为1, 2, …, 30000，让第i号战舰处于第i列(i = 1, 2, …, 30000)，形成“一字长蛇阵”，诱敌深入。这是初始阵形。当进犯之敌到达时，杨威利会多次发布合并指令，将大部分战舰集中在某几列上，实施密集攻击。合并指令为M i j，含义为让第i号战舰所在的整个战舰队列，作为一个整体（头在前尾在后）接至第j号战舰所在的战舰队列的尾部。显然战舰队列是由处于同一列的一个或多个战舰组成的。合并指令的执行结果会使队列增大。 <br />然而，老谋深算的莱因哈特早已在战略上取得了主动。在交战中，他可以通过庞大的情报网络随时监听杨威利的舰队调动指令。 <br />在杨威利发布指令调动舰队的同时，莱因哈特为了及时了解当前杨威利的战舰分布情况，也会发出一些询问指令：C i j。该指令意思是，询问电脑，杨威利的第i号战舰与第j号战舰当前是否在同一列中，如果在同一列中，那么它们之间布置有多少战舰。 <br />作为一个资深的高级程序设计员，你被要求编写程序分析杨威利的指令，以及回答莱因哈特的询问。 <br />最终的决战已经展开，银河的历史又翻过了一页…… <br /></p>', '[{\"input\": \"4\\nM 2 3\\nC 1 2\\nM 2 4\\nC 4 2\\n\", \"output\": \"-1\\n1\\n\"}]', '1226', '<p>[img]http://pimg.swodestatic.com/NTUzODk0OSxncmF5bHVjaw==.jpg[/img]<br /></p>', '2016-08-18 14:23:57.000000', '莫诺转载。\\n', '2000', '128', '1', '0', '0', '1', '1', '输入的第一行有一个整数T（1<=T<=500,000），表示总共有T条指令。 \\n以下有T行，每行有一条指令。指令有两种格式： \\n1.M i j ：i和j是两个整数（1<=i , j<=30000），表示指令涉及的战舰编号。该指令是莱因哈特窃听到的杨威利发布的舰队调动指令，并且保证第i号战舰与第j号战舰不在同一列。 \\n2.C i j ：i和j是两个整数（1<=i , j<=30000），表示指令涉及的战舰编号。该指令是莱因哈特发布的询问指令。 \\n', '你的程序应当依次对输入的每一条指令进行分析和处理： \\n如果是杨威利发布的舰队调动指令，则表示舰队排列发生了变化，你的程序要注意到这一点，但是不要输出任何信息； \\n　如果是莱因哈特发布的询问指令，你的程序要输出一行，仅包含一个整数，表示在同一列上，第i号战舰与第j号战舰之间布置的战舰数目。如果第i号战舰与第j号战舰当前不在同一列上，则输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('228', ' 陶陶抢苹果', '<p>又到了收获的季节，树上结了许多陶陶，错了，是许多苹果，有很多个小陶陶都来摘苹果。每个陶陶都想要最大的苹果，所以发生了争执，为了解决他们的矛盾，出题人定了一项特殊的规则，按体重的大小来定顺序，每一轮都是先由胖的先摘（照顾胖子），每个陶陶都是很聪明的，不会错过眼前最大的苹果。现在问题来了，一共有n个苹果，m个陶陶，要你按原顺序输出每个陶陶可以抢到的苹果的总大小。<br /></p>', '[{\"input\": \"5 3\\n1 2 3 4 5\\n1 2 3\\n\", \"output\": \"3 5 7\\n\"}]', '1227', '<p>范围：n,m<=100000<br /></p>', '2016-08-18 14:24:07.000000', 'dejiyu@CSC WorkGroup\\n', '1000', '128', '1', '0', '0', '3', '1', '第一行两个数n,m。\\n接下来一行n个数，分别为每个苹果的大小。\\n接下来一行m个数，分别为每个陶陶的体重。\\n', '一行m个数，每个陶陶抢到的苹果的大小。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('229', ' 最短路上的统计CSC WorkGroup III', '<p>一个无向图上，没有自环，所有边的权值均为1，对于一个点对（a,b）,我们要把所有a与b之间所有最短路上的点的总个数输出。<br /></p>', '[{\"input\": \"5 6\\n1 2\\n1 3\\n2 3\\n2 4\\n3 5\\n4 5\\n3\\n2 5\\n5 1\\n2 4\\n\", \"output\": \"4\\n3\\n2\\n\"}]', '1228', '<p>范围：n<=100，p<=5000<br /></p>', '2016-08-18 14:24:07.000000', 'dejiyu@CSC WorkGroup\\n', '1000', '128', '1', '0', '0', '2', '1', '第一行n,m,表示n个点，m条边\\n接下来m行，每行两个数a,b,表示a,b之间有条边\\n在下来一个数p,表示问题的个数\\n接下来p行，每行两个数a,b,表示询问a,b\\n', '对于每个询问，输出一个数c,表示a,b之间最短路上点的总个数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('230', ' 开关灯泡', '<p>一个房间里有n盏灯泡，一开始都是熄着的，有1到n个时刻，每个时刻i，我们会将i的倍数的灯泡改变状态（即原本开着的现将它熄灭，原本熄灭的现将它点亮），问最后有多少盏灯泡是亮着的。<br /></p>', '[{\"input\": \"5\\n\", \"output\": \"2\\n\"}]', '1229', '<p>范围：40%的数据保证，n<=maxlongint<br />      100%的数据保证，n<=10^200<br /></p>', '2016-08-18 14:24:07.000000', 'dejiyu@CSC WorkGroup\\n', '1000', '128', '1', '0', '0', '1', '1', '一个数n\\n', 'm,表示最后有m盏是亮着的\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('231', ' 校门外的树', '<p> 校门外有很多树，有苹果树，香蕉树，有会扔石头的，有可以吃掉补充体力的……<br />如今学校决定在某个时刻在某一段种上一种树，保证任一时刻不会出现两段相同种类的树，现有两个操作：<br />K=1，读入l,r表示在l~r之间种上的一种树<br />K=2，读入l,r表示询问l~r之间能见到多少种树<br />（l,r>0）<br /></p>', '[{\"input\": \"5 4\\n1 1 3\\n2 2 5\\n1 2 4\\n2 3 5\\n\", \"output\": \"1\\n2\\n\"}]', '1230', '<p>范围：20%的数据保证，n,m<=100<br />      60%的数据保证，n <=1000,m<=50000<br />      100%的数据保证，n,m<=50000<br /></p>', '2016-08-18 14:24:07.000000', 'dejiyu@CSC WorkGroup\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行n,m表示道路总长为n，共有m个操作\\n接下来m行为m个操作\\n', '对于每个k=2输出一个答案\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('232', ' 字符串还原', '<p>　　一个长度为n的由小写字母组成的字符串s1s2…sn按如下方式加密成3种形式：<br />　　1、将字符串翻转，即si与sn-i+1对换。<br />　　2、将字符串中每个字母变为其之后第k个字母，定义z之后的字母为a，0≤k≤6且未知。<br />　　3、将字符串中每个字母变为其之前第k个字母，定义a之前的字母为z，k同3。<br />　　例如字符串abcd按上面3种方式加密后，在k=1的情况下为：1、dcba；2、bcde；3、zabc。<br />　　现给出信中按以上3种形式分别加密后的3个字符串（不一定按以上顺序），要求还原原来的字符串，并输出告诉小K。<br /></p>', '[{\"input\": \"4\\nzabc\\ndcba\\nbcde\\n\", \"output\": \"abcd\\n\"}]', '1231', '<p></p>', '2016-08-18 14:24:16.000000', '', '10000', '128', '1', '0', '0', '2', '1', '　　输入的第1行为一个整数n，表示这个字符串的长度。\\n　　下面3行每行3个长度为n的字符串，且保证符合题目要求。\\n', '  输出仅包括1行，为还原后的字符串。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('233', ' 包裹快递', '<p>　　一个快递公司要将n个包裹分别送到n个地方，并分配给邮递员小K一个事先设定好的路线，小K需要开车按照路线给的地点顺序相继送达，且不能遗漏一个地点。小K得到每个地方可以签收的时间段，并且也知道路线中一个地方到下一个地方的距离。若到达某一个地方的时间早于可以签收的时间段，则必须在这个地方停留至可以签收，但不能晚于签收的时间段，可以认为签收的过程是瞬间完成的。<br />　　为了节省燃料，小K希望在全部送达的情况下，车的最大速度越小越好，就找到了你给他设计一种方案，并求出车的最大速度最小是多少。<br /></p>', '[{\"input\": \"3\\n1 2 2\\n6 6 2\\n7 8 4\\n\", \"output\": \"2.00\\n\"}]', '1232', '<p>　　第一段用1的速度在时间2到达第1个地点，第二段用0.5的速度在时间6到达第2个地点，第三段用2的速度在时间8到达第3个地点。<br /></p>', '2016-08-18 14:24:16.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第1行为一个正整数n，表示需要运送包裹的地点数。\\n　　下面n行，第i+1行有3个正整数xi，yi，si，表示按路线顺序给出第i个地点签收包裹的时间段为[xi, yi]，即最早为距出发时刻xi，最晚为距出发时刻yi，从前一个地点到达第i个地点距离为si，且保证路线中xi递增。\\n　　可以认为s1为出发的地方到第1个地点的距离，且出发时刻为0。\\n', '仅包括一个整数，为车的最大速度最小值，结果保留两位小数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('234', ' 信息筛选', '<p>经过他的识别,危险的信息是那些删除掉若干字符后,剩余的4个字符满足”前两个和后两个分别相同”,或”中间和两边分别相同”的东西.<br /></p>', '[{\"input\": \"5\\nHello\\nWoWoWo\\nLoraBit\\nyoungBoy\\nDejiwe\\n\", \"output\": \"safe\\nde1ete\\nsafe\\nde1ete\\nsafe\\n\"}]', '1233', '<p>对于50%的数据: 1<=n<=100;<br />对于100%的数据: 1<=n<=10000; 1<=字符串长度<=10；<br /></p>', '2016-08-18 14:24:38.000000', 'YoungBoy From HNSDFZ\\n          Welcome&n', '10000', '128', '1', '0', '0', '2', '1', '第1行,信息的组数N.\\n第2~N+1行, 每行输入一组信息\\n', '共N行,每行输出:”de1ete”表示删除;”safe”表示安全\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('235', ' ISBN号码', '<p>每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，其规定格式如“x-xxx-xxxxx-x”，其中符号“-”就是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。<br />识别码的计算方法如下：<br />首位数字乘以1加上次位数字乘以2……以此类推，用所得的结果mod 11，所得的余数即为识别码，如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：对067082162这9个数字，从左至右，分别乘以1，2，...,9,再求和，即0×1+6×2+……+2×9=158，然后取158 mod 11的结果4作为识别码。<br />你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，则输出你认为是正确的ISBN号码。<br /></p>', '[{\"input\": \"【样例1】\\n0-670-82162-4\\n【样例2】\\n0-670-82162-0\\n\", \"output\": \"【样例1】\\nRight\\n【样例2】\\n0-670-82162-4\\n\"}]', '1234', '<p></p>', '2016-08-18 14:24:38.000000', 'NOIP2008复赛原题\\n子夜长河提供\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件isbn.in只有一行，是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。\\n', '输出文件isbn.out共一行，假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符“-”）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('236', ' 传球游戏', '<p>    上体育课的时候，小蛮的老师经常带着同学们一起做游戏。这次，老师带着同学们一起做传球游戏。<br />    游戏规则是这样的：n个同学站成一个圆圈，其中的一个同学手里拿着一个球，当老师吹哨子时开始传球，每个同学可以把球传给自己左右的两个同学中的一个（左右任意），当老师再次吹哨子时，传球停止，此时，拿着球没传出去的那个同学就是败者，要给大家表演一个节目。<br />    聪明的小蛮提出了一个有趣的问题：有多少种不同的传球方法可以使得从小蛮手里开始传的球，传了m次以后，又回到小蛮手里。两种传球方法被视作不同的方法，当且仅当这两种方法中，接到球的同学按接球顺序组成的序列是不同的。比如有三个同学1号、2号、3号，并假设小蛮为1号，球传了三次回到小蛮手里的方式有1->2->3->1和1->3->2->1，共2种。<br /></p>', '[{\"input\": \"3 3\\n\", \"output\": \"2\\n\"}]', '1235', '<p>40%的数据满足：3<=n<=30 1<=m<=20<br />100%的数据满足：3<=n<=30 1<=m<=30<br /></p>', '2016-08-18 14:24:38.000000', 'JackDavid127\\nNOIP2008 普及组\\n', '1000', '128', '1', '0', '0', '2', '1', '    输入共一行，有两个用空格隔开的整数n，m（3<=n<=30，1<=m<=30）。\\n', '    输出共一行，有一个整数，标示符合题意的方法数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('237', ' 宁静与九连环', '<p>    数学成绩出来，某T折戟沉沙，涉险及格。而宁静折取桂冠。然而为了E文测验，宁静带了个九连环回学校供她欣赏。<br />    宁静：这个就是经典的九连环啦！九连环的每个环互相制约，只有第一环能够自由上下。要想下/上第n个环，就必须满足两个条件：<br />    一、第n-1个环在架上；<br />    二、第n-1个环前面的环全部不在架上。<br />    这样一来的话如果我想解第一个环的话就是这样，两个环的话我先也可以直接下。三个环的时候就这样这样：<br />    1、下1环<br />    2、下3环<br />    3、上1环<br />    4、下2环<br />    5、下1环<br />    某T：那么，下9个环呢？<br />    宁静双手赛百鸟，卡擦卡擦在10分钟之内全部下了。<br />    某T：好玩好玩~，这个给我。<br />    宁静：喂喂……<br />    某T：这样吧，明天我问你当我要下N个环时需要多少步，如果你说出来的话一切好说，说不出来这个玩意归我了。<br />    宁静：……（悲哀）<br />    宁静无论如何也不会将时间浪费于和某T折腾，于是他想到了oier……<br /></p>', '[{\"input\": \"20\\n\", \"output\": \"699050\\n\"}]', '1236', '<p></p>', '2016-08-18 14:24:38.000000', '宁静改编\\n', '10000', '128', '1', '0', '0', '1', '1', '一个正整数N（1<=N<=800）,代表要拆卸的环数\\n', '一个正整数M，代表所需的步数\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('238', ' 传纸条', '<p>小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排做成一个m行n列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标(1,1)，小轩坐在矩阵的右下角，坐标(m,n)。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左传递。 <br />在活动进行中，小渊希望给小轩传递一张纸条，同时希望小轩给他回复。班里每个同学都可以帮他们传递，但只会帮他们一次，也就是说如果此人在小渊递给小轩纸条的时候帮忙，那么在小轩递给小渊的时候就不会再帮忙。反之亦然。 <br />还有一件事情需要注意，全班每个同学愿意帮忙的好感度有高有低（注意：小渊和小轩的好心程度没有定义，输入时用0表示），可以用一个0-100的自然数来表示，数越大表示越好心。小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这两条路径上同学的好心程度只和最大。现在，请你帮助小渊和小轩找到这样的两条路径。<br /></p>', '[{\"input\": \"3 3\\n0 3 9\\n2 8 5\\n5 7 0\\n\", \"output\": \"34\\n\"}]', '1237', '<p>【限制】<br />30%的数据满足：1<=m,n<=10<br />100%的数据满足：1<=m,n<=50<br /></p>', '2016-08-18 14:24:38.000000', 'NOIp2008 提高组第三题\\n', '10000', '128', '1', '0', '0', '2', '1', '输入第一行有2个用空格隔开的整数m和n，表示班里有m行n列（1<=m,n<=50）。 \\n接下来的m行是一个m*n的矩阵，矩阵中第i行j列的整数表示坐在第i行j列的学生的好心程度。每行的n个整数之间用空格隔开。 \\n', '输出共一行，包含一个整数，表示来回两条路上参与传递纸条的学生的好心程度之和的最大值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('239', ' 笨小猴', '<p>这种方法的具体描述如下：假设maxn是单词中出现次数最多的字母的出现次数，minn是单词中出现次数最少的字母的出现次数，如果maxn-minn是一个质数，那么笨小猴就认为这是个Lucky Word，这样的单词很可能就是正确的答案。<br /></p>', '[{\"input\": \"【样例1】\\nerror\\n\\n【样例2】\\nolympic\\n\", \"output\": \"【样例1】\\nLucky Word\\n2\\n\\n【样例2】\\nNo Answer\\n0\\n\"}]', '1238', '<p>【输入输出样例1解释】<br />单词error中出现最多的字母r出现了3次，出现次数最少的字母出现了1次，3-1=2，2是质数。<br />【输入输出样例2解释】<br />单词olympic中出现最多的字母i出现了2次，出现次数最少的字母出现了1次，2-1=1，1不是质数。<br /></p>', '2016-08-18 14:24:38.000000', 'NOIp2008 提高组第一题\\n', '10000', '128', '1', '0', '0', '2', '1', '输入只有一行，是一个单词，其中只可能出现小写字母，并且长度小于100。\\n', '输出共两行，第一行是一个字符串，假设输入的的单词是Lucky Word，那么输出“Lucky Word”，否则输出“No Answer”； \\n\\n第二行是一个整数，如果输入单词是Lucky Word，输出maxn-minn的值，否则输出0。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('240', ' 火柴棒等式', '<p>给你n根火柴棍，你可以拼出多少个形如“A+B=C”的等式？等式中的A、B、C是用火柴棍拼出的整数（若该数非零，则最高位不能是0）。用火柴棍拼数字0-9的拼法如图所示：<br />[IMG]http://photo1.bababian.com/upload14/20081231/1FB636DB48AB7AE3A36F9C26F984E8CC.jpg[/IMG]<br />注意：<br />1. 加号与等号各自需要两根火柴棍<br />2. 如果A≠B，则A+B=C与B+A=C视为不同的等式（A、B、C>=0）<br />3. n根火柴棍必须全部用上<br /></p>', '[{\"input\": \"Input 1:\\n14\\n\\nInput 2:\\n18\\n\", \"output\": \"Output 1:\\n2\\n\\nOutput 2:\\n9\\n\"}]', '1239', '<p>【输入输出样例1解释】<br />2个等式为0+1=1和1+0=1。<br />【输入输出样例2解释】<br />9个等式为：<br />0+4=4<br />0+11=11<br />1+10=11<br />2+2=4<br />2+7=9<br />4+0=4<br />7+2=9<br />10+1=11<br />11+0=11<br /></p>', '2016-08-18 14:24:38.000000', 'NOIP2008提高组第二题。\\n', '1000', '128', '1', '0', '0', '1', '1', '输入文件matches.in共一行，有一个整数n（n<=24）。\\n', '输出文件matches.out共一行，表示能拼成的不同等式的数目。\\n\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('241', ' 立体图', '<p>小渊是个聪明的孩子，他经常会给周围的小朋友们讲些自己认为有趣的内容。最近，他准备给小朋友讲解立体图，请你帮他画出立体图。<br />小渊有一块面积为m*n的矩形区域，上面有m*n个边长为1的格子，每个格子上堆了一些同样大小的积木（积木的长宽高都是1），小渊想请你打印出这些格子的立体图。我们定义每个积木为如下格式，并且不会做任何翻转旋转，只会严格以这样的一种形式摆放：<br />  +---+<br /> /   /|<br />+---+ |<br />|   | +<br />|   |/<br />+---+<br />每个顶点用1个加号‘＋’表示，长用3个‘－’表示，宽用1个‘/’表示，高用两个‘|’表示。字符‘＋’，‘－’，‘/’，‘|’的ASCII码分别为43，45，47，124。字符‘.’（ASCII码46）需要作为背景输出，即立体图里的空白部分需要用‘.’来代替。立体图的画法如下面的规则：<br />若两块积木左右相邻，图示为：<br />..+---+---+<br />./   /   /|<br />+---+---+ |<br />|   |   | +<br />|   |   |/.<br />+---+---+..<br />若两块积木上下相邻，图示为：<br />..+---+<br />./   /|<br />+---+ |<br />|   | +<br />|   |/|<br />+---+ |<br />|   | +<br />|   |/.<br />+---+..<br />若两块积木前后相邻，图示为：<br />....+---+<br />.../   /|<br />..+---+ |<br />./   /| +<br />+---+ |/.<br />|   | +..<br />|   |/...<br />+---+....<br />立体图中，定义位于第(m,1)的格子（即第m行第1列的格子）上面自底向上的第一块积木（即最下面的一块积木）的左下角顶点为整张图最左下角的点。<br /></p>', '[{\"input\": \"3 4\\n2 2 1 2\\n2 2 1 1\\n3 2 1 2\\n\", \"output\": \"......+---+---+...+---+\\n..+---+  /   /|../   /|\\n./   /|-+---+ |.+---+ |\\n+---+ |/   /| +-|   | +\\n|   | +---+ |/+---+ |/|\\n|   |/   /| +/   /|-+ |\\n+---+---+ |/+---+ |/| +\\n|   |   | +-|   | + |/.\\n|   |   |/  |   |-| +..\\n+---+---+---+---+ |/...\\n|   |   |   |   | +....\\n|   |   |   |   |/.....\\n+---+---+---+---+......\\n\"}]', '1240', '<p></p>', '2016-08-18 14:24:38.000000', '此题由wangjie添加\\n', '10000', '128', '1', '0', '0', '1', '1', '输入文件drawing.in第一行有用空格隔开的2个整数m和n，表示有m*n个格子（1<=m,n<=50）。\\n接下来的m行，是一个m*n的矩阵，每行有n个用空格隔开的整数，其中第i行第j列上的整数表示第i行第j列的格子上摞有多少个积木（1<=每个格子上的积木数<=100）。\\n', '输出文件drawing.out中包含题目要求的立体图，是一个K行L列的字符矩阵，其中K和L表示最少需要K行L列才能按规定输出立体图。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('242', ' 排座椅', '<p><br />【问题描述】 <br />上课的时候总有一些同学和前后左右的人交头接耳，这是令小学班主任十分头疼的一件事情。不过，班主任小雪发现了一些有趣的现象，当同学们的座次确定下来之后，只有有限的D对同学上课时会交头接耳。同学们在教室中坐成了M行N列，坐在第i行第j列 <br /><br />的同学的位置是（i，j），为了方便同学们进出，在教室中设置了K条横向的通道，L条纵向的通道。于是，聪明的小雪想到了一个办法，或许可以减少上课时学生交头接耳的问题：她打算重新摆放桌椅，改变同学们桌椅间通道的位置，因为如果一条通道隔开了两个会交头接耳的同学，那么他们就不会交头接耳了。 <br />请你帮忙给小雪编写一个程序，给出最好的通道划分方案。在该方案下，上课时交头接耳的学生对数最少。 <br /></p>', '[{\"input\": \"【输入样例】 \\n4 5 1 2 3 \\n4 2 4 3 \\n2 3 3 3 \\n2 5 2 4 \\n\", \"output\": \"2 \\n2 4 \\n\"}]', '1241', '<p></p>', '2016-08-18 14:24:38.000000', 'BY 飞过海\\n', '10000', '128', '1', '0', '0', '2', '1', '【输入】 \\n输入文件seat.in的第一行，有5各用空格隔开的整数，分别是M，N，K，L，D（2<=N，M<=1000，0<=K<M，0<=L<N，D<=2000）。 \\n接下来D行，每行有4个用空格隔开的整数，第i行的4个整数Xi，Yi，Pi，Qi，表示坐在位置(Xi,Yi)与(Pi,Qi)的两个同学会交头接耳（输入保证他们前后相邻或者左右相邻）。 \\n输入数据保证最优方案的唯一性。 \\n\\n', '【输出】 \\n输出文件seat.out共两行。 \\n第一行包含K个整数，a1a2……aK，表示第a1行和a1+1行之间、第a2行和第a2+1行之间、…、第aK行和第aK+1行之间要开辟通道，其中ai< ai+1，每两个整数之间用空格隔开（行尾没有空格）。 \\n第二行包含L个整数，b1b2……bk，表示第b1列和b1+1列之间、第b2列和第b2+1列之间、…、第bL列和第bL+1列之间要开辟通道，其中bi< bi+1，每两个整数之间用空格隔开（行尾没有空格）。 \\n\\n\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('243', ' 笨笨的单词排序', '<p>笨笨有一些单词，他想要把这些单词按一定顺序排序。<br />现在笨笨有N(N<=1000)个单词，他想要你按笨笨的字典序把这些单词顺序或逆序排列好来。<br />输入笨笨的字典序以及他所要排序的单词和他所要的排序方式（顺序或逆序，顺序用1表示，逆序用0表示）。<br />请你把排好的单词输出,每个单词长度不超过255个字符,中间没有空格。<br /></p>', '[{\"input\": \"abcdefghijklmnopqrstuvwxyz\\n2\\nbig\\nsmall\\n1\\n\", \"output\": \"big\\nsmall\\n\"}]', '1242', '<p>是笨笨的字典序，不是一般的字典序哦。<br />输入输出中的字母均为小写字母。<br />注：顺序逆序就是说把它们按一定的顺序排列好，而不是要你把单词反过来。<br />如（按字典序）：<br />顺序为：<br />aa<br />ba<br />ca<br />逆序为<br />ca<br />ba<br />aa<br /></p>', '2016-08-18 14:24:38.000000', '笨笨原创。\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行，一个长度为26的字母不重复的字符串，表示笨笨的字典序（26个字母全齐）。\\n第二行一个数N。\\n接下来N行，每行一个单词。\\n最后一行是笨笨所想要的排序方式。\\n', '输出共N行，表示排好序的单词。输出每行一个单词。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('244', ' 笨笨的果实采摘', '<p>笨笨在小山顶上种了一棵果树，秋天了，果树结出了许多许多的果子，笨笨要去摘果子。<br />这是一棵可以结出3种不同果实的树，它的果实长在树枝的分叉处和树顶上。<br />果实分3种：普通果实、奇异果实和稀有果实。<br />这颗树的第一个分叉可以用一个2进制码表示（也就是许多的“1”和“0”），<br />而第一个分叉又分成2个分叉，分别用第一个分叉的前半段和后半段表示（从中间分开），<br />其他分叉也如此。分叉分到最后只剩下“1”或“0”时就成了树顶。<br />每个分叉只能分成2个分叉。<br />表示这棵树第一个分叉的2进制码必定是2的乘方位。<br />例如：<br />          1       0      1      0<br />           \\     /      \\     /<br />             10        10<br />              \\      /<br />                1010<br />这就是一棵笨笨种的树。<br />三种果实的分辨方式为：<br />普通果实：既有“1”又有“0”；<br />奇异果实：只有“1”；<br />稀有果实：只有“0”。<br />每种果实的价值不同，普通果实1元，奇异果实2元，稀有果实5元。<br />笨笨能摘到的果实范围是一定的，他想知道他所能摘到果实的总价值。<br />像刚刚所示的“1010”树，它有3个普通果实，2个奇异果实和2个稀有果实，<br />若笨笨能摘到最高2，最低0，那么他就能得到所有的果实，果实的总价值为3*1+2*2+5*2=17元。<br /></p>', '[{\"input\": \"3\\n3 0\\n10001011\\n\", \"output\": \"40\\n\"}]', '1243', '<p>第一个分叉的高度为0，后面的依次递增，每层加1。<br />样例解释：可以有4层共15个分叉（包括树顶），<br />5个普通果实，5个奇异果实，5个稀有果实。<br />5*1+5*2+5*5=40<br /></p>', '2016-08-18 14:24:38.000000', '笨笨原创。\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行一个数n，表示这个2进制码的位数是2的多少次乘方（即长度为2^n,0<=n<=15）。\\n第二行2个数u，d，表示笨笨可以摘到的最大高度和最小高度（0<=d<=u<=100000）。\\n第三行为表示第一个分叉的位数为2^n位的2进制数。\\n', '一个数，笨笨所能摘到果子的最大总价值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('245', ' 笨笨的纸条传递', '<p>笨笨上着自习课，自习课是不允许同学们讲话的，但没说不给传纸条啊~but,传纸条被老师看见就OVER了。<br />笨笨把要说的话写在了纸条上，课室里的每个同学看这张纸条的时间是已知的。<br />自习课会有老师来巡堂，纸条不能被老师发现。<br />教学楼的东西两头各有一条楼梯，老师会从1楼的任意一边开始巡堂，巡完一层楼就从另一边楼梯上楼<br />（也就是说，如果老师从2楼东边楼梯上来，就从2楼西边楼梯往3楼爬，再从3楼东边楼梯往4楼爬，爬楼路线为S形），<br />一层一层地巡。<br />笨笨和他的同学们各自都只知道自己前后左右同学看这张纸条所需的时间，他们会挑需时最少的并且没看过纸条的同学传，<br />如果四个方向的同学所需时间有一样的就按前=>右=>后=>左的顺序优先传递。<br />最后一个看纸条的同学会把纸条扔进垃圾桶（个个都是神投手？！），如果周围的人都看过纸条，纸条传不出去，也会把纸条扔进垃圾桶。<br />笨笨想知道在老师来到他们课室前，纸条能传给多少个人，以及老师来之前最后收到纸条的人坐在第几行第几个。<br /></p>', '[{\"input\": \"Input 1:\\n3 3\\n2 3 4\\n1 0 5\\n8 7 6\\n3 3\\n9 0 9\\n8 8 8\\n8 8 8\\n0\\n\\nInput 2:\\n3 3\\n0 1 3\\n2 1 1\\n5 5 5\\n2 2\\n0 5\\n5 5\\n1\\n\\n\", \"output\": \"Output 1:\\n9\\n3,1\\n\\nOutput 2:\\nError!\\n1,3\\n\"}]', '1244', '<p>最后拿到纸条的同学会在老师出现的那一刹那把纸条扔到垃圾桶里。<br />【样例1的解释】<br />笨笨所在的位置为（2，2），他会先传给（2，1）的那个同学。<br />现在纸条在（2，1）的手上，他花了1看纸条，然后又把纸条传给（1，1）的那个同学。<br />（1，1）把纸条传给（1，2），（1，2）传给（1，3），（1，3）传给（2，3）……<br />最后传到了（3，1）手上，（3，1）看完后时间还有多，所以有9个人看了纸条，最后在（3，1）手上。<br /> 【样例2的解释】<br />笨笨从（1，1）把纸条传给了（1，2），（1，2）把纸条传给了（2，2）。<br />接着（2，2）又把纸条传给了（2，3），（2，3）把纸条传给了（1，3）。<br />（1，3）看完后，他周围的同学已经看过了，所以他把纸条直接送入垃圾桶。<br />因为他并不是因为顺利传完把纸条扔进垃圾桶的，所以要输出\"Error!\"，最后一个拿到纸条的是（1，3）。<br /></p>', '2016-08-18 14:24:38.000000', '笨笨原创。\\n', '1000', '128', '1', '0', '0', '1', '1', '第一行2个数k1,k2(0<k1,k2<=30)，表示有k1行同学，每行k2个人。\\n接下来k1行，每行k2个数，表示a[k1,k2]（a[k1,k2]<maxint）这个同学看纸条所要的时间，笨笨用0表示。\\n第k1+2行2个数l1,l2(0<l1,l2<=30)，表示有l1层楼，每层有l2间课室，笨笨所在课室用0表示。\\n接下来l1行，每行l2个数，表示从楼顶到1楼各个教室老师巡查所要用的时间。\\n最后一行一个数1或0，0表示老师从西边开始巡查，1表示从东边开始巡查。\\n', '第一行是所能看到纸条内容的人数，如果是传不出去的话就输出“Error!”。\\n第二行是最后一个收到纸条的人的坐标，表示方式：第X行+\',\'+第Y个。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('246', ' 郁闷的出纳员', '<p>OIER公司是一家大型专业化软件公司，有着数以万计的员工。作为一名出纳员，我的任务之一便是统计每位员工的工资。这本来是一份不错的工作，但是令人郁闷的是，我们的老板反复无常，经常调整员工的工资。如果他心情好，就可能把每位员工的工资加上一个相同的量。反之，如果心情不好，就可能把他们的工资扣除一个相同的量。我真不知道除了调工资他还做什么其它事情。<br />工资的频繁调整很让员工反感，尤其是集体扣除工资的时候，一旦某位员工发现自己的工资已经低于了合同规定的工资下界，他就会立刻气愤地离开公司，并且再也不会回来了。每位员工的工资下界都是统一规定的。每当一个人离开公司，我就要从电脑中把他的工资档案删去，同样，每当公司招聘了一位新员工，我就得为他新建一个工资档案。<br />老板经常到我这边来询问工资情况，他并不问具体某位员工的工资情况，而是问现在工资第k多的员工拿多少工资。每当这时，我就不得不对数万个员工进行一次漫长的排序，然后告诉他答案。<br />好了，现在你已经对我的工作了解不少了。正如你猜的那样，我想请你编一个工资统计程序。怎么样，不是很困难吧？<br /></p>', '[{\"input\": \"9 10\\nI 60\\nI 70\\nS 50\\nF 2\\nI 30\\nS 15\\nA 5\\nF 1\\nF 2\\n\", \"output\": \"10\\n20\\n-1\\n2\\n\"}]', '1245', '<p>I命令的条数不超过100000<br />A命令和S命令的总条数不超过100<br />F命令的条数不超过100000<br />每次工资调整的调整量不超过1000<br />新员工的工资不超过100000<br /></p>', '2016-08-18 14:24:38.000000', 'NOI2004\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行有两个非负整数n和min。n表示下面有多少条命令，min表示工资下界。\\n接下来的n行，每行表示一条命令。命令可以是以下四种之一：\\n名称	格式	作用\\nI命令	I_k	新建一个工资档案，初始工资为k。如果某员工的初始工资低于工资下界，他将立刻离开公司。\\nA命令	A_k	把每位员工的工资加上k\\nS命令	S_k	把每位员工的工资扣除k\\nF命令	F_k	查询第k多的工资\\n_（下划线）表示一个空格，I命令、A命令、S命令中的k是一个非负整数，F命令中的k是一个正整数。\\n在初始时，可以认为公司里一个员工也没有。\\n', '输出文件的行数为F命令的条数加一。\\n对于每条F命令，你的程序要输出一行，仅包含一个整数，为当前工资第k多的员工所拿的工资数，如果k大于目前员工的数目，则输出-1。\\n输出文件的最后一行包含一个整数，为离开公司的员工的总数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('247', ' 舞台设置', '<p>游乐园决定在一个n×m的广场上举办一次颁奖晚会，总管要你帮忙搭建一个舞台。<br />现在给你广场的布置图（规定地图的上方为正北），有些位置需要布置为观众席（记为1），另一些是空地（记为0）。舞台只能在空地上搭建。<br />为了使晚会更加吸引人，平平觉得舞台应该是朝北的h—金字塔形。h—金字塔形舞台是由h个矩形舞台相接而成的，其中后方的矩形舞台的两端必须超出在其前面的矩形舞台，且最小矩形面对的朝向为舞台的方向。下面给出几个实例:<br /> <br />								<br />								<br />								<br />								<br />								<br />这是一个朝北且面积是20的3—金字塔形舞台。<br />								<br />								<br />								<br />								<br />								<br />这不是金字塔形舞台，因为自北向南第二个矩形西端没有超过第一个矩形。<br />								<br />								<br />								<br />								<br />								<br />这是一个朝西且面积为12的2—金字塔形舞台<br />								<br />								<br />								<br />								<br />								<br />这不是一个金字塔形舞台，因为矩形没有相接。<br /> <br />舞台的面积应该尽量大，输出面积最大的朝北h—金字塔形舞台的面积。<br /></p>', '[{\"input\": \"4 6 2\\n0 0 1 0 0 1\\n0 0 0 0 0 0\\n0 0 1 0 0 0\\n0 1 1 0 0 0\\n\", \"output\": \"10\\n\"}]', '1246', '<p>对于10％的数据 h=1；<br />对于40％的数据 h≤5；<br />对于100％的数据 h≤20；<br />对于100％的数据 n、m≤100。<br /></p>', '2016-08-18 14:24:46.000000', 'f1zsy\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行3个整数 n、m、h。\\n接下来n行，每行m个0或1，中间用一个空格隔开。\\n', '一个整数，表示最大的朝北的h—金字塔形舞台的面积。\\n如果没有符合题意的h—金字塔形舞台输出0。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('248', ' 进制转换', '<p>我们可以用这样的方式来表示一个十进制数：将每个阿拉伯数字乘以一个以该数字所处位置的（值减1）为指数，以10为底数的幂之和的形式。例如，123可表示为1*10^2+2*10^1+3*10^0这样的形式。<br />与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值-1）为指数，以2为底数的幂之和的形式。一般说来，任何一个正整数R或一个负整数-R都可以被选来作为一个数制系统的基数。如果是以R或-R为基数，则需要用到的数码为0，1,....R-1。例如，当R=7时，所需用到的数码是0，1，2, 3，4，5和6，这与其是R或-R无关。如果作为基数的数绝对值超过10，则为了表示这些数码，通常使用英文字母来表示那些大于9的数码。例如对16进制数来说，用A表示10，用B表示11，用C表示12，用D表示13，用E表示14，用F表示15。在负进制数中是用-R作为基数，例如-15（＋进制）相当于110001（-2进制），<br />并且它可以被表示为2的幂级数的和数：<br />  110001=1*(-2)^5+1*(-2)^4+0*(-2)^3+0*(-2)^2+0*(-2)^1+1*(-2)^0<br />问题求解:<br />设计一个程序，读入一个十进制数的基数和一个负进制数的基数，并将此十进制数转换为此负进制下的数：-R∈{-2，-3，-4,....-20} <br /></p>', '[{\"input\": \"30000 -2\\n-20000 -7\\n28800 -16\\n-25000 -16\\n\", \"output\": \"30000=1101101010111000(base -2)\\n-20000=1111011000100000(base -2)\\n28800=19180(base -16)\\n-25000=7FB8(base -16) \\n\"}]', '1247', '<p>每个测试数据不超过1000组。<br />不要单纯地用普通进制转换的方法>.<<br /></p>', '2016-08-18 14:24:46.000000', 'From 玛维-影之歌\\nNOIP2000原题\\n', '10000', '128', '1', '0', '0', '2', '1', '输入文件有若干行，每行有两个输入数据。\\n第一个是十进制数N（-32768<=N<=32767）; 第二个是负进制数的基数-R。\\n', '输出此负进制数及其基数，若此基数超过10，则参照16进制的方式处理。【具体请参考样例】\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('249', ' 教主的集合序列', '<p>　　定义集合S1为1到n之间所有正整数组成的集合，即S1={1,2,3…n}。当k＞1时，Sk为集合Sk-1中任意两个不相同数之和的集合。<br />　　例如，当n=3时：<br />　　S1={1,2,3} <br />　　S2={3,4,5}<br />　　S3={7,8,9} <br />　　S4={15,16,17}<br />　　……	<br />　　现将每个集合中所有元素取出，集合Si的数放在集合Si+1的数的前面，同一个集合数从小到大排序，这样得到一个序列L。例如，当n=3时，L=1,2,3,3,4,5,7,8,9,15,16,17……<br />　　那么，现对于给定的n和k，求L中第k个数。<br /></p>', '[{\"input\": \"4 6\\n\", \"output\": \"4\\n\"}]', '1248', '<p>　　当n=4时，序列L=1,2,3,4,3,4,5,6,7,7……<br />　　所以序列中第6个数为4。<br /></p>', '2016-08-18 14:24:46.000000', '', '10000', '128', '1', '0', '0', '1', '1', '    输入包含1行，为2个正整数n和k，两个整数用逗号隔开。\\n', '　　输出包含1行，为一个正整数，即序列L中第k个数。若这个数不存在，则输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('250', ' 雷曼兔(csapc)', '<p>这次，OI山成为了雷曼兔那无尽的冒险传说的新舞台！传说OI山中埋藏着巨大的宝藏，伴随着这个传说的是一个迷题：最瑰丽的舞者将达至精灵世界的彼岸……<br />	经过仔细推敲，雷曼兔发现这是一个提示宝藏埋藏位置的谜语，在该谜语中指出了一个特定的路径，只有经过了该路径宝藏才会出现，具体情况如下：<br />	OI山的地势图可以看作一个N*N的数字矩阵，由1-N^2的数字组成（每个数字出现且仅出现一次），这些数字表示每个地点的地势高低。雷曼兔的出发点在最高的山顶处，并且每次雷曼兔可以从其当前所在的位置跳跃到任何一个比当前地点高度低的位置，假设雷曼兔该次跳跃从坐标(x1,y1)跳到了坐标(x2,y2)，则这次跳跃的华丽度定义为v=(|x1-x2|+|y1-y2|)^2。而开启宝藏秘密的路径就是从山顶不断跳跃直到山底（高度最低点）的华丽度总和最高的路径，而现在我们想要知道的是这个最高的华丽度总和是多少<br /></p>', '[{\"input\": \"2\\n3 2 \\n1 4\\n\", \"output\": \"9\\n\"}]', '1249', '<p>最优路径为4->3->2->1，得分为4+1+4=9。<br /></p>', '2016-08-18 14:24:46.000000', '', '10000', '128', '1', '0', '0', '1', '1', '第一行包括一个整数n(n<=50)表示地图的长宽。\\n接下来n行每行包括n个数表示每个地点的高度。\\n', '输出包括一个整数ans，表示从山顶到山底最高华丽度总和\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('251', ' 飞船控制站(csapc)', '<p>“神州七号”飞船已经圆满发射成功了，你可知道飞船的顺利运行离不开地面对其的测控吗？因而必须保证飞船运行的轨道被测控站的雷达所全部覆盖，才能正常接受和传输信号。而由于测控站所控制的范围越小，信号接收情况越好，技术难度也越低。所以我们希望在覆盖整个轨道的前提下，使得测控站所需控制的范围越小越好。由于条件限制，最多只能建立K个测控范围相同的测控站，而且并不是任何位置都可以建立测控站的，所以需要找出一种方案，使得所需测控的范围尽量小。虽然离真正的模型还有一定差距，但喜欢编程的你当然对此问题跃跃欲试了。<br />为了你的方便，已经帮你把地球抽象展开成一个N*2M的平面矩阵（N为奇数）。其中前M列是东半球，后M列是西半球，最中间的一行为赤道。为了简化问题，飞船的轨道可以看作是在一条穿越东西半球的经线上空（虽然实际并非如此），在此矩阵表示为第I列和第I+M列（1<=I<=M）两端对接形成的一个环。矩阵的每一个格子中可以建立一个监测站，但某些格子除外(比如其他国家的领土或是条件恶劣的地区)。假设测控半径为R，则每个测控站的控制范围可以向上向下各延伸R个格子，即总长度为2R+1的区间。测控范围的重叠并不会相互影响，并且显然有R>=0且2R+1<=N（因为地球是圆的，测控范围最多只能是一个半球）。<br />由于飞船有M条可选轨道，所以需要你计算出对于每条轨道，最小的测控半径是多少。注意由于控制的需要，对于任意一条轨道，在东半球的赤道上都必须建立一个测控站，并且保证在东半球的赤道上建站不会有限制。<br /></p>', '[{\"input\": \"5 2 4\\\\t\\n0110\\n0000\\n1100\\n0011\\n1000\\n\", \"output\": \"1\\n2\\n\"}]', '1250', '<p>对于轨道1:从第一行第一列开始向下可以展开为0010101001(首尾相连)<br />对于轨道2:从第一行第二列开始向下可以展开为1010001000(首尾相连)<br />两条轨道均把可选点全部建站即可。<br />数据规模:<br />对于30%的数据,有N,M<=15<br />对于60%的数据,有N,M<=100	<br />对于100%的数据,有N,M<=1000<br /></p>', '2016-08-18 14:24:46.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入的第一行为三个正整数N，M，K表示矩阵的大小以及测控站的数量。保证有（2<=N，M<=1000,2<=K<=2N，N为奇数）。接下来N行，每行2M个字符，如果是1则表示可以放置测控站，否则为0表示无法放置。（保证中间一行的前M个字符一定为1）\\n', '输出包含M行，每行包含一个正整数，第I行表示第I条轨道所需最小的测控半径R为多少(保证必然有解),轨道从左到右依次编号。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('252', ' 牛的RP', '<p>    天苍苍，野茫茫，JSZX的菜鸟们来到OI牧场旅游，看到了好多好多的牛。OI牧场所有的牛都觉得自己的Rp最高（简称RP牛），为此他们常争论不休。于是，他们让JSZX的菜菜们用最最朴素的方法找出这只RP牛。<br />    经过讨论，最菜的mmk想出了最朴素的方法：<br />我们要以cows的名字为线索，来找出RP牛。<br />首先，得到n头牛的名字清单（每头牛的名字是一个仅包含小写字母的字符串，且这些牛的读写方式比较特殊—从右到左），然后对每头牛进行检验，检验按照牛的读写方式进行。规则如下：<br />      1．Rp 牛的名字中必须有子串“jszxoier”<br />      2．将名字中的每个“cow”的替换为“bird”。<br />      3．计算Rp值：A为名字中子串“r”的个数；<br />                   B为名字中子串“p”的个数；<br />                   C为名字中字串“rp”的个数；<br />         Rp值即为5×A+5×B+20×C。<br />    最后输出RP牛的名字，若有多个RP牛，则输出名字最短的那个。<br />    假如你也是牛中一员，尽管你很不屑这样的水题，但是，你很想到RP牛那里分点Rp，所以你决定解决这道题，并算出RP牛的Rp是多少。<br /></p>', '[{\"input\": \"8\\nreioxzsjzmy\\nmmk\\njwc\\nzxf\\njwc\\nwangwei\\nxcy\\nyuhc\\n\", \"output\": \"reioxzsjzmy\\n5\\n\"}]', '1251', '<p></p>', '2016-08-18 14:24:54.000000', 'jszx\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行，一个数n（n<=3000）。\\n接下来的n行，每行一个字符串，长度<=300，数据保证存在RP牛。\\n', '共两行 \\n第一行为RP牛的名字\\n第二行为RP牛的Rp值\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('253', ' SuperBrother打鼹鼠', '<p>    在这个“打鼹鼠”的游戏中，鼹鼠会不时地从洞中钻出来，不过不会从洞口钻进去（鼹鼠真胆大……）。洞口都在一个大小为n(n<=1024)的正方形中。这个正方形在一个平面直角坐标系中，左下角为(0,0)，右上角为(n-1,n-1)。洞口所在的位置都是整点，就是横纵坐标都为整数的点。而SuperBrother也不时地会想知道某一个范围的鼹鼠总数。这就是你的任务。<br /></p>', '[{\"input\": \"4\\n1 2 2 5\\n2 0 0 2 3\\n3\\n\", \"output\": \"5\\n\"}]', '1252', '<p>水题一道。<br />所有数据均为随机生成，包括样例……<br /></p>', '2016-08-18 14:25:12.000000', 'gnaggnoyil\\n', '10000', '128', '1', '0', '0', '1', '1', '每个输入文件有多行。\\n第一行，一个数n，表示鼹鼠的范围。\\n以后每一行开头都有一个数m，表示不同的操作：\\nm=1，那么后面跟着3个数x,y,k(0<=x,y<n)，表示在点(x,y)处新出现了k只鼹鼠；\\nm=2，那么后面跟着4个数x1,y1,x2,y2(0<=x1<=x2<n,0<=y1<=y2<n)，表示询问矩形(x1,y1)-(x2,y2)内的鼹鼠数量；\\nm=3，表示老师来了，不能玩了。保证这个数会在输入的最后一行。\\n询问数不会超过10000，鼹鼠数不会超过maxlongint。\\n', '对于每个m=2，输出一行数，这行数只有一个数，即所询问的区域内鼹鼠的个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('254', ' 天才的记忆', '<p>从前有个人名叫W and N and B,他有着天才般的记忆力，他珍藏了许多许多的宝藏。在他离世之后留给后人一个难题(专门考验记忆力的啊！)，如果谁能轻松回答出这个问题，便可以继承他的宝藏。题目是这样的：给你一大串数字（编号为1到N，大小可不一定哦！），在你看过一遍之后，它便消失在你面前，随后问题就出现了，给你M个询问，每次询问就给你两个数字A,B，要求你瞬间就说出属于A到B这段区间内的最大数。一天，一位美丽的姐姐从天上飞过，看到这个问题，感到很有意思（主要是据说那个宝藏里面藏着一种美容水，喝了可以让这美丽的姐姐更加迷人），于是她就竭尽全力想解决这个问题。BUT，她每次都以失败告终，因为这数字的个数是在太多了！于是她请天才的你帮他解决。如果你帮她解决了这个问题，可是会得到很多甜头的哦！<br /></p>', '[{\"input\": \"6\\n34 1 8 123 3 2\\n4\\n1 2\\n1 5\\n3 4\\n2 3\\n\", \"output\": \"34\\n123\\n123\\n8\\n\"}]', '1253', '<p>对于30%的数据，1<=N<=10000,1<=M<=100<br />对于100%的数据，1<=N<=200000,1<=M<=10000.<br /></p>', '2016-08-18 14:25:12.000000', '', '10000', '128', '1', '0', '0', '2', '1', '一个整数N表示数字的个数,接下来一行为N个数。第三行读入一个M，表示你看完那串数后需要被提问的次数，接下来M行，每行都有两个整数A,B。\\n', '输出共M行，每行输出一个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('255', ' 河流', '<p>    几乎整个Byteland 王国都被森林和河流所覆盖。小点的河汇聚到一起，形成了稍大点的河。就这样，所有的河水都汇聚并流进了一条大河，最后这条大河流进了大海。这条大河的入海口处有一个村庄——Bytetown。<br />    在Byteland国，有n个伐木的村庄，这些村庄都座落在河边。目前在Bytetown，有一个巨大的伐木场，它处理着全国砍下的所有木料。木料被砍下后，顺着河流而被运到Bytetown的伐木场。Byteland 的国王决定，为了减少运输木料的费用，再额外地建造k个伐木场。这k个伐木场将被建在其他村庄里。这些伐木场建造后，木料就不用都被送到Bytetown了，它们可以在 运输过程中第一个碰到的新伐木场被处理。显然，如果伐木场座落的那个村子就不用再付运送木料的费用了。它们可以直接被本村的伐木场处理。<br />注：所有的河流都不会分叉，形成一棵树，根结点是Bytetown。<br />    国王的大臣计算出了每个村子每年要产多少木料，你的任务是决定在哪些村子建设伐木场能获得最小的运费。其中运费的计算方法为：每一吨木料每千米1分钱。<br />    编一个程序： <br />    1．从文件读入村子的个数，另外要建设的伐木场的数目，每年每个村子产的木料的块数以及河流的描述。 <br />    2．计算最小的运费并输出。<br /></p>', '[{\"input\": \"4 2 \\n1 0 1 \\n1 1 10 \\n10 2 5 \\n1 2 3 \\n\", \"output\": \"4\\n\"}]', '1254', '<p>树形动态规划<br />经典问题<br /></p>', '2016-08-18 14:25:19.000000', '安徽省芜湖市集训队练习题\\n\\nIOI 2005 Rivers(riv)\\n\\nDescription:Amber\\nData:Official\\nProgram:JackDavid127\\n', '10000', '128', '1', '0', '0', '2', '1', '    第一行包括两个数n（2<=n<=100），k（1<=k<=50,且k<=n）。n为村庄数，k为要建的伐木场的数目。除了Bytetown 外，每个村子依次被命名为 1，2，3……n，Bytetown被命名为0。\\n    接下来n行，每行3个整数：\\n    wi——每年 i 村子产的木料的块数。（0<=wi<=10000） \\n    vi——离 i 村子下游最近的村子。（即 i 村子的父结点）（0<=vi<=n） \\n    di——vi 到 i 的距离(千米)。（1<=di<=10000） \\n    保证每年所有的木料流到bytetown 的运费不超过2000,000,000分 \\n    50％的数据中n不超过20。\\n', '    输出最小花费，精确到分。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('256', 'VIJOS-P1519', '<p>蜗牛小笨（BEN）遇到一个类似这样的迷宫：<br />1<br />1 2<br />2 1 1<br />这个迷宫是一个等腰直角三角形，每个点上都有一个数字，蜗牛有一次使用魔法的机会。<br />蜗牛行进的方式：<br />1、行走：蜗牛进行行走，可以走到下一行、同一列或者下一行、右边一列。<br />2、魔法：只能使用一次，可以从第x行飞到第(x+1)行的任意一列。<br />要求：蜗牛所经之路的数字和最大。<br /></p>', '[{\"input\": \"3\\n1\\n1 2\\n2 1 1\\n\", \"output\": \"5\\n\"}]', '1255', '<p>样例解释：<br />三角形<br />1<br /> \\<br />1 \\->2  (正常行进)<br />    /<br />2<-/ 1     1   (魔法)<br />所以，答案是1+2+2=5<br />(看不清请复制到记事本中)<br /></p>', '2016-08-18 14:25:19.000000', 'LOGIC原创，第一次出题，这个测试数据很多哦\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行是一个数n，代表这个三角形的腰的长度。\\n第2～(n+1)行中，第m行有(m-1)个数，代表这些数字。\\n\\n输入数据保证：\\n0<n<300\\n各个数字不超过2*maxlongint\\n', '一个数：最大的数字和\\n\\n输出数据保证不超过2*maxlongint\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('257', ' 跳舞', '<p>    一次舞会有n个男孩和n个女孩。每首曲子开始时，所有男孩和女孩恰好配成n对跳交谊舞。每个男孩都不会和同一个女孩跳两首（或更多）舞曲。<br />    有一些男孩女孩相互喜欢，而其他相互不喜欢（不会“单向喜欢”）。每个男孩最多只愿意和k个不喜欢的女孩跳舞，而每个女孩也最多只愿意和k个不喜欢的男孩跳舞。<br />    给出每对男孩女孩是否相互喜欢的信息，舞会最多能有几首舞曲？<br /></p>', '[{\"input\": \"Input 1:\\n3 0\\nYYY\\nYYY\\nYYY\\n\\nInput 2:\\n3 0\\nYYY\\nYYN\\nYNY\\n\\nInput 3:\\n2 0\\nYN\\nYN\\n\\nInput 4:\\n2 1\\nYN\\nYN\\n\", \"output\": \"Output 1:\\n3\\n\\nOutput 2:\\n2\\n\\nOutput 3:\\n0\\n\\nOutput 4:\\n1\\n\"}]', '1256', '<p>对于30%的数据，n<=5，k<=2；<br />对于全部的数据，n<=50，k<=30；<br /></p>', '2016-08-18 14:25:27.000000', 'NOI2009重庆市代表队选拔赛第三题\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行包含两个整数n和k。以下n行每行包含n个字符，其中第i行第j个字符为\'Y\'当且仅当男孩i和女孩j相互喜欢。\\n', '仅一个数，即舞曲数目的最大值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('258', ' 贪吃的九头龙', '<p>    传说中的九头龙是一种特别贪吃的动物。虽然名字叫“九头龙”，但这只是说它出生的时候有九个头，而在成长的过程中，它有时会长出很多的新头，头的总数会远大于九，当然也会有旧头因衰老而自己脱落。<br />    有一天，有M个脑袋的九头龙看到一棵长有N个果子的果树，喜出望外，恨不得一口把它全部吃掉。可是必须照顾到每个头，因此它需要把N个果子分成M组，每组至少有一个果子，让每个头吃一组。<br />    这M个脑袋中有一个最大，称为“大头”，是众头之首，它要吃掉恰好K个果子，而且K个果子中理所当然地应该包括唯一的一个最大的果子。果子由N-1根树枝连接起来，由于果树是一个整体，因此可以从任意一个果子出发沿着树枝“走到”任何一个其他的果子。<br />    对于每段树枝，如果它所连接的两个果子需要由不同的头来吃掉，那么两个头会共同把树枝弄断而把果子分开；如果这两个果子是由同一个头来吃掉，那么这个头会懒得把它弄断而直接把果子连同树枝一起吃掉。当然，吃树枝并不是很舒服的，因此每段树枝都有一个吃下去的“难受值”，而九头龙的难受值就是所有头吃掉的树枝的“难受值”之和。<br />    九头龙希望它的“难受值”尽量小，你能帮它算算吗？<br /></p>', '[{\"input\": \"8 2 4 \\n1 2 20 \\n1 3 4   \\n1 4 13 \\n2 5 10 \\n2 6 12 \\n3 7 15 \\n3 8 5\\n\", \"output\": \"4\\n\"}]', '1257', '<p>树形动态规划<br /></p>', '2016-08-18 14:25:27.000000', '安徽省芜湖市第二十七中学测试题\\n\\nNOI 2002 贪吃的九头龙(dragon)\\n\\nDescription:Official\\nData:Official\\nProgram:Conve', '10000', '128', '1', '0', '0', '1', '1', '    输入的第1行包含三个整数N(1<=N<=300)，M(2<=M<=N)，K(1<=K<=N)。N个果子依次编号1,2,...,N，且最大的果子的编号总是1。第2行到第N行描述了果树的形态，每行包含三个整数a(1<=a<=N)，b(1<=b<=N)，c(0<=c<=105)，表示存在一段难受值为c的树枝连接果子a和果子b。\\n', '    输出文件dragon.out仅有一行，包含一个整数，表示在满足“大头”的要求的前提下，九头龙的难受值的最小值。如果无法满足要求，输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('259', ' 最小监视代价', '<p>由于yxy小朋友做了一些不该做的事，他被jzp关进了一个迷宫里。由于jzp最近比较忙，疏忽大意了一些，yxy可以在迷宫中任意走动。整个迷宫可以被看作是一个无向图。迷宫中有一些结点有传送点，可以让他逃离这个迷宫。jzp发明了一种机器人，可以监视迷宫中的道路，被监视的道路yxy不能通过，我们简单的认为监视一条道路的代价即为这条道路的长度。现在jzp正在忙，请你编一个程序算出使yxy无法逃离迷宫的最小监控总代价。(yxy一开始在1号结点)<br /></p>', '[{\"input\": \"5 5\\n1 2 1\\n1 3 2\\n2 5 3\\n2 3 3\\n3 4 2\\n2\\n4 5\\n\", \"output\": \"3\\n\"}]', '1258', '<p>n<100,e<300,m<n<br />1<=a,b<=n<br />w<=maxint<br /></p>', '2016-08-18 14:25:27.000000', '经典问题改编\\n', '10000', '128', '1', '0', '0', '1', '1', '第1行：两个自然数n和e，分别表示迷宫的节点数和边数。\\n第2至e+1行：每行三个自然数a、b和w，表示a和b之间有一条道路，长度为w。\\n第e+2行：一个自然数m，表示有传送点结点的个数。\\n第e+3行：m个自然数，表示有传送点的结点。\\n', '一个自然数，表示最小监视总代价。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('260', ' 配对', '<p>你有n个整数Ai和n个整数Bi。你需要把它们配对，即每个Ai恰好对应一个Bp[i]。要求所有配对的整数差的绝对值之和尽量小，但不允许两个相同的数配对。例如A={5,6,8}，B={5,7,8}，则最优配对方案是5←→8, 6←→5, 8←→7，配对整数的差的绝对值分别为3, 1, 1，和为5。注意，5←→5，6←→7，8←→8是不允许的，因为相同的数不许配对。 <br /></p>', '[{\"input\": \"3\\n5 5\\n6 7\\n8 8\\n\", \"output\": \"5\\n\"}]', '1259', '<p>【数据规模】 <br />30%的数据满足：n <= 10000 <br />100%的数据满足：1 <= n <= 100000，Ai和Bi均为1到1000000之间的整数。<br /></p>', '2016-08-18 14:25:27.000000', '四川08省选\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行为一个正整数n，接下来是n行，每行两个整数Ai和Bi，保证没有任何两行完全相同，即对于不同的i和j，不可能有Ai=Aj或Bi=Bj。\\n', '输出一个整数，即配对整数的差的绝对值之和的最小值。如果无法配对，输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('261', ' 食物链', '<p>    动物王国中有三类动物 A,B,C，这三类动物的食物链构成了有趣的环形。A吃B，B吃C，C吃A。<br />    现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。<br />    有人用两种说法对这N个动物所构成的食物链关系进行描述：<br />    第一种说法是“1 X Y”，表示X和Y是同类。<br />    第二种说法是“2 X Y”，表示X吃Y。<br />    此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。<br />    1） 当前的话与前面的某些真的话冲突，就是假话；<br />    2） 当前的话中X或Y比N大，就是假话；<br />    3） 当前的话表示X吃X，就是假话。<br />    你的任务是根据给定的N（1<=N<=50,000）和K句话（0<=K<=100,000），输出假话的总数。<br /></p>', '[{\"input\": \"输入文件   对7句话的分析 \\n100 7\\n1 101 1    假话 \\n2 1 2      真话 \\n2 2 3      真话 \\n2 3 3      假话 \\n1 1 3      假话 \\n2 3 1      真话 \\n1 5 5      真话 \\n\", \"output\": \"3\\n\"}]', '1260', '<p>并查集<br /></p>', '2016-08-18 14:25:38.000000', '安徽省芜湖市第二十七中学测试题\\n\\nNOI 2001 食物链(eat)\\n\\nDescription:Official\\nData:Official\\nProgram:JackDavid12', '10000', '128', '1', '0', '0', '1', '1', '    第一行是两个整数N和K，以一个空格分隔。\\n    以下K行每行是三个正整数D，X，Y，两数之间用一个空格隔开，其中 D 表示说法的种类。\\n    若D=1，则表示X和Y是同类。\\n    若D=2，则表示X吃Y。\\n', '    只有一个整数，表示假话的数目。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('262', ' 逆序对加强版', '<p>    SORT公司是一个专门为人们提供排序服务的公司，该公司的宗旨是：“顺序是最美丽的”。他们的工作是通过一系列移动，将某些物品按顺序摆好。他们的服务是通过工作量来计算的，即移动东西的次数。所以，在工作前必须先考察工作量，以便向用户提出收费数目。<br />    用户并不需要知道精确的移动次数，实质上，大多数人都是凭感觉来认定这一列物品的混乱程度，根据SORT公司的经验，人们一般是根据“逆序对”的数目多少来称呼这一序列的混乱程度。假设我们将序列中第i件物品的参数定义为Ai，那么排序就是指将Ai，…，An从小到大排序。若i<j且Ai>Aj，则<i,j>就为一个“逆序对”。    <br />    例如，数组（3，1，4，5，2）的“逆序对”有<3，1>，<3，2>，<4，2>，<5，2>，共4个<br />		 <br />    SORT公司请你写一个程序，在尽量短的时间内，统计出“逆序对”的数目。<br /> [输入]n，A1，…，An，1<n<1000000，Ai为小于1000000的正整数,请注意数据大小，模拟绝对会爆！<br /> [输出]数列A1，…，An的“逆序对”数目，即“逆序数”<br /> [输入输出样例]<br />    输入：5  3  1  4  5  2<br />    输出：4<br /></p>', '[{\"input\": \"\", \"output\": \"\"}]', '1261', '<p></p>', '2016-08-18 14:25:38.000000', 'nimo出品\\n', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('263', ' 月亮之眼', '<p>吉儿是一家古董店的老板娘，由于她经营有道，小店开得红红火火。昨天，吉儿无意之中得到了散落民间几百年的珍宝—月亮之眼。吉儿深知“月亮之眼”价值连城：它是由许多珍珠相连而成的，工匠们用金线连接珍珠，每根金线连接两个珍珠；同时又对每根金线染上两种颜色，一半染成银白色，一半染成黛黑色。由于吉儿自小熟读古籍，所以还晓得“月亮之眼”的神秘传说：“月亮之眼”原是一个古代寺庙的宝物，原本是挂在佛堂的一根顶梁柱上的，整个宝物垂直悬挂，所有珍珠排成一线，且都镶嵌在柱子里，而每一根金线又都是绷紧的，并且金线的银白色一端始终在黛黑色一端的上方；然而，在一个月圆之夜，“月亮之眼”突然从柱里飞出，掉落下来，宝物本身完好无损，只是僧侣们再也无法以原样把“月亮之眼”嵌入柱子中了。吉儿望着这个神秘的宝物，回忆着童年读到的传说，顿时萌发出恢复“月亮之眼”的冲动，但是摆弄了几天依旧没有成功。<br />现在，要麻烦您来帮助吉儿完成这项使命。<br />您要设计一个程序，对于给定的“月亮之眼”进行周密分析，然后给出这串宝物几百年前嵌在佛堂顶梁柱上的排列模样。给定的“月亮之眼”有N个珍珠和P根金线，所有珍珠按一定顺序有了一个序号：1、2…、N。<br /></p>', '[{\"input\": \"9 9\\n1 2 3\\n2 3 5\\n2 7 1\\n4 5 4\\n5 6 1\\n5 9 1\\n6 7 1\\n7 8 3\\n9 8 4\\n\", \"output\": \"2\\n5\\n10\\n0\\n4\\n5\\n6\\n9\\n5\\n\"}]', '1262', '<p></p>', '2016-08-18 14:25:48.000000', 'IOI99选拔赛试题(ctsc)第二天 problem 2\\n', '1000', '128', '1', '0', '0', '2', '1', '输入数据包含一个“月亮之眼”的特征描述：\\n文件第一行有两个整数N和P，其中N表示宝物中的珍珠个数，P表示宝物中的金线根数；\\n以下P行描述珍珠连接情况：\\n文件第I+1行有三个整数，Ri1,Ri2,Li。其中Ri1表示第I根金线的银白色一端连接的珍珠序号；Ri2表示第I根金线的黛黑色一端连接的珍珠序号；Li表示第I根金线的长度。\\n', '由于珍珠尺寸很小，所以几个珍珠可以同时镶嵌在一个位置上。\\n您的输出数据描述的是“月亮之眼”各个珍珠在顶梁柱上的位置，输出文件共N行：\\n第I行，一个整数S，它表示标号为I的珍珠在顶梁柱上距离最高位置珍珠的距离。\\n注意：若无解则输出仅一行，包含一个整数“-1”。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('264', ' 极值问题', '<p>已知m、n为整数，且满足下列两个条件：<br />    ① m、n∈1，2，…，K，（1≤K≤10^9）<br />    ② (n^ 2－mn－m^2)^2＝1<br />编一程序，对给定K，求一组满足上述两个条件的m、n，并且使m^2＋n^2的值最大。例如，若K＝1995，则m＝987，n＝1597，则m、n满足条件，且可使m^2＋n^2的值最大。<br /></p>', '[{\"input\": \"1995\\n\", \"output\": \"3524578\\n\"}]', '1263', '<p>纯数学问题。<br /></p>', '2016-08-18 14:25:48.000000', '', '10000', '128', '1', '0', '0', '1', '1', '输入仅一行，K的值。\\n', '输出仅一行，m^2＋n^2的值。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('265', ' GF', '<p>sqybi现在有m块大洋,他也通过一段时间的努力攒到了r的人品(这次为模拟赛出题也攒rp哦~~).他凭借这些大洋和人品可以泡到一些MM.他想知道,自己泡到最多的MM花费的最少时间是多少.<br />注意sqybi在一个时刻只能去泡一个MM--如果同时泡两个或以上的MM的话,她们会打起来的...<br /></p>', '[{\"input\": \"4\\n1 2 5\\n2 1 6\\n2 2 2\\n2 2 3\\n5 5\\n\", \"output\": \"13\\n\"}]', '1264', '<p>sqybi说:如果题目里说的都是真的就好了...<br />sqybi还说,如果他没有能力泡到任何一个MM,那么他就不消耗时间了(也就是消耗的时间为0),他要用这些时间出七夕比赛的题来攒rp...<br /></p>', '2016-08-18 14:25:48.000000', '(本人不想让大家错过这个经典题目,所以...就...)\\n(非常感谢出题人...)\\n来源：MM群2007七夕模拟赛\\n\\n(出题人：sqybi GG)\\n', '10000', '128', '1', '0', '0', '2', '1', '输入的第一行是n,表示sqybi看中的MM数量.\\n接下来有n行,依次表示编号为1, 2, 3, ..., n的一个MM的信息.每行表示一个MM的信息,有三个整数:rmb, rp和time.\\n最后一行有两个整数,分别为m和r.\\n', '你只需要输出一行,其中有一个整数,表示sqybi在保证MM数量的情况下花费的最少总时间是多少.\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('266', ' 逆转，然后再见', '<p>    上届的高三在这个暑假终于要到各个城市奔向他们的大学生活了。奇怪的是学校这次异<br />常阔气，说要用三台车子去载他们上学。上届高三的师兄们异常兴奋……可惜的是临行的时<br />候，学校终于露出它“狰狞”的面孔：<br />        一、油费要学生自己给<br />        二、去第k 个城市的条件是，前k-1 个城市都要被去过<br />        三、同时只能有一部车子在动<br />    师兄们也只能不断地锤胸口……<br />    但是改乘飞机已经来不及了……<br />    他们只好利用电脑组的优势去编一个最短路径以减少自己付的油费。<br />（P.S．没有人喜欢走回头路……）<br /></p>', '[{\"input\": \"5\\n1 1 1 2\\n33 33 33\\n33 33\\n33\\n\", \"output\": \"36\\n\"}]', '1265', '<p></p>', '2016-08-18 14:25:48.000000', '牛头人族长\\n', '1000', '128', '1', '0', '0', '3', '1', '    第一行一个数N，代表一共要去多少个城市。\\n    下面N-1 行，对于第I 行，有I-1 个数，表示第I 个城市分别和第I+1，I+2,I+3，……，N 的距离\\n', '    一行，最短的路程\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('267', ' 奶牛排队', '<p>奶牛排队<br />奶牛在熊大妈的带领下排成了一条直队。<br />显然，不同的奶牛身高不一定相同……<br />现在，奶牛们想知道，如果找出一些连续的奶牛，要求最左边的奶牛A是最矮的，最右边的B是最高的，且B高于A奶牛，且中间如果存在奶牛，则身高不能和A、B奶牛相同，的这样的一些奶牛最多会有多少头。<br />从左到右给出奶牛的身高，请告诉它们符合条件的最多的奶牛数（答案可能是零、二，但不会是一）。<br /></p>', '[{\"input\": \"样例\\n输入\\n5\\n1\\n2\\n3\\n4\\n1\\n\", \"output\": \"样例\\n输出\\n4\\n\"}]', '1266', '<p></p>', '2016-08-18 14:25:48.000000', '', '10000', '128', '1', '0', '0', '2', '1', '输入\\n第一行一个数N（2<=N<=100000），表示奶牛的头数。\\n接下来N个数，每行一个数，从上到下表示从左到右奶牛的身高（1<=身高<=maxlongint）。\\n', '输出\\n一行，表示最多奶牛数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('268', ' 中位数', '<p>给出1~n的一个排列，统计该排列有多少个长度为奇数的连续子序列的中位数是b。中位数是指把所有元素从小到大排列后，位于中间的数。<br /></p>', '[{\"input\": \"Input 1:\\n5 4\\n1 2 3 4 5\\n\\nInput 2:\\n6 3\\n1 2 4 5 6 3\\n\\nInput 3:\\n7 4\\n5 7 2 4 3 1 6\\n\", \"output\": \"Output 1:\\n2\\n\\nOutput 2:\\n1\\n\\nOutput 3:\\n4\\n\"}]', '1267', '<p>第三个样例解释：{4}, {7,2,4}, {5,7,2,4,3}和{5,7,2,4,3,1,6}。<br />对于40%的数据，n<=300;<br />对于80%的数据，n<=25000;<br />对于全部的数据，n<=100000。<br /></p>', '2016-08-18 14:25:58.000000', 'NOI2009重庆市代表队选拔赛第一题\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行为两个正整数n和b ，第二行为1~n 的排列。\\n', '输出一个整数，即中位数为b的连续子序列个数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('269', ' 我是打饭的', '<p>上午的训练结束了，THU ACM小组集体去吃午餐，他们一行N人来到了著名的十食堂。这里有两个打饭的窗口，每个窗口同一时刻只能给一个人打饭。由于每个人的口味（以及胃口）不同，所以他们要吃的菜各有不同，打饭所要花费的时间是因人而异的。另外每个人吃饭的速度也不尽相同，所以吃饭花费的时间也是可能有所不同的。<br />THU ACM小组的吃饭计划是这样的：先把所有的人分成两队，并安排好每队中各人的排列顺序，然后一号队伍到一号窗口去排队打饭，二号队伍到二号窗口去排队打饭。每个人打完饭后立刻开始吃，所有人都吃完饭后立刻集合去六教地下室进行下午的训练。<br />现在给定了每个人的打饭时间和吃饭时间，要求安排一种最佳的分队和排队方案使得所有人都吃完饭的时间尽量早。<br />假设THU ACM小组在时刻0到达十食堂，而且食堂里面没有其他吃饭的同学（只有打饭的师傅）。每个人必须而且只能被分在一个队伍里。两个窗口是并行操作互不影响的，而且每个人打饭的时间是和窗口无关的，打完饭之后立刻就开始吃饭，中间没有延迟。<br />现在给定N个人各自的打饭时间和吃饭时间，要求输出最佳方案下所有人吃完饭的时刻。<br /></p>', '[{\"input\": \"5\\n2 2\\n7 7\\n1 3\\n6 4\\n8 5\\n\", \"output\": \"17\\n\"}]', '1268', '<p>所有输入数据均为不超过200的正整数。<br />方案如下：<br />窗口1：			窗口2：<br />7 7		         1 3<br />6 4			 8 5<br />			 2 2<br /></p>', '2016-08-18 14:25:58.000000', 'TJU\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行一个整数N，代表总共有N个人。\\n以下N行，每行两个整数 Ai，Bi。依次代表第i个人的打饭时间和吃饭时间。\\n', '一个整数T，代表所有人吃完饭的最早时刻。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('270', ' 树网的核加强版', '<p></p>', '[{\"input\": \"\", \"output\": \"\"}]', '1269', '<p></p>', '2016-08-18 14:25:58.000000', '', '10000', '128', '1', '0', '0', '1', '1', '', '', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('271', ' 对称的正方形', '<p>  Orez很喜欢搜集一些神秘的数据，并经常把它们排成一个矩阵进行研究。最近，Orez又得到了一些数据，并已经把它们排成了一个n行m列的矩阵。通过观察，Orez发现这些数据蕴涵了一个奇特的数，就是矩阵中上下对称且左右对称的正方形子矩阵的个数。<br />  Orez自然很想知道这个数是多少，可是矩阵太大，无法去数。只能请你编个程序来计算出这个数。<br /></p>', '[{\"input\": \"5 5\\n4 2 4 4 4 \\n3 1 4 4 3 \\n3 5 3 3 3 \\n3 1 5 3 3 \\n4 2 1 2 4 \\n\", \"output\": \"27\\n\"}]', '1270', '<p>对于30%的数据  n，m≤100<br />对于100%的数据  n，m≤1000 ，矩阵中的数的大小≤10^9<br /></p>', '2016-08-18 14:25:58.000000', 'NOI2009浙江省省选第二试\\n', '10000', '128', '1', '0', '0', '1', '1', '输入的第一行为两个整数n和m。接下来n行每行包含m个正整数，表示Orez得到的矩阵。\\n', '输出中仅包含一个整数answer，表示矩阵中有answer个上下左右对称的正方形子矩阵。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('272', ' 华丽の礼', '<p>基德终于来到了目标——潘多拉之泪的房间外。而OIBH在房间门口设定了他们的最后一道难题：他们留了一张白纸，以及多种颜色的A染料以及B染料。A染料是万能染料，可以覆盖任何颜色，B染料则只能覆盖一定的颜色。A、B染料都是无限并且齐全的，但是基德只能使用B染料，A染料是机器用的。基德将按下白纸旁的机关，机器会对白纸利用A染料进行N次染色，第i次染以ai,bi为左下角，ci,bi为右上角的区域。基德必须利用B染料把经过机器染色的纸全部染成一种颜色。他现在就站在这张被OIBH进行了N次染色的白纸面前。而他已经知道每种颜色的B染料所能覆盖的颜色。请问，他最终究竟应该把纸染成什么颜色？注意：机器用过的颜色基德才能用，任意一种颜色都能覆盖自己，基德不能用机器没有用过的颜色。当然，白色是可以用的。<br />[默认白色编号为1，一开始白纸即为白色]<br /></p>', '[{\"input\": \"20 20 3\\n2 2 18 18 2\\n0 8 19 19 3\\n8 0 10 19 4\\n1 1 2 \\n2 1 4\\n3 3 3 2 1\\n4 1 1\\n\", \"output\": \"3\\n\"}]', '1271', '<p>对于10%的数据,1<=n<=10<br />对于100%的数据,1<=n<=1000<br />对于所有的数据,1<=color<=100<br />a,b<=1000。<br />【样例解释】<br />[IMG]http://b24.photo.store.qq.com/http_imgload.cgi?/rurl4_b=f7e587e7f0b018c41620a6de79ee10de684ebcfbe562a0c917e3789ed251c422cfcc2bdeda97d0ae4995dd07abf7335a8b76694ca3d23d17ac501617faed3273c21fe5590e7bdb30f874c10d32b742a6457f26dd[/IMG]<br />如图即为经过3次染色之后的白纸<br />其中2=红色 3=黄色 4=绿色<br />由题意知1可以覆盖颜色1和2<br />2可以覆盖2和4<br />3可以覆盖3、2和1<br />4只能覆盖1<br />即我们要先用2把颜色4覆盖，再把整张纸覆盖上3.<br /></p>', '2016-08-18 14:26:20.000000', '', '10000', '128', '1', '0', '0', '2', '1', '第1行3个整数a,b,n。表示机器进行n次染色，白纸的左上角为(0，a)，右下角为（b，0）\\n第2行到第n+1行，每行5个整数，表示ai,bi,ci,di以及此次染色的颜色编号colori。\\n接下去若干行，每行第一个整数c表示这种颜色的编号，第二个整数p表示它能覆盖的颜色个数，接下去p个整数表示它能覆盖的p种颜色的编号。\\n设白纸左下角为(0,0)。\\n', '一个整数，表示最终应该染成的颜色的编号。如果有多解，输出最小的那个。如果无解，输出Escape。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('273', ' 超级教主', '<p>　　LHX教主很能跳，因为Orz他的人太多了。教主跳需要消耗能量，每跳1米就会消耗1点能量，如果教主有很多能量就能跳很高。<br />　　教主为了收集能量，来到了一个神秘的地方，这个地方凡人是进不来的。在这里，教主的正上方每100米处就有一个能量球（也就是这些能量球位于海拔100，200，300……米处），每个能量球所能提供的能量是不同的，一共有N个能量球（也就是最后一个能量球在N×100米处）。教主为了想收集能量，想跳着吃完所有的能量球。教主可以自由控制他每次跳的高度，接着他跳起把这个高度以下的能量球都吃了，他便能获得能量球内的能量，接着吃到的能量球消失。教主不会轻功，教主不会二段跳，所以教主不能因新吃到的能量而变化此次跳跃的高度。并且教主还是生活在地球上的，所以教主每次跳完都会掉下来。<br />　　问教主若要吃完所有的能量球，最多还能保留多少能量。<br /></p>', '[{\"input\": \"3 200\\n200 200 200\\n\", \"output\": \"400\\n\"}]', '1272', '<p>　　第1次跳100米，得到200能量，消耗100能量，所以落地后拥有300能量。<br />　　第2次跳300米，吃到剩下的第3棵能量球，消耗拥有的300能量，得到400能量。<br />　　若第1次跳200米，第2次跳300米，最后剩余300能量。<br /></p>', '2016-08-18 14:26:20.000000', '', '10000', '128', '1', '0', '0', '1', '1', '　　第1行包含两个[b]正整数[/b]N，M，表示了能量球的个数和LHX教主的初始能量。\\n　　第2行包含N个[b]非负整数[/b]，从左到右第I个数字依次从下向上描述了位于I×100米位置能量球包含的能量，整数之间用空格隔开。\\n', '　　仅包括一个[b]非负整数[/b]，为教主吃完所有能量球后最多保留的能量。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('274', ' 文件查找(HOI)', '<p>	WINDOWS是一个很庞大的操作系统（当然啦，看占的硬盘空间就知道了），比如说，它的文件查找系统。现在，请你用PASCAL或者C或者C++模拟一下这个操作过程。为了降低难度，所有的文件夹名和文件名都是小写和数字，且不考虑盘符，而且也不会有WINDOWS禁止出现在文件名中的字符。同时，为了增加难度，每个文件夹内可能有重名的文件（夹）。当然，不能让用户等太久，你的程序要在1秒内找到用户要的文件。<br /></p>', '[{\"input\": \"【样例输入1】\\nhoi.pas\\nhoi 2\\nhoi 0\\nhoi.pas\\nhoi.pas\\n\\n【样例输入2】\\nchroi.pas\\nchroi 2\\nhoi 1\\nchroi.pas\\nchroi 1\\nhoi.pas\\n\", \"output\": \"【样例输出1】\\nhoi\\\\hoi.pas\\nhoi.pas\\n\\n【样例输出2】\\nchroi\\\\hoi\\\\chroi.pas\\n\"}]', '1273', '<p>【数据范围】<br />	对于50%的数据，输入文件的行数小于100。<br />	对于100%的数据，输入文件的行数小于10000，且每行均少于25个字符。<br /></p>', '2016-08-18 14:26:50.000000', 'HOI 2009\\n', '10000', '128', '1', '0', '0', '1', '1', '	输入文件filesearch.in包含多行，第一行是用户查找的文件名，该文件名不会含WINDOWS禁止出现在文件名中的字符，一定带符号”.”；第二行开始输入一个或多个文件夹的相关信息。文件夹的相关信息用以下格式输入：\\n	文件夹名（中间无空格，且无符号“.”（小数点））+ 一个空格+文件夹内的文件数（包括文件夹），如果文件夹内还有子文件夹，换行后先输入该子文件夹内容再输入父文件夹内的其他文件夹或文件。每个文件名都带符号“.”。具体请看样例。\\n', '	输出所查找文件的路径，一定在至少一个文件夹的目录下。以WINDOWS地址的表示方法表示（“\\”），如果有多个文件，按输入时的顺序输出。每输出一个文件的路径换一行。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('275', ' 开心农场(HOI)', '<p>	这个夏天，与众不同。QQ空间也引入了最近流行的社区交互类游戏《开心农场》。自然而然地，Chroi也成为了众多农场主的一员。可是Chroi整个暑假忙于OI，没什么时间照顾农场，这就需要你的帮助了。他可以告诉你他每天那些时间可以上线，你要做的就是告诉他该天最多可赚多少钱（为了降低难度，假设腾讯每天晚上0:00清空还没收获的作物，而且由于Chroi的农场等级比较低，所以只能种单季作物（就是只能收获一次的））。<br />	在开心农场中，每个用户都有一定数目的土地，每次上线可以做的事是在土地上摘果实、卖果实、种下种子，每块土地上只能种一种作物，每块土地各自独立。<br />	假设Chroi每次只能上线1秒，他能在瞬间做完所有他想做的事，所以你的程序要在一秒内得出结果。而且如果Chroi在一天的最后时刻上线，那他此刻做的事算第二天的。（比如时间为24，那他在24时刻做的事算第二天的0时刻做的。）<br /></p>', '[{\"input\": \"【样例输入1】\\n6 3 24 4\\n10 6 20\\n15 3 18\\n11 3 19\\n0 6 12 18\\n\\n【样例输入2】\\n1 1 24 2\\n10 6 5\\n0 6\\n\", \"output\": \"【样例输出1】\\n180\\n（共种了3次第一种作物，每次种6块土地，收获了3次，每次收获6块土地，最后一次上线18的时候只收获，不种植（之后不能再收获，再种植没时间收获，只能亏钱））\\n\\n【样例输出2】\\n0\\n（种第一种作物还亏钱，不如不种）\\n\"}]', '1274', '<p>【数据范围】<br />	对于30%的数据，0<n<=10,0<m<=50,0<k<=t<=50。<br />	对于50%的数据，0<n<=20,0<m<=500,0<k<=t<=500。<br />	对于100%的数据，0<n<=50,0<m<=3000,0<k<=t<=3000，最后输出的数<maxlongint。<br /></p>', '2016-08-18 14:26:50.000000', 'HOI 2009\\n', '10000', '128', '1', '0', '0', '1', '1', '	输入文件包含多行，第一行有三个正整数n,m,t,k，分别表示Chroi的农场中有n块地，共有m种作物可以选择，一天的时间t，有k个时刻Chroi可以上线。\\n	接下来的m行每行输入三个正整数，第一个数字表示种子价格，第二个数字表示种子成熟时间（小于t），第三个数字表示成熟后果实的售价。再次提示，这些都是整数。\\n	再接下来的一行有k个自然数，保证该整数为0,1,2...t-1中的一个，为Chroi可以上线的时间。这k个自然数不会重复。\\n	输入文件到此结束。\\n', '	输出文件只有一个整数，表示Chroi每天可以获得的最大金钱数。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('276', ' 精卫填海(HOI)', '<p>【版权说明】<br />	本题为改编题。<br />【问题描述】<br />	发鸠之山，其上多柘木。有鸟焉，其状如乌，文首，白喙，赤足，名曰精卫，其名自詨。是炎帝之少女，名曰女娃。女娃游于东海，溺而不返，故为精卫。常衔西山之木石，以堙于东海。——《山海经》<br />	精卫终于快把东海填平了！只剩下了最后的一小片区域了。同时，西山上的木石也已经不多了。精卫能把东海填平吗？<br />	事实上，东海未填平的区域还需要体积为v的木石才可以填平，而西山上的木石还剩下n块，每块的体积和把它衔到东海需要的体力分别为k和m。精卫已经填海填了这么长时间了，她也很累了，她还剩下的体力为c。<br /></p>', '[{\"input\": \"【样例输入1】\\n100 2 10\\n50 5\\n50 5\\n\\n【样例输入2】\\n10 2 1\\n50 5\\n10 2\\n\", \"output\": \"【样例输出1】\\n0\\n\\n【样例输出2】\\nImpossible\\n\"}]', '1275', '<p>【数据范围】<br />	对于20%的数据，0<n<=50。<br />	对于50%的数据，0<n<=1000。<br />	对于100%的数据，0<n<=10000，所有读入的数均属于[0,10000]，最后结果<=c。<br /></p>', '2016-08-18 14:26:50.000000', 'HOI 2009\\n\\n祝大家在NOIP2009都取得好成绩！\\n', '10000', '128', '1', '0', '0', '1', '1', '	输入文件的第一行是三个整数：v、n、c。\\n	从第二行到第n+1行分别为每块木石的体积和把它衔到东海需要的体力。\\n', '	输出文件只有一行，如果精卫能把东海填平，则输出她把东海填平后剩下的最大的体力，否则输出’Impossible’（不带引号）。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('277', ' 爱在心中', '<p>“每个人都拥有一个梦，即使彼此不相同，能够与你分享，无论失败成功都会感动。爱因为在心中，平凡而不平庸，世界就像迷宫，却又让我们此刻相逢Our Home。”<br />在爱的国度里有N个人，在他们的心中都有着一个爱的名单，上面记载着他所爱的人（不会出现自爱的情况）。爱是具有传递性的，即如果A爱B，B爱C，则A也爱C。<br />如果有这样一部分人，他们彼此都相爱，则他们就超越了一切的限制，用集体的爱化身成为一个爱心天使。<br />现在，我们想知道在这个爱的国度里会出现多少爱心天使。而且，如果某个爱心天使被其他所有人或爱心天使所爱则请输出这个爱心天使是由哪些人构成的，否则输出-1。<br /></p>', '[{\"input\": \"样例输入1：\\n\\n6 7\\n1 2\\n2 3\\n3 2\\n4 2\\n4 5\\n5 6\\n6 4\\n\\n\\n样例输入2：\\n\\n3 3\\n1 2\\n2 1\\n2 3\\n\", \"output\": \"样例输出1：\\n\\n2\\n2 3\\n\\n样例输出2：\\n\\n1\\n-1\\n\"}]', '1276', '<p>对于40%的数据   N<=10       M<=100<br />对于80%的数据   N<=100      M<=1000<br />对于100%的数据  N<=1000     M<=10000<br /></p>', '2016-08-18 14:26:50.000000', 'Cai0715 原创\\nNOIP 2009·Dream Team 模拟赛 第一期 第四题\\n', '10000', '128', '1', '0', '0', '3', '1', '第1行，两个数N、M，代表爱的国度里有N个人，爱的关系有M条。\\n第2到第M+1行，每行两个数A、B，代表A爱B。\\n', '第1行，一个数，代表爱的国度里有多少爱心天使。\\n第2行，如果某个爱心天使被其他所有人和爱心天使所爱则请输出这个爱心天使是由哪些人构成的（从小到大排序），否则输出-1。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('278', ' 看樱花', '<p>“妹妹背着洋娃娃，走到花园看樱花” – 我整个人都Hello kitty了。<br />好了，闲话就说到这里，已知：这是一个1×N的花园（虽然比较奇怪），被分成了N个格子，每个格子里有一种神奇的樱花（我也不知道为什么神奇，反正洋娃娃看着高兴），看到第i个格子上的花洋娃娃会得到不同的满足度Ci（每个花的满足度只被计算一次）。现在妹妹会背着洋娃娃从任意格子走进花园，当然从第i个格子进去会消耗Di个单位的满足度，然后游历花园，在一个格子向右走需要耗费R个单位的满足度，向左走需要耗费L个单位的满足度，最后从第i个格子出花园又要耗费Fi个单位的满足度。<br />接下来，我们需要设计一套游历方案，使得最终获得的总满足度最高（太低的话洋娃娃会……）<br /></p>', '[{\"input\": \"5 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 3 1 1\\n\", \"output\": \"1\\n\"}]', '1277', '<p>对于30%数据，N<=10。<br />对于60%数据，N<=100。<br />对于100%数据，N<=1000。<br /></p>', '2016-08-18 14:26:50.000000', 'Mrain 原创\\nNOIP 2009·Dream Team 模拟赛 第一期 第三题\\n', '10000', '128', '1', '0', '0', '2', '1', '第一行依次给出三个正整数N，L，R。\\n第二行有N个整数，第i个数为Di。\\n第三行有N个整数，第i个数为Fi。\\n第四行有N个整数，第i个数为Ci。\\n', '仅需要输出一行包括一个整数，表示最大获得的满足度为多少。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('279', ' 情敌', '<p>在复杂的社会生活中，TT发现自己有了很多个情敌。为了自己能在感情事业上一帆风顺，TT决定在有限的时间里消灭掉他的情敌，使剩下的情敌对他的威胁最小。<br />TT有N个情敌，每一个情敌对他都有一个威胁值，消灭他也需要一个时间。但是TT的时间是有限的，他要在两个月内解决掉一些情敌，使得剩下的发敌对他的威胁最小。<br />但是，情敌们也不会束手待弊，他们也在不断得使自己变强，所以在第二个月，消灭情敌所需要的时间为第一个月的2倍。<br />或许，情敌们认为这样还是不够强大，所以他们决定选择M个情敌变为超级情敌，超级情敌可以保护一些普通情敌，换句话说想消灭超级情敌所保护的普通情敌，必须先消灭该超级情敌。一个普通情敌最多只能被一个超级情敌所保护。<br />现在TT想知道，该消灭哪些情敌才能使自己所受到的威胁最少。<br /></p>', '[{\"input\": \"5 8\\n7 1\\n1 1\\n2 5\\n3 6\\n4 2\\n5 4\\n6 8\\n7 4\\n1 1 5\\n\", \"output\": \"15\\n\"}]', '1278', '<p>对于30%的数据，N<=10，M=0，0<a,b<21。<br />对于100%的数据，N<=50，M<=4，0<a,b<101。<br /></p>', '2016-08-18 14:26:50.000000', 'Rgt 原创\\nNOIP 2009·Dream Team 模拟赛 第一期 第二题\\n', '10000', '128', '1', '0', '0', '3', '1', '第一行为两个数字a,b，表示TT第一个月和第二个月的时间。\\n第二行为两个数字N，M，表示TT有N个情敌，其中M个是超级情敌。\\n第3到第N+2行，每I行有两个数字x,t，表示第I-2个情敌对TT的威胁值和TT消灭他所需要的时间。\\n第N+3行到第N+2+M行，前两个数c,tot，表示第c个情敌是超级情敌，他保护的普通情敌有tot个，后面给出tot个数，即他所保护的普通情敌序号。\\n', '输出一个数字Min，表示TT所受到的最小的威胁。\\n', null, '0', null, null, null);
INSERT INTO `problem` VALUES ('280', ' 八', '<p>八是个很有趣的数字啊。八=发，八八=爸爸，88=拜拜。当然最有趣的还是8用二进制表示是1000。怎么样，有趣吧。当然题目和这些都没有关系。<br />某个人很无聊，他想找出[a,b]中能被8整除却不能被其他一些数整除的数。<br /></p>', '[{\"input\": \"3\\n7764 6082 462\\n2166 53442\\n\", \"output\": \"6378\\n\"}]', '1279', '<p>对于30%的数据， 1≤n≤5，1≤a≤b≤100000。<br />对于100%的数据，1≤n≤15，1≤a≤b≤10^9，N个数全都小于等于10000大于等于1。<br /></p>', '2016-08-18 14:26:50.000000', 'Rcx 原创\\nNOIP 2009·Dream Team 模拟赛 第一期 第一题\\n', '10000', '128', '1', '0', '0', '1', '1', '第一行一个数n，代表不能被整除的数的个数。\\n第二行n个数，中间用空格隔开。\\n第三行两个数a，b，中间一个空格。\\n', '一个整数，为[a,b]间能被8整除却不能被那n个数整除的数的个数。\\n', null, '0', null, null, null);
